name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/arcane
      AGENT_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/arcane-headless

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24

      - name: Install frontend deps
        run: pnpm -C frontend install --frozen-lockfile

      - name: Build frontend
        run: pnpm -C frontend build

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: backend/go.mod

      - name: Build manager binaries
        run: bash scripts/development/build-binaries.sh

      - name: Build agent binaries
        run: bash scripts/development/build-binaries.sh --agent

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Lowercase image names
        run: |
          echo "DOCKER_IMAGE_NAME=${DOCKER_IMAGE_NAME,,}" >> "$GITHUB_ENV"
          echo "AGENT_IMAGE_NAME=${AGENT_IMAGE_NAME,,}" >> "$GITHUB_ENV"

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata (manager)
        id: meta-manager
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=semver,pattern={{major}},prefix=v

      - name: Docker metadata (agent)
        id: meta-agent
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.AGENT_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=semver,pattern={{major}},prefix=v

      - name: Build and push manager image
        id: build-manager
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-manager.outputs.tags }}
          labels: ${{ steps.meta-manager.outputs.labels }}
          cache-from: type=gha,scope=release-manager
          cache-to: type=gha,scope=release-manager,mode=max

      - name: Build and push agent image
        id: build-agent
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile-agent
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-agent.outputs.tags }}
          labels: ${{ steps.meta-agent.outputs.labels }}
          cache-from: type=gha,scope=release-agent
          cache-to: type=gha,scope=release-agent,mode=max

      - name: Binary attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: 'backend/.bin/*'

      - name: Container image attestation (manager)
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: '${{ env.DOCKER_IMAGE_NAME }}'
          subject-digest: ${{ steps.build-manager.outputs.digest }}
          push-to-registry: true

      - name: Container image attestation (agent)
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: '${{ env.AGENT_IMAGE_NAME }}'
          subject-digest: ${{ steps.build-agent.outputs.digest }}
          push-to-registry: true

      - name: Upload binaries to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} backend/.bin/*

  publish-release:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release edit ${{ github.ref_name }} --draft=false
