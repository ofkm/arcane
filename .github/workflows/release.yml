name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

jobs:
  binaries:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/arcane
      AGENT_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/arcane-headless

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 1

      - name: Setup PNPM
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24

      - name: Install frontend deps
        run: pnpm -C frontend install --frozen-lockfile

      - name: Build frontend
        run: pnpm -C frontend build

      - name: Setup Go
        uses: actions/setup-go@v6
        with:
          go-version-file: backend/go.mod
          cache: true
          cache-dependency-path: backend/go.sum

      - name: Build manager binaries
        run: bash scripts/development/build-binaries.sh

      - name: Build agent binaries
        run: bash scripts/development/build-binaries.sh --agent

      - name: Binary attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: "backend/.bin/*"

      - name: Upload binaries to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.ref_name }} backend/.bin/*

  manager-image:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/arcane
    steps:
      - uses: actions/checkout@v5
        with: { fetch-depth: 1 }
      - uses: docker/setup-qemu-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: cloud
          endpoint: "kmendell/ofkm"
      - name: Lowercase image name
        run: echo "DOCKER_IMAGE_NAME=${DOCKER_IMAGE_NAME,,}" >> "$GITHUB_ENV"
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=semver,pattern={{major}},prefix=v
      - id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
    outputs:
      digest: ${{ steps.build.outputs.digest }}

  agent-image:
    runs-on: ubuntu-latest
    env:
      AGENT_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/arcane-headless
    steps:
      - uses: actions/checkout@v5
        with: { fetch-depth: 1 }
      - uses: docker/setup-qemu-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: cloud
          endpoint: "kmendell/ofkm"
      - name: Lowercase image name
        run: echo "AGENT_IMAGE_NAME=${AGENT_IMAGE_NAME,,}" >> "$GITHUB_ENV"
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.AGENT_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},prefix=v
            type=semver,pattern={{major}}.{{minor}},prefix=v
            type=semver,pattern={{major}},prefix=v
      - id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile-agent
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
    outputs:
      digest: ${{ steps.build.outputs.digest }}

  publish-release:
    runs-on: ubuntu-latest
    needs: [binaries, manager-image, agent-image]
    permissions:
      contents: write
      id-token: write
      packages: write
      attestations: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Container image attestation (manager)
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/arcane
          subject-digest: ${{ needs.manager-image.outputs.digest }}
          push-to-registry: true
      - name: Container image attestation (agent)
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/arcane-headless
          subject-digest: ${{ needs.agent-image.outputs.digest }}
          push-to-registry: true
      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release edit ${{ github.ref_name }} --draft=false
