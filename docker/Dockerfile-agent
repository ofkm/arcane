# Build agent binary
ARG VERSION="dev"
ARG REVISION="unknown"

FROM golang:1.25-alpine AS agent-builder
ARG BUILD_TAGS="exclude_frontend"
ARG VERSION
ARG REVISION
WORKDIR /build

RUN apk add --no-cache git ca-certificates tzdata curl

COPY ./backend/go.mod ./backend/go.sum ./
RUN go mod download

COPY ./backend ./backend

WORKDIR /build/backend
RUN CGO_ENABLED=0 \
    GOOS=linux \
    go build \
    -tags "${BUILD_TAGS}" \
    -ldflags "-w -s -X github.com/ofkm/arcane-backend/internal/config.Version=${VERSION} -X github.com/ofkm/arcane-backend/internal/config.Revision=${REVISION}" \
    -trimpath \
    -o /out/arcane-agent \
    ./cmd/main.go

FROM alpine:3 AS agent
RUN apk upgrade && apk --no-cache add ca-certificates tzdata curl su-exec

WORKDIR /app
RUN mkdir -p /app/data && chmod 755 /app/data

COPY --from=agent-builder /out/arcane-agent /usr/local/bin/arcane-agent

COPY --chmod=755 ../scripts/docker/entrypoint.sh /usr/local/bin/entrypoint.sh
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

ARG VERSION="dev"
ARG REVISION="unknown"

ENV ENVIRONMENT=production \
    AGENT_MODE=true \
    GIN_MODE=release \
    PORT=3553

LABEL org.opencontainers.image.authors="OFKM Technologies"
LABEL org.opencontainers.image.url="https://github.com/ofkm/arcane"
LABEL org.opencontainers.image.documentation="https://github.com/ofkm/arcane/blob/main/README.md"
LABEL org.opencontainers.image.source="https://github.com/ofkm/arcane"
LABEL org.opencontainers.image.version=$VERSION
LABEL org.opencontainers.image.revision=$REVISION
LABEL org.opencontainers.image.licenses="BSD-3-Clause"
LABEL org.opencontainers.image.ref.name="arcane-agent"
LABEL org.opencontainers.image.title="Arcane Agent"
LABEL org.opencontainers.image.description="Arcane Agent"

LABEL com.ofkm.arcane.updater="false"
LABEL com.ofkm.arcane.server="true"

EXPOSE 3553
VOLUME ["/app/data"]

CMD ["/usr/local/bin/arcane-agent"]