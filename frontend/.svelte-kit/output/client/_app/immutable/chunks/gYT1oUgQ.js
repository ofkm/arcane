const S=Symbol.for("constructDateFrom");function v(t,n){return typeof t=="function"?t(n):t&&typeof t=="object"&&S in t?t[S](n):t instanceof Date?new t.constructor(n):new Date(n)}function m(t,n){return v(t,t)}let k={};function F(){return k}function W(t){const n=m(t),e=new Date(Date.UTC(n.getFullYear(),n.getMonth(),n.getDate(),n.getHours(),n.getMinutes(),n.getSeconds(),n.getMilliseconds()));return e.setUTCFullYear(n.getFullYear()),+t-+e}function P(t,...n){const e=v.bind(null,n.find(a=>typeof a=="object"));return n.map(e)}function b(t,n){const e=+m(t)-+m(n);return e<0?-1:e>0?1:e}function x(t){return v(t,Date.now())}function T(t,n,e){const[a,r]=P(e==null?void 0:e.in,t,n),s=a.getFullYear()-r.getFullYear(),i=a.getMonth()-r.getMonth();return s*12+i}function p(t){return n=>{const e=Math.trunc,a=e(n);return a===0?0:a}}function A(t,n){return+m(t)-+m(n)}function O(t,n){const e=m(t);return e.setHours(23,59,59,999),e}function C(t,n){const e=m(t),a=e.getMonth();return e.setFullYear(e.getFullYear(),a+1,0),e.setHours(23,59,59,999),e}function I(t,n){const e=m(t);return+O(e)==+C(e)}function _(t,n,e){const[a,r,s]=P(e==null?void 0:e.in,t,t,n),i=b(r,s),o=Math.abs(T(r,s));if(o<1)return 0;r.getMonth()===1&&r.getDate()>27&&r.setDate(30),r.setMonth(r.getMonth()-i*o);let d=b(r,s)===-i;I(a)&&o===1&&b(a,s)===1&&(d=!1);const c=i*(o-+d);return c===0?0:c}function j(t,n,e){const a=A(t,n)/1e3;return p()(a)}const X={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}},Y=(t,n,e)=>{let a;const r=X[t];return typeof r=="string"?a=r:n===1?a=r.one:a=r.other.replace("{{count}}",n.toString()),e!=null&&e.addSuffix?e.comparison&&e.comparison>0?"in "+a:a+" ago":a};function D(t){return(n={})=>{const e=n.width?String(n.width):t.defaultWidth;return t.formats[e]||t.formats[t.defaultWidth]}}const N={full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},z={full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},L={full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},V={date:D({formats:N,defaultWidth:"full"}),time:D({formats:z,defaultWidth:"full"}),dateTime:D({formats:L,defaultWidth:"full"})},q={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"},E=(t,n,e,a)=>q[t];function y(t){return(n,e)=>{const a=e!=null&&e.context?String(e.context):"standalone";let r;if(a==="formatting"&&t.formattingValues){const i=t.defaultFormattingWidth||t.defaultWidth,o=e!=null&&e.width?String(e.width):i;r=t.formattingValues[o]||t.formattingValues[i]}else{const i=t.defaultWidth,o=e!=null&&e.width?String(e.width):t.defaultWidth;r=t.values[o]||t.values[i]}const s=t.argumentCallback?t.argumentCallback(n):n;return r[s]}}const J={narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},R={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},H={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},Q={narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},U={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},B={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},G=(t,n)=>{const e=Number(t),a=e%100;if(a>20||a<10)switch(a%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd"}return e+"th"},K={ordinalNumber:G,era:y({values:J,defaultWidth:"wide"}),quarter:y({values:R,defaultWidth:"wide",argumentCallback:t=>t-1}),month:y({values:H,defaultWidth:"wide"}),day:y({values:Q,defaultWidth:"wide"}),dayPeriod:y({values:U,defaultWidth:"wide",formattingValues:B,defaultFormattingWidth:"wide"})};function g(t){return(n,e={})=>{const a=e.width,r=a&&t.matchPatterns[a]||t.matchPatterns[t.defaultMatchWidth],s=n.match(r);if(!s)return null;const i=s[0],o=a&&t.parsePatterns[a]||t.parsePatterns[t.defaultParseWidth],d=Array.isArray(o)?Z(o,f=>f.test(i)):$(o,f=>f.test(i));let c;c=t.valueCallback?t.valueCallback(d):d,c=e.valueCallback?e.valueCallback(c):c;const M=n.slice(i.length);return{value:c,rest:M}}}function $(t,n){for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)&&n(t[e]))return e}function Z(t,n){for(let e=0;e<t.length;e++)if(n(t[e]))return e}function tt(t){return(n,e={})=>{const a=n.match(t.matchPattern);if(!a)return null;const r=a[0],s=n.match(t.parsePattern);if(!s)return null;let i=t.valueCallback?t.valueCallback(s[0]):s[0];i=e.valueCallback?e.valueCallback(i):i;const o=n.slice(r.length);return{value:i,rest:o}}}const et=/^(\d+)(th|st|nd|rd)?/i,nt=/\d+/i,at={narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},rt={any:[/^b/i,/^(a|c)/i]},ot={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},it={any:[/1/i,/2/i,/3/i,/4/i]},st={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},ut={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},ct={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},dt={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},lt={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},mt={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},ht={ordinalNumber:tt({matchPattern:et,parsePattern:nt,valueCallback:t=>parseInt(t,10)}),era:g({matchPatterns:at,defaultMatchWidth:"wide",parsePatterns:rt,defaultParseWidth:"any"}),quarter:g({matchPatterns:ot,defaultMatchWidth:"wide",parsePatterns:it,defaultParseWidth:"any",valueCallback:t=>t+1}),month:g({matchPatterns:st,defaultMatchWidth:"wide",parsePatterns:ut,defaultParseWidth:"any"}),day:g({matchPatterns:ct,defaultMatchWidth:"wide",parsePatterns:dt,defaultParseWidth:"any"}),dayPeriod:g({matchPatterns:lt,defaultMatchWidth:"any",parsePatterns:mt,defaultParseWidth:"any"})},ft={code:"en-US",formatDistance:Y,formatLong:V,formatRelative:E,localize:K,match:ht,options:{weekStartsOn:0,firstWeekContainsDate:1}};function yt(t,n,e){const a=F(),r=(e==null?void 0:e.locale)??a.locale??ft,s=2520,i=b(t,n);if(isNaN(i))throw new RangeError("Invalid time value");const o=Object.assign({},e,{addSuffix:e==null?void 0:e.addSuffix,comparison:i}),[d,c]=P(e==null?void 0:e.in,...i>0?[n,t]:[t,n]),M=j(c,d),f=(W(c)-W(d))/1e3,u=Math.round((M-f)/60);let h;if(u<2)return u===0?r.formatDistance("lessThanXMinutes",1,o):r.formatDistance("xMinutes",u,o);if(u<45)return r.formatDistance("xMinutes",u,o);if(u<90)return r.formatDistance("aboutXHours",1,o);if(u<1440){const l=Math.round(u/60);return r.formatDistance("aboutXHours",l,o)}else{if(u<s)return r.formatDistance("xDays",1,o);if(u<43200){const l=Math.round(u/1440);return r.formatDistance("xDays",l,o)}else if(u<43200*2)return h=Math.round(u/43200),r.formatDistance("aboutXMonths",h,o)}if(h=_(c,d),h<12){const l=Math.round(u/43200);return r.formatDistance("xMonths",l,o)}else{const l=h%12,w=Math.trunc(h/12);return l<3?r.formatDistance("aboutXYears",w,o):l<9?r.formatDistance("overXYears",w,o):r.formatDistance("almostXYears",w+1,o)}}function Mt(t,n){return yt(t,x(t),n)}const gt=5*60*1e3;function bt(t){if(!t.lastSeen)return!0;const n=new Date,e=new Date(t.lastSeen);return n.getTime()-e.getTime()>gt}function wt(t){return bt(t)?"offline":t.status}export{Mt as f,wt as g};
