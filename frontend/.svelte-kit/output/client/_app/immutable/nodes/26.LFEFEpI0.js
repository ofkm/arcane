var De=Object.defineProperty;var Oe=(z,t,r)=>t in z?De(z,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):z[t]=r;var V=(z,t,r)=>Oe(z,typeof t!="symbol"?t+"":t,r);import{f as h,h as Ie,a as m,c as Be,s as E,t as D}from"../chunks/zguDtZw-.js";import{p as Je,d as Ne,i as qe,a as Ge,$ as Me,s as a,c as v,f as T,h as y,r as c,t as j,g as u,u as O,e as fe,b as Ye}from"../chunks/SIFgIYqZ.js";import{i as X,a as He,b as We}from"../chunks/D4OMRqmI.js";import{e as Ke,i as Qe}from"../chunks/CCdH-GF7.js";import{c as k}from"../chunks/BmbK19Nn.js";import{B as I}from"../chunks/DsjzulNM.js";import{I as Ve}from"../chunks/87Ty6o0e.js";import{L as Xe}from"../chunks/DUYgD2_s.js";import{C as N}from"../chunks/BUTdIsFV.js";import{B as Ze}from"../chunks/DTWxSKed.js";import{A as Z}from"../chunks/m9ItHG6J.js";import{A as ee,a as te}from"../chunks/iMjrFJrG.js";import{S as ge}from"../chunks/n3W22Cu1.js";import{s as he,a as G,u as et}from"../chunks/DGZIYs0n.js";import{b as re}from"../chunks/Bt-Xh7oU.js";import{t as R}from"../chunks/BJCWvCOq.js";import"../chunks/CWlk9DSI.js";import{i as _e}from"../chunks/CGNubMbN.js";import{h as tt,t as $e}from"../chunks/CHemGuYG.js";import{R as ye}from"../chunks/B877H2_W.js";import{S as rt}from"../chunks/BKkfcLAR.js";import{F as xe,C as st}from"../chunks/kDqmmi48.js";import{G as se}from"../chunks/BjVJhjER.js";import{F as at}from"../chunks/CJVn1vXg.js";import{U as ot}from"../chunks/BrT7AbVn.js";import{P as it}from"../chunks/DYFwiHrC.js";import{E as nt}from"../chunks/GAc1BGJd.js";import{T as lt}from"../chunks/BhZTThSR.js";class dt{constructor(){V(this,"cache",new Map);V(this,"defaultCacheTtl",3600)}async fetchRegistry(t){try{const r=this.cache.get(t.url),F=Date.now(),C=(t.cache_ttl||this.defaultCacheTtl)*1e3;if(r&&F-r.timestamp<C)return r.data;let b;if(re){const p=`/api/templates?url=${encodeURIComponent(t.url)}`,P=await fetch(p);if(!P.ok){const B=await P.json().catch(()=>({message:P.statusText}));throw new Error(B.message||`Failed to fetch registry: ${P.statusText}`)}b=await P.json()}return this.validateRegistry(b),this.cache.set(t.url,{data:b,timestamp:F}),b}catch(r){return console.error(`Error fetching template registry from ${t.url}:`,r),null}}async fetchTemplateContent(t){try{if(re){const r=await fetch("/api/templates",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:t.compose_url,content:!0})});if(!r.ok){const C=await r.json().catch(()=>({message:r.statusText}));throw new Error(C.message||`Failed to fetch template content: ${r.statusText}`)}return(await r.json()).content}}catch(r){return console.error(`Error fetching template content from ${t.compose_url}:`,r),null}}async fetchEnvContent(t){try{if(re){const r=await fetch("/api/templates",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:t,content:!0})});if(!r.ok){const C=await r.json().catch(()=>({message:r.statusText}));throw new Error(C.message||`Failed to fetch environment content: ${r.statusText}`)}return(await r.json()).content}}catch(r){return console.error(`Error fetching environment content from ${t}:`,r),null}}convertToComposeTemplate(t,r){return{id:`${r}:${t.id}`,name:t.name,description:t.description,content:"",isCustom:!0,isRemote:!0,metadata:{version:t.version,author:t.author,tags:t.tags,registry:r,remoteUrl:t.compose_url,envUrl:t.env_url,documentationUrl:t.documentation_url,iconUrl:t.icon_url,updatedAt:t.updated_at}}}validateRegistry(t){if(!t.name||!t.version||!Array.isArray(t.templates))throw new Error("Invalid registry format");for(const r of t.templates)if(!r.id||!r.name||!r.compose_url)throw new Error(`Invalid template format: ${r.id}`)}clearCache(){this.cache.clear()}}const ae=new dt;var ct=h("<!> Saving...",1),mt=h("<!> Save Settings",1),vt=h('<div class="flex items-center gap-3"><!> <div><p class="text-2xl font-bold"> </p> <p class="text-sm text-muted-foreground">Local Templates</p></div></div>'),ut=h('<div class="flex items-center gap-3"><!> <div><p class="text-2xl font-bold"> </p> <p class="text-sm text-muted-foreground">Remote Templates</p></div></div>'),pt=h('<div class="flex items-center gap-3"><!> <div><p class="text-2xl font-bold"> </p> <p class="text-sm text-muted-foreground">Registries</p></div></div>'),ft=h('Place your custom Docker Compose templates in the <code class="bg-muted px-1 rounded text-xs">data/templates/compose/</code> directory. Templates should be YAML files with a descriptive filename. You can also include matching <code class="bg-muted px-1 rounded text-xs">.env</code> files for environment variables.',1),gt=h("<!> <!> <!>",1),ht=h("<!> <!> <!>",1),_t=h("<!> Copy",1),$t=h('<p>Get started quickly with our community registry containing popular templates:</p> <div class="flex items-center gap-2 mt-2"><code class="bg-white dark:bg-gray-800 px-2 py-1 rounded text-xs">https://templates.arcane.ofkm.dev/registry.json</code> <!></div>',1),yt=h("<!> <!> <!>",1),xt=h("<!> ",1),bt=h('<h3 class="font-medium mb-3">Add Registry</h3> <div class="space-y-3"><div><!> <!> <p class="text-xs text-muted-foreground mt-1">The registry name will be automatically detected from the JSON file</p></div> <!></div>',1),wt=h('<p class="text-xs text-muted-foreground mt-1"> </p>'),Rt=h('<div class="flex items-center justify-between"><div class="flex-1"><div class="flex items-center gap-2 mb-1"><h4 class="font-medium"> </h4> <!></div> <p class="text-sm text-muted-foreground break-all"> </p> <!></div> <div class="flex items-center gap-2"><!> <!> <!></div></div>'),St=h('<div class="space-y-3"></div>'),Tt=h('<div class="text-center py-6 text-muted-foreground"><!> <p class="mb-2">No registries configured</p> <p class="text-sm">Add a remote template registry to access community templates</p></div>'),Ct=h('<div class="space-y-6"><div class="flex flex-col sm:flex-row justify-between sm:items-center gap-4"><div><h1 class="text-3xl font-bold tracking-tight">Template Settings</h1> <p class="text-sm text-muted-foreground mt-1">Manage Docker Compose template sources and registries <a href="https://arcane.ofkm.dev/docs/templates/use-templates" class="text-primary hover:underline ml-1">â†’ Learn more</a></p></div> <!></div> <div class="grid grid-cols-1 md:grid-cols-3 gap-4"><!> <!> <!></div> <!> <div class="space-y-4"><h2 class="text-xl font-semibold">Local Templates</h2> <!></div> <!> <div class="space-y-4"><div class="flex items-center justify-between"><h2 class="text-xl font-semibold">Remote Template Registries</h2></div> <!> <!> <!> <!></div></div>');function sr(z,t){Je(t,!0);const[r,F]=He(),C=()=>We(G,"$settingsStore",r);let b=Ye(""),p=Ne({saving:!1,addingRegistry:!1,refreshing:new Set,removing:new Set});qe(()=>{t.data.settings&&et(t.data.settings)});const P=O(()=>C().templateRegistries||[]);async function B(e){const n=await $e(he());return n.error?(R.error(n.error.message||"Failed to save settings"),!1):(R.success(e),await _e(),!0)}async function be(){if(!u(b).trim()){R.error("Registry URL is required");return}if(!p.addingRegistry){p.addingRegistry=!0;try{const e={url:u(b).trim(),name:"Loading...",enabled:!0};console.log("Testing registry URL:",e.url);const n=await ae.fetchRegistry(e);if(!n){R.error("Failed to fetch registry or invalid format");return}const s={url:u(b).trim(),name:n.name,enabled:!0};console.log("Registry test successful, adding to store with name:",n.name),G.update(i=>({...i,templateRegistries:[...i.templateRegistries||[],s]})),await B(`Registry "${n.name}" added and saved successfully`)&&fe(b,"")}catch(e){console.error("Error adding registry:",e),R.error(e instanceof Error?e.message:"Failed to add registry")}finally{p.addingRegistry=!1}}}async function we(e){if(!p.removing.has(e)){p.removing.add(e);try{G.update(n=>({...n,templateRegistries:(n.templateRegistries||[]).filter(s=>s.url!==e)})),await B("Registry removed and saved successfully")}catch{R.error("Failed to remove registry")}finally{p.removing.delete(e)}}}async function Re(e){if(!p.refreshing.has(e)){p.refreshing.add(e);try{const s=(C().templateRegistries||[]).find(i=>i.url===e);if(!s){R.error("Registry not found");return}ae.clearCache();const o=await ae.fetchRegistry(s);if(!o){R.error("Failed to refresh registry");return}G.update(i=>({...i,templateRegistries:(i.templateRegistries||[]).map(l=>l.url===e?{...l,name:o.name,last_updated:new Date().toISOString()}:l)})),await B("Registry refreshed and saved successfully")}catch{R.error("Failed to refresh registry")}finally{p.refreshing.delete(e)}}}async function Se(){p.saving||(p.saving=!0,console.log("Saving settings to server:",C()),tt({result:await $e(he()),message:"Error Saving Settings",setLoadingState:e=>p.saving=e,onSuccess:async()=>{R.success("Settings saved successfully"),await _e()}}))}function Te(e){navigator.clipboard.writeText(e).then(()=>{R.success("Copied to clipboard")}).catch(()=>{R.error("Failed to copy")})}var M=Ct();Ie(e=>{Me.title="Template Settings - Arcane"});var Y=v(M),Ce=a(v(Y),2);I(Ce,{onclick:Se,get disabled(){return p.saving},class:"h-10 arcane-button-save",variant:"outline",children:(e,n)=>{var s=Be(),o=T(s);{var i=d=>{var _=ct(),f=T(_);ye(f,{class:"animate-spin size-4"}),y(),m(d,_)},l=d=>{var _=mt(),f=T(_);rt(f,{class:"size-4"}),y(),m(d,_)};X(o,d=>{p.saving?d(i):d(l,!1)})}m(e,s)},$$slots:{default:!0}}),c(Y);var H=a(Y,2),oe=v(H);N(oe,{class:"p-4",children:(e,n)=>{var s=vt(),o=v(s);xe(o,{class:"size-8 text-blue-500"});var i=a(o,2),l=v(i),d=v(l,!0);c(l),y(2),c(i),c(s),j(()=>E(d,t.data.localTemplateCount)),m(e,s)},$$slots:{default:!0}});var ie=a(oe,2);N(ie,{class:"p-4",children:(e,n)=>{var s=ut(),o=v(s);se(o,{class:"size-8 text-green-500"});var i=a(o,2),l=v(i),d=v(l,!0);c(l),y(2),c(i),c(s),j(()=>E(d,t.data.remoteTemplateCount)),m(e,s)},$$slots:{default:!0}});var Pe=a(ie,2);N(Pe,{class:"p-4",children:(e,n)=>{var s=pt(),o=v(s);at(o,{class:"size-8 text-purple-500"});var i=a(o,2),l=v(i),d=v(l,!0);c(l),y(2),c(i),c(s),j(()=>E(d,u(P).length)),m(e,s)},$$slots:{default:!0}}),c(H);var ne=a(H,2);ge(ne,{});var W=a(ne,2),ke=a(v(W),2);k(ke,()=>Z,(e,n)=>{n(e,{children:(s,o)=>{var i=gt(),l=T(i);xe(l,{class:"size-4"});var d=a(l,2);k(d,()=>ee,(f,g)=>{g(f,{children:(x,w)=>{y();var $=D("Local Template Directory");m(x,$)},$$slots:{default:!0}})});var _=a(d,2);k(_,()=>te,(f,g)=>{g(f,{children:(x,w)=>{y();var $=ft();y(4),m(x,$)},$$slots:{default:!0}})}),m(s,i)},$$slots:{default:!0}})}),c(W);var le=a(W,2);ge(le,{});var de=a(le,2),ce=a(v(de),2);k(ce,()=>Z,(e,n)=>{n(e,{children:(s,o)=>{var i=ht(),l=T(i);se(l,{class:"size-4"});var d=a(l,2);k(d,()=>ee,(f,g)=>{g(f,{children:(x,w)=>{y();var $=D("Remote Registries");m(x,$)},$$slots:{default:!0}})});var _=a(d,2);k(_,()=>te,(f,g)=>{g(f,{children:(x,w)=>{y();var $=D("Add remote template registries to access community templates. Registry names are automatically detected from the JSON manifest. Changes are saved automatically.");m(x,$)},$$slots:{default:!0}})}),m(s,i)},$$slots:{default:!0}})});var me=a(ce,2);k(me,()=>Z,(e,n)=>{n(e,{class:"border-blue-200 bg-blue-50 dark:border-blue-800 dark:bg-blue-950",children:(s,o)=>{var i=yt(),l=T(i);ot(l,{class:"size-4"});var d=a(l,2);k(d,()=>ee,(f,g)=>{g(f,{children:(x,w)=>{y();var $=D("Community Registry");m(x,$)},$$slots:{default:!0}})});var _=a(d,2);k(_,()=>te,(f,g)=>{g(f,{class:"space-y-2",children:(x,w)=>{var $=$t(),A=a(T($),2),K=a(v(A),2);I(K,{size:"sm",variant:"outline",onclick:()=>Te("https://templates.arcane.ofkm.dev/registry.json"),children:(Q,ue)=>{var J=_t(),q=T(J);st(q,{class:"size-3 mr-1"}),y(),m(Q,J)},$$slots:{default:!0}}),c(A),m(x,$)},$$slots:{default:!0}})}),m(s,i)},$$slots:{default:!0}})});var ve=a(me,2);N(ve,{class:"p-4",children:(e,n)=>{var s=bt(),o=a(T(s),2),i=v(o),l=v(i);Xe(l,{for:"url",children:(g,x)=>{y();var w=D("Registry URL");m(g,w)},$$slots:{default:!0}});var d=a(l,2);Ve(d,{id:"url",type:"url",placeholder:"https://raw.githubusercontent.com/username/repo/main/registry.json",get disabled(){return p.addingRegistry},required:!0,get value(){return u(b)},set value(g){fe(b,g,!0)}}),y(2),c(i);var _=a(i,2);const f=O(()=>p.addingRegistry||!u(b).trim());I(_,{onclick:be,get disabled(){return u(f)},children:(g,x)=>{var w=xt(),$=T(w);it($,{class:"size-4 mr-2"});var A=a($);j(()=>E(A,` ${p.addingRegistry?"Testing & Adding...":"Add Registry"}`)),m(g,w)},$$slots:{default:!0}}),c(o),m(e,s)},$$slots:{default:!0}});var ze=a(ve,2);{var Ae=e=>{var n=St();Ke(n,21,()=>u(P),Qe,(s,o)=>{N(s,{class:"p-4",children:(i,l)=>{var d=Rt(),_=v(d),f=v(_),g=v(f),x=v(g,!0);c(g);var w=a(g,2);const $=O(()=>u(o).enabled?"default":"secondary");Ze(w,{get variant(){return u($)},children:(S,L)=>{y();var U=D();j(()=>E(U,u(o).enabled?"Enabled":"Disabled")),m(S,U)},$$slots:{default:!0}}),c(f);var A=a(f,2),K=v(A,!0);c(A);var Q=a(A,2);{var ue=S=>{var L=wt(),U=v(L);c(L),j(Ue=>E(U,`Last updated: ${Ue??""}`),[()=>new Date(u(o).last_updated).toLocaleString()]),m(S,L)};X(Q,S=>{u(o).last_updated&&S(ue)})}c(_);var J=a(_,2),q=v(J);const Le=O(()=>p.refreshing.has(u(o).url));I(q,{variant:"outline",size:"sm",onclick:()=>Re(u(o).url),get disabled(){return u(Le)},children:(S,L)=>{const U=O(()=>`size-4 ${p.refreshing.has(u(o).url)?"animate-spin":""}`);ye(S,{get class(){return u(U)}})},$$slots:{default:!0}});var pe=a(q,2);I(pe,{variant:"outline",size:"sm",onclick:()=>window.open(u(o).url,"_blank"),children:(S,L)=>{nt(S,{class:"size-4"})},$$slots:{default:!0}});var je=a(pe,2);const Fe=O(()=>p.removing.has(u(o).url));I(je,{variant:"destructive",size:"sm",onclick:()=>we(u(o).url),get disabled(){return u(Fe)},children:(S,L)=>{lt(S,{class:"size-4"})},$$slots:{default:!0}}),c(J),c(d),j(()=>{E(x,u(o).name),E(K,u(o).url)}),m(i,d)},$$slots:{default:!0}})}),c(n),m(e,n)},Ee=e=>{var n=Tt(),s=v(n);se(s,{class:"size-12 mx-auto mb-4 opacity-50"}),y(4),c(n),m(e,n)};X(ze,e=>{u(P).length>0?e(Ae):e(Ee,!1)})}c(de),c(M),m(z,M),Ge(),F()}export{sr as component};
