{"version":3,"file":"_server.ts-B-j24r1k.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/stacks/_stackId_/pull/_server.ts.js"],"sourcesContent":["import { getStack } from \"../../../../../../chunks/stack-custom-service.js\";\nimport { A as ApiErrorCode } from \"../../../../../../chunks/errors.type.js\";\nimport { t as tryCatch } from \"../../../../../../chunks/try-catch.js\";\nimport { g as getDockerClient } from \"../../../../../../chunks/core.js\";\nimport { e as extractDockerErrorMessage } from \"../../../../../../chunks/errors.util.js\";\nimport { URL } from \"url\";\nimport { g as getSettings } from \"../../../../../../chunks/settings-service.js\";\nimport { p as parseImageNameForRegistry, a as areRegistriesEquivalent } from \"../../../../../../chunks/registry.utils.js\";\nimport { j as json } from \"../../../../../../chunks/index.js\";\nconst POST = async ({ params, request }) => {\n  const id = params.stackId;\n  const docker = await getDockerClient();\n  const reqUrl = new URL(request.url);\n  const platform = reqUrl.searchParams.get(\"platform\");\n  const settings = await getSettings();\n  const stackResult = await tryCatch(getStack(id));\n  if (stackResult.error || !stackResult.data || !stackResult.data.composeContent) {\n    const response = {\n      success: false,\n      error: \"Stack not found or has no compose content\",\n      code: ApiErrorCode.NOT_FOUND,\n      details: stackResult.error\n    };\n    return json(response, { status: 404 });\n  }\n  const stack = stackResult.data;\n  const composeLines = stack.composeContent.split(\"\\n\");\n  const imageLines = composeLines.filter((line) => line.trim().startsWith(\"image:\") || line.includes(\" image:\"));\n  if (imageLines.length === 0) {\n    const response = {\n      success: false,\n      error: \"No images found in stack compose file\",\n      code: ApiErrorCode.BAD_REQUEST\n    };\n    return json(response, { status: 400 });\n  }\n  const imageNames = imageLines.map((line) => {\n    const imagePart = line.split(\"image:\")[1].trim();\n    const imageName = imagePart.replace(/['\"]/g, \"\").split(\" \")[0];\n    return imageName.includes(\":\") ? imageName : `${imageName}:latest`;\n  });\n  const pullResults = [];\n  let overallSuccess = true;\n  for (const imageName of imageNames) {\n    try {\n      let pullAuthConfig = void 0;\n      const { registry: imageRegistryHost } = parseImageNameForRegistry(imageName);\n      if (settings.registryCredentials && settings.registryCredentials.length > 0) {\n        const storedCredential = settings.registryCredentials.find((cred) => areRegistriesEquivalent(cred.url, imageRegistryHost));\n        if (storedCredential) {\n          let serverAddressForAuth = storedCredential.url;\n          if (areRegistriesEquivalent(storedCredential.url, \"docker.io\")) {\n            serverAddressForAuth = \"https://index.docker.io/v1/\";\n          }\n          pullAuthConfig = {\n            username: storedCredential.username,\n            password: storedCredential.password,\n            serveraddress: serverAddressForAuth\n          };\n        }\n      }\n      const pullOptions = {};\n      if (pullAuthConfig) {\n        pullOptions.authconfig = pullAuthConfig;\n      }\n      if (platform) {\n        pullOptions.platform = platform;\n      }\n      const pullStream = await docker.pull(imageName, pullOptions);\n      await new Promise((resolve, reject) => {\n        docker.modem.followProgress(\n          pullStream,\n          (err) => {\n            if (err) {\n              const errMsg = extractDockerErrorMessage(err);\n              pullResults.push({\n                image: imageName,\n                success: false,\n                error: errMsg,\n                details: err\n              });\n              overallSuccess = false;\n              reject(err);\n            } else {\n              pullResults.push({\n                image: imageName,\n                success: true\n              });\n              resolve();\n            }\n          },\n          () => {\n          }\n        );\n      }).catch(() => {\n      });\n    } catch (error) {\n      const errMsg = error.message || \"Unknown error pulling image\";\n      pullResults.push({\n        image: imageName,\n        success: false,\n        error: errMsg,\n        details: error\n      });\n      overallSuccess = false;\n    }\n  }\n  if (overallSuccess) {\n    return json({\n      success: true,\n      message: `All images for stack ${id} pulled successfully.`,\n      images: pullResults\n    });\n  } else {\n    const failedImages = pullResults.filter((r) => !r.success);\n    const errorMessages = failedImages.map((img) => `${img.image}: ${img.error}`);\n    const response = {\n      success: false,\n      error: errorMessages.join(\"; \"),\n      code: ApiErrorCode.DOCKER_API_ERROR,\n      failedCount: failedImages.length,\n      details: pullResults\n    };\n    return json(response, { status: 500 });\n  }\n};\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}