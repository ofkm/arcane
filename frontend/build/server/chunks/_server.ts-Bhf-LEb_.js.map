{"version":3,"file":"_server.ts-Bhf-LEb_.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/images/maturity/_server.ts.js"],"sourcesContent":["import { j as json } from \"../../../../../chunks/index.js\";\nimport { l as listImages, i as imageMaturityDb, c as checkImageMaturityBatch } from \"../../../../../chunks/image-service.js\";\nimport { A as ApiErrorCode } from \"../../../../../chunks/errors.type.js\";\nimport { t as tryCatch } from \"../../../../../chunks/try-catch.js\";\nconst POST = async ({ request }) => {\n  try {\n    const body = await request.json().catch(() => ({}));\n    const { force = false } = body;\n    console.log(\"Manual maturity check triggered\", { force });\n    const imagesResult = await tryCatch(listImages());\n    if (imagesResult.error) {\n      const response = {\n        success: false,\n        error: \"Failed to list Docker images\",\n        code: ApiErrorCode.DOCKER_API_ERROR,\n        details: imagesResult.error\n      };\n      return json(response, { status: 500 });\n    }\n    const images = imagesResult.data;\n    const validImages = images.filter((image) => image.repo !== \"<none>\" && image.tag !== \"<none>\");\n    if (validImages.length === 0) {\n      return json({\n        success: true,\n        message: \"No valid images found to check\",\n        stats: { total: 0, checked: 0, updated: 0 }\n      });\n    }\n    const imageIds = validImages.map((img) => img.Id);\n    let imageIdsToCheck = imageIds;\n    if (!force) {\n      const imagesToCheck = await imageMaturityDb.getImagesNeedingCheck(120, 1e3);\n      const imageIdsNeedingCheck = new Set(imagesToCheck.map((record) => record.id));\n      const existingMaturityRecords = await imageMaturityDb.getImageMaturityBatch(imageIds);\n      for (const imageId of imageIds) {\n        if (!existingMaturityRecords.has(imageId)) {\n          imageIdsNeedingCheck.add(imageId);\n        }\n      }\n      imageIdsToCheck = imageIds.filter((id) => imageIdsNeedingCheck.has(id));\n    }\n    console.log(`Checking maturity for ${imageIdsToCheck.length} of ${imageIds.length} images`);\n    const batchSize = 20;\n    let totalChecked = 0;\n    let totalUpdated = 0;\n    for (let i = 0; i < imageIdsToCheck.length; i += batchSize) {\n      const batch = imageIdsToCheck.slice(i, i + batchSize);\n      const results = await checkImageMaturityBatch(batch);\n      totalChecked += batch.length;\n      totalUpdated += Array.from(results.values()).filter((maturity) => maturity?.updatesAvailable).length;\n      if (i + batchSize < imageIdsToCheck.length) {\n        await new Promise((resolve) => setTimeout(resolve, 500));\n      }\n    }\n    const stats = await imageMaturityDb.getMaturityStats();\n    return json({\n      success: true,\n      message: `Checked ${totalChecked} images, found ${totalUpdated} with updates`,\n      stats: {\n        ...stats,\n        total: imageIds.length,\n        checked: totalChecked,\n        updated: totalUpdated\n      }\n    });\n  } catch (error) {\n    console.error(\"Error in manual maturity check:\", error);\n    const response = {\n      success: false,\n      error: error instanceof Error ? error.message : \"Unknown error occurred\",\n      code: ApiErrorCode.INTERNAL_SERVER_ERROR,\n      details: error\n    };\n    return json(response, { status: 500 });\n  }\n};\nconst GET = async () => {\n  try {\n    const stats = await imageMaturityDb.getMaturityStats();\n    return json({\n      success: true,\n      stats\n    });\n  } catch (error) {\n    console.error(\"Error getting maturity stats:\", error);\n    return json(\n      {\n        success: false,\n        error: \"Failed to get maturity statistics\"\n      },\n      { status: 500 }\n    );\n  }\n};\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}