{"version":3,"file":"_server.ts-CW8pMs0b.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/docker/test-connection/_server.ts.js"],"sourcesContent":["import { j as json } from \"../../../../../chunks/index.js\";\nimport { a as getDockerInfo } from \"../../../../../chunks/core.js\";\nconst GET = async ({ url }) => {\n  const hostToTest = url.searchParams.get(\"host\");\n  if (!hostToTest) {\n    return json(\n      { success: false, error: 'Missing \"host\" query parameter.' },\n      { status: 400 }\n      // Bad Request\n    );\n  }\n  try {\n    await getDockerInfo();\n    return json({\n      success: true,\n      message: `Successfully connected to Docker Engine at ${hostToTest}.`\n    });\n  } catch (error) {\n    console.error(`Docker connection test failed for host ${hostToTest}:`, error);\n    return json(\n      {\n        success: false,\n        error: error.message || `Failed to connect to Docker Engine at ${hostToTest}.`\n      },\n      { status: 503 }\n    );\n  }\n};\nexport {\n  GET\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAEK,MAAC,GAAG,GAAG,OAAO,EAAE,GAAG,EAAE,KAAK;AAC/B,EAAE,MAAM,UAAU,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC;AACjD,EAAE,IAAI,CAAC,UAAU,EAAE;AACnB,IAAI,OAAO,IAAI;AACf,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,iCAAiC,EAAE;AAClE,MAAM,EAAE,MAAM,EAAE,GAAG;AACnB;AACA,KAAK;AACL;AACA,EAAE,IAAI;AACN,IAAI,MAAM,aAAa,EAAE;AACzB,IAAI,OAAO,IAAI,CAAC;AAChB,MAAM,OAAO,EAAE,IAAI;AACnB,MAAM,OAAO,EAAE,CAAC,2CAA2C,EAAE,UAAU,CAAC,CAAC;AACzE,KAAK,CAAC;AACN,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,uCAAuC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;AACjF,IAAI,OAAO,IAAI;AACf,MAAM;AACN,QAAQ,OAAO,EAAE,KAAK;AACtB,QAAQ,KAAK,EAAE,KAAK,CAAC,OAAO,IAAI,CAAC,sCAAsC,EAAE,UAAU,CAAC,CAAC;AACrF,OAAO;AACP,MAAM,EAAE,MAAM,EAAE,GAAG;AACnB,KAAK;AACL;AACA;;;;"}