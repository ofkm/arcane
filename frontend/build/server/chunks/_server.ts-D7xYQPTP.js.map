{"version":3,"file":"_server.ts-D7xYQPTP.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/templates/_server.ts.js"],"sourcesContent":["import { e as error, j as json } from \"../../../../chunks/index.js\";\nimport { T as TemplateService } from \"../../../../chunks/template-service.js\";\nconst templateService = new TemplateService();\nconst GET = async ({ url }) => {\n  const registryUrl = url.searchParams.get(\"url\");\n  if (registryUrl) {\n    try {\n      const urlObj = new URL(registryUrl);\n      if (![\"http:\", \"https:\"].includes(urlObj.protocol)) {\n        return error(400, { message: \"Invalid URL protocol. Only HTTP and HTTPS are allowed.\" });\n      }\n      console.log(`Proxying template registry request to: ${registryUrl}`);\n      const response = await fetch(registryUrl, {\n        headers: {\n          \"User-Agent\": \"Arcane-Template-Registry/1.0\",\n          Accept: \"application/json, text/plain\"\n        },\n        // Add timeout to prevent hanging requests\n        signal: AbortSignal.timeout(3e4)\n        // 30 second timeout\n      });\n      if (!response.ok) {\n        console.error(`Failed to fetch registry from ${registryUrl}: ${response.status} ${response.statusText}`);\n        return error(response.status, {\n          message: `Failed to fetch registry: ${response.statusText}`\n        });\n      }\n      const contentType = response.headers.get(\"content-type\");\n      const allowedHosts = [\"raw.githubusercontent.com\", \"githubusercontent.com\"];\n      const isGitHub = allowedHosts.includes(urlObj.host);\n      const isValidContentType = contentType?.includes(\"application/json\") || contentType?.includes(\"text/json\") || isGitHub && contentType?.includes(\"text/plain\");\n      if (!isValidContentType) {\n        console.warn(`Registry at ${registryUrl} returned unexpected content type: ${contentType}`);\n      }\n      let data;\n      try {\n        data = await response.json();\n      } catch (jsonError) {\n        return error(400, { message: \"Invalid JSON response from registry\" });\n      }\n      return json(data, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET\",\n          \"Access-Control-Allow-Headers\": \"Content-Type\"\n        }\n      });\n    } catch (fetchError) {\n      console.error(`Error fetching template registry from ${registryUrl}:`, fetchError);\n      if (fetchError instanceof TypeError && fetchError.message.includes(\"fetch\")) {\n        return error(503, { message: \"Unable to reach the registry server. Please check the URL and try again.\" });\n      }\n      return error(500, {\n        message: fetchError instanceof Error ? fetchError.message : \"Failed to fetch registry\"\n      });\n    }\n  }\n  try {\n    const type = url.searchParams.get(\"type\");\n    let templates;\n    switch (type) {\n      case \"local\":\n        templates = await templateService.loadLocalTemplates();\n        break;\n      case \"remote\":\n        templates = await templateService.loadRemoteTemplates();\n        break;\n      default:\n        templates = await templateService.loadAllTemplates();\n    }\n    return json(templates);\n  } catch (err) {\n    console.error(\"Error fetching templates:\", err);\n    return error(500, { message: \"Failed to fetch templates\" });\n  }\n};\nconst POST = async ({ request }) => {\n  const body = await request.json();\n  if (body.url && body.content) {\n    try {\n      console.log(`Proxying template content request to: ${body.url}`);\n      const response = await fetch(body.url, {\n        headers: {\n          \"User-Agent\": \"Arcane-Template-Registry/1.0\",\n          Accept: \"text/plain, application/x-yaml, text/yaml, */*\"\n        },\n        signal: AbortSignal.timeout(3e4)\n      });\n      if (!response.ok) {\n        return error(response.status, {\n          message: `Failed to fetch content: ${response.statusText}`\n        });\n      }\n      const data = await response.text();\n      return json(\n        { content: data },\n        {\n          headers: {\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Methods\": \"POST\",\n            \"Access-Control-Allow-Headers\": \"Content-Type\"\n          }\n        }\n      );\n    } catch (fetchError) {\n      console.error(`Error fetching template content from ${body.url}:`, fetchError);\n      return error(500, {\n        message: fetchError instanceof Error ? fetchError.message : \"Failed to fetch content\"\n      });\n    }\n  }\n  try {\n    const { name, content, description, envContent } = body;\n    if (!name || !content) {\n      return error(400, { message: \"Name and content are required\" });\n    }\n    await TemplateService.createTemplate(name, content, description, envContent);\n    return json({\n      success: true,\n      message: \"Template created successfully\",\n      id: name.toLowerCase().replace(/[^a-z0-9-]/g, \"-\")\n    });\n  } catch (err) {\n    console.error(\"Error creating template:\", err);\n    return error(500, { message: \"Failed to create template\" });\n  }\n};\nexport {\n  GET,\n  POST\n};\n"],"names":[],"mappings":"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"}