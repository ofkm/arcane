{"version":3,"file":"_server.ts-DVjXjnzv.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/images/pull-stream/_...name_/_server.ts.js"],"sourcesContent":["import { g as getDockerClient } from \"../../../../../../chunks/core.js\";\nimport { URL } from \"url\";\nimport { A as ApiErrorCode } from \"../../../../../../chunks/errors.type.js\";\nimport { e as extractDockerErrorMessage } from \"../../../../../../chunks/errors.util.js\";\nimport { j as json } from \"../../../../../../chunks/index.js\";\nimport { g as getSettings } from \"../../../../../../chunks/settings-service.js\";\nimport { a as areRegistriesEquivalent } from \"../../../../../../chunks/registry.utils.js\";\nconst GET = async ({ params, request }) => {\n  const imageName = params.name;\n  if (!imageName) {\n    const response = {\n      success: false,\n      error: \"Image name is required\",\n      code: ApiErrorCode.BAD_REQUEST\n    };\n    return json(response, { status: 400 });\n  }\n  const reqUrl = new URL(request.url);\n  const tag = reqUrl.searchParams.get(\"tag\") || \"latest\";\n  const platform = reqUrl.searchParams.get(\"platform\");\n  const headers = new Headers({\n    \"Content-Type\": \"text/event-stream\",\n    \"Cache-Control\": \"no-cache\",\n    Connection: \"keep-alive\"\n  });\n  const stream = new ReadableStream({\n    async start(controller) {\n      try {\n        let send = function(data) {\n          controller.enqueue(new TextEncoder().encode(`data: ${JSON.stringify(data)}\n\n`));\n        };\n        const docker = await getDockerClient();\n        const settings = await getSettings();\n        const fullImageRef = `${imageName}:${tag}`;\n        const pullOptions = {};\n        if (platform) {\n          pullOptions.platform = platform;\n        }\n        const imageRegistryHost = imageName.includes(\"/\") ? imageName.split(\"/\")[0].includes(\".\") || imageName.split(\"/\")[0].includes(\":\") ? imageName.split(\"/\")[0] : \"docker.io\" : \"docker.io\";\n        if (settings.registryCredentials && settings.registryCredentials.length > 0) {\n          const storedCredential = settings.registryCredentials.find((cred) => areRegistriesEquivalent(cred.url, imageRegistryHost));\n          if (storedCredential) {\n            const serverAddress = imageRegistryHost === \"docker.io\" ? \"https://index.docker.io/v1/\" : imageRegistryHost;\n            pullOptions.authconfig = {\n              username: storedCredential.username,\n              password: storedCredential.password,\n              serveraddress: serverAddress\n            };\n            send({\n              type: \"info\",\n              message: `Using stored credentials for ${imageRegistryHost} as ${storedCredential.username}`\n            });\n          } else if (imageRegistryHost !== \"docker.io\") {\n            send({\n              type: \"warning\",\n              message: `No stored credentials found for ${imageRegistryHost}. Attempting unauthenticated pull.`\n            });\n          }\n        }\n        const pullStream = await docker.pull(fullImageRef, pullOptions);\n        const layers = {};\n        docker.modem.followProgress(\n          pullStream,\n          (err) => {\n            if (err) {\n              const errorResponse = {\n                success: false,\n                error: extractDockerErrorMessage(err),\n                code: ApiErrorCode.DOCKER_API_ERROR,\n                details: err\n              };\n              send(errorResponse);\n            } else {\n              send({\n                success: true,\n                complete: true,\n                progress: 100,\n                status: \"Download complete\"\n              });\n            }\n            controller.close();\n          },\n          (event) => {\n            if (event.id && event.status) {\n              if (!layers[event.id]) {\n                layers[event.id] = { current: 0, total: 0 };\n              }\n              if (event.progressDetail && event.progressDetail.current && event.progressDetail.total) {\n                layers[event.id].current = event.progressDetail.current;\n                layers[event.id].total = event.progressDetail.total;\n              }\n              let totalSize = 0;\n              let currentProgressSum = 0;\n              let calculatedProgress = 0;\n              Object.values(layers).forEach((layer) => {\n                if (layer.total > 0) {\n                  totalSize += layer.total;\n                  currentProgressSum += layer.current;\n                }\n              });\n              if (totalSize > 0) {\n                calculatedProgress = Math.min(99, Math.floor(currentProgressSum / totalSize * 100));\n                send({\n                  success: true,\n                  progress: calculatedProgress,\n                  status: event.status,\n                  id: event.id\n                });\n              } else if (event.status) {\n                send({\n                  success: true,\n                  progress: 0,\n                  status: event.status,\n                  id: event.id\n                });\n              }\n            } else if (event.status) {\n              const lastLayerKey = Object.keys(layers).pop();\n              const lastKnownProgress = lastLayerKey && layers[lastLayerKey]?.total > 0 ? Math.min(99, Math.floor(layers[lastLayerKey].current / layers[lastLayerKey].total * 100)) : 0;\n              send({\n                success: true,\n                status: event.status,\n                progress: lastKnownProgress\n              });\n            }\n          }\n        );\n      } catch (error) {\n        const errorResponse = {\n          success: false,\n          error: error instanceof Error ? error.message : \"Unknown error pulling image\",\n          code: ApiErrorCode.DOCKER_API_ERROR,\n          details: error\n        };\n        controller.enqueue(new TextEncoder().encode(`data: ${JSON.stringify(errorResponse)}\n\n`));\n        controller.close();\n      }\n    }\n  });\n  return new Response(stream, { headers });\n};\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}