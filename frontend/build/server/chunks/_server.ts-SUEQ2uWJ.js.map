{"version":3,"file":"_server.ts-SUEQ2uWJ.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/system/prune/_server.ts.js"],"sourcesContent":["import { j as json } from \"../../../../../chunks/index.js\";\nimport { g as getDockerClient } from \"../../../../../chunks/core.js\";\nimport { g as getSettings } from \"../../../../../chunks/settings-service.js\";\nimport { f as formatBytes } from \"../../../../../chunks/bytes.util.js\";\nimport { A as ApiErrorCode } from \"../../../../../chunks/errors.type.js\";\nimport { t as tryCatch } from \"../../../../../chunks/try-catch.js\";\nconst docker = await getDockerClient();\nasync function pruneSystem(types) {\n  const results = [];\n  let pruneMode = \"dangling\";\n  try {\n    const currentSettings = await getSettings();\n    if (currentSettings?.pruneMode) {\n      pruneMode = currentSettings.pruneMode;\n    }\n  } catch (settingsError) {\n    const msg = settingsError instanceof Error ? settingsError.message : String(settingsError);\n    console.warn(`Could not fetch settings for prune operation, defaulting to 'dangling' image prune mode. Error: ${msg}`);\n  }\n  console.log(`Using image prune mode: ${pruneMode}`);\n  const settings = await getSettings();\n  for (const type of types) {\n    let result = null;\n    let error = void 0;\n    try {\n      console.log(`Pruning ${type}...`);\n      switch (type) {\n        case \"containers\":\n          result = await docker.pruneContainers();\n          break;\n        case \"images\": {\n          const imagePruneOptions = {\n            filters: {\n              // Ensure 'dangling' is a string 'true' or 'false'\n              dangling: [settings.pruneMode === \"dangling\" ? \"true\" : \"false\"]\n            }\n          };\n          const imagePruneResult = await docker.pruneImages(imagePruneOptions);\n          if (imagePruneResult.ImagesDeleted && imagePruneResult.ImagesDeleted.length > 0) {\n            results.push({\n              ...imagePruneResult || { SpaceReclaimed: 0 },\n              type,\n              error\n            });\n          }\n          break;\n        }\n        case \"networks\":\n          result = await docker.pruneNetworks();\n          break;\n        case \"volumes\":\n          result = await docker.pruneVolumes();\n          break;\n        default:\n          console.warn(`Unsupported prune type requested: ${type}`);\n          continue;\n      }\n      console.log(`Pruning ${type} completed.`);\n      results.push({ ...result || { SpaceReclaimed: 0 }, type, error });\n    } catch (err) {\n      const msg = err instanceof Error ? err.message : String(err);\n      console.error(`Error pruning ${type}:`, err);\n      error = msg || `Failed to prune ${type}`;\n      results.push({\n        ContainersDeleted: type === \"containers\" ? [] : void 0,\n        ImagesDeleted: type === \"images\" ? [] : void 0,\n        NetworksDeleted: type === \"networks\" ? [] : void 0,\n        VolumesDeleted: type === \"volumes\" ? [] : void 0,\n        SpaceReclaimed: 0,\n        type,\n        error\n      });\n    }\n  }\n  return results;\n}\nconst allowedPruneTypes = [\"containers\", \"images\", \"networks\", \"volumes\"];\nconst POST = async ({ url }) => {\n  const typesParam = url.searchParams.get(\"types\");\n  if (!typesParam) {\n    const response = {\n      success: false,\n      error: \"Missing required query parameter: types\",\n      code: ApiErrorCode.BAD_REQUEST\n    };\n    return json(response, { status: 400 });\n  }\n  const requestedTypes = typesParam.split(\",\").map((t) => t.trim().toLowerCase());\n  const validTypes = requestedTypes.filter((t) => allowedPruneTypes.includes(t));\n  if (validTypes.length === 0) {\n    const response = {\n      success: false,\n      error: `No valid resource types provided for pruning. Allowed types: ${allowedPruneTypes.join(\", \")}`,\n      code: ApiErrorCode.BAD_REQUEST\n    };\n    return json(response, { status: 400 });\n  }\n  console.log(`API: POST /api/system/prune - Pruning types: ${validTypes.join(\", \")}`);\n  const result = await tryCatch(pruneSystem(validTypes));\n  if (result.error) {\n    console.error(\"API Error (pruneSystem):\", result.error);\n    const response = {\n      success: false,\n      error: result.error.message || \"Failed to prune system.\",\n      code: ApiErrorCode.INTERNAL_SERVER_ERROR,\n      details: result.error\n    };\n    return json(response, { status: 500 });\n  }\n  const results = result.data;\n  let totalSpaceReclaimed = 0;\n  let hasErrors = false;\n  const errorMessages = [];\n  if (Array.isArray(results)) {\n    results.forEach((res) => {\n      if (res) {\n        if (typeof res.SpaceReclaimed === \"number\") {\n          totalSpaceReclaimed += res.SpaceReclaimed;\n        }\n        if (res.error) {\n          hasErrors = true;\n          errorMessages.push(`${res.type || \"Unknown\"}: ${res.error}`);\n        }\n      }\n    });\n  }\n  let message = `System prune completed for: ${validTypes.join(\", \")}.`;\n  if (totalSpaceReclaimed > 0) {\n    message += ` Reclaimed ${formatBytes(totalSpaceReclaimed)}.`;\n  }\n  if (hasErrors) {\n    message += ` Errors occurred: ${errorMessages.join(\"; \")}`;\n    console.warn(\"Prune completed with errors:\", errorMessages);\n    return json({ success: false, results, spaceReclaimed: totalSpaceReclaimed, message }, { status: 200 });\n  }\n  console.log(\"API: System prune completed successfully.\");\n  return json({ success: true, results, spaceReclaimed: totalSpaceReclaimed, message });\n};\nexport {\n  POST\n};\n"],"names":[],"mappings":"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"}