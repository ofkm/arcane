{"version":3,"file":"_server.ts-XmR9CAuE.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/api/convert/_server.ts.js"],"sourcesContent":["import { j as json } from \"../../../../chunks/index.js\";\nimport { A as ApiErrorCode } from \"../../../../chunks/errors.type.js\";\nimport { t as tryCatch } from \"../../../../chunks/try-catch.js\";\nfunction parseDockerRunCommand(command) {\n  try {\n    if (!command || typeof command !== \"string\") {\n      throw new Error(\"Docker run command must be a non-empty string\");\n    }\n    let cmd = command.trim().replace(/^docker\\s+run\\s+/, \"\");\n    if (!cmd) {\n      throw new Error('No arguments found after \"docker run\"');\n    }\n    const result = { image: \"\" };\n    let tokens;\n    try {\n      tokens = parseCommandTokens(cmd);\n    } catch (error) {\n      throw new Error(`Failed to parse command tokens: ${error instanceof Error ? error.message : \"Unknown error\"}`);\n    }\n    if (tokens.length === 0) {\n      throw new Error(\"No valid tokens found in docker run command\");\n    }\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      try {\n        switch (token) {\n          case \"-d\":\n          case \"--detach\":\n            result.detached = true;\n            break;\n          case \"-i\":\n          case \"--interactive\":\n            result.interactive = true;\n            break;\n          case \"-t\":\n          case \"--tty\":\n            result.tty = true;\n            break;\n          case \"--rm\":\n            result.remove = true;\n            break;\n          case \"--privileged\":\n            result.privileged = true;\n            break;\n          case \"--name\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for --name flag\");\n            }\n            const nameValue = tokens[++i];\n            if (!nameValue || nameValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for --name flag: must not be empty or start with -\");\n            }\n            result.name = nameValue;\n            break;\n          }\n          case \"-p\":\n          case \"--port\":\n          case \"--publish\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for port flag\");\n            }\n            const portValue = tokens[++i];\n            if (!portValue || portValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for port flag: must not be empty or start with -\");\n            }\n            if (!result.ports) result.ports = [];\n            result.ports.push(portValue);\n            break;\n          }\n          case \"-v\":\n          case \"--volume\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for volume flag\");\n            }\n            const volumeValue = tokens[++i];\n            if (!volumeValue || volumeValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for volume flag: must not be empty or start with -\");\n            }\n            if (!result.volumes) result.volumes = [];\n            result.volumes.push(volumeValue);\n            break;\n          }\n          case \"-e\":\n          case \"--env\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for environment flag\");\n            }\n            const envValue = tokens[++i];\n            if (!envValue || envValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for environment flag: must not be empty or start with -\");\n            }\n            if (!result.environment) result.environment = [];\n            result.environment.push(envValue);\n            break;\n          }\n          case \"--network\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for --network flag\");\n            }\n            const networkValue = tokens[++i];\n            if (!networkValue || networkValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for --network flag: must not be empty or start with -\");\n            }\n            if (!result.networks) result.networks = [];\n            result.networks.push(networkValue);\n            break;\n          }\n          case \"--restart\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for --restart flag\");\n            }\n            const restartValue = tokens[++i];\n            if (!restartValue || restartValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for --restart flag: must not be empty or start with -\");\n            }\n            result.restart = restartValue;\n            break;\n          }\n          case \"-w\":\n          case \"--workdir\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for workdir flag\");\n            }\n            const workdirValue = tokens[++i];\n            if (!workdirValue || workdirValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for workdir flag: must not be empty or start with -\");\n            }\n            result.workdir = workdirValue;\n            break;\n          }\n          case \"-u\":\n          case \"--user\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for user flag\");\n            }\n            const userValue = tokens[++i];\n            if (!userValue || userValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for user flag: must not be empty or start with -\");\n            }\n            result.user = userValue;\n            break;\n          }\n          case \"--entrypoint\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for --entrypoint flag\");\n            }\n            const entrypointValue = tokens[++i];\n            if (!entrypointValue || entrypointValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for --entrypoint flag: must not be empty or start with -\");\n            }\n            result.entrypoint = entrypointValue;\n            break;\n          }\n          case \"--health-cmd\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for --health-cmd flag\");\n            }\n            const healthValue = tokens[++i];\n            if (!healthValue || healthValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for --health-cmd flag: must not be empty or start with -\");\n            }\n            result.healthCheck = healthValue;\n            break;\n          }\n          case \"-m\":\n          case \"--memory\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for memory flag\");\n            }\n            const memoryValue = tokens[++i];\n            if (!memoryValue || memoryValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for memory flag: must not be empty or start with -\");\n            }\n            result.memoryLimit = memoryValue;\n            break;\n          }\n          case \"--cpus\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for --cpus flag\");\n            }\n            const cpusValue = tokens[++i];\n            if (!cpusValue || cpusValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for --cpus flag: must not be empty or start with -\");\n            }\n            result.cpuLimit = cpusValue;\n            break;\n          }\n          case \"--label\": {\n            if (i + 1 >= tokens.length) {\n              throw new Error(\"Missing value for --label flag\");\n            }\n            const labelValue = tokens[++i];\n            if (!labelValue || labelValue.startsWith(\"-\")) {\n              throw new Error(\"Invalid value for --label flag: must not be empty or start with -\");\n            }\n            if (!result.labels) result.labels = [];\n            result.labels.push(labelValue);\n            break;\n          }\n          default: {\n            if (token.startsWith(\"-\")) {\n              const flagsWithValues = [\"-p\", \"--port\", \"--publish\", \"-v\", \"--volume\", \"-e\", \"--env\", \"--network\", \"--restart\", \"-w\", \"--workdir\", \"-u\", \"--user\", \"--entrypoint\", \"--health-cmd\", \"-m\", \"--memory\", \"--cpus\", \"--label\", \"--name\"];\n              if (token.startsWith(\"-\") && !token.startsWith(\"--\") && token.length > 2) {\n                const flags = token.slice(1).split(\"\");\n                for (const flag of flags) {\n                  switch (flag) {\n                    case \"d\":\n                      result.detached = true;\n                      break;\n                    case \"i\":\n                      result.interactive = true;\n                      break;\n                    case \"t\":\n                      result.tty = true;\n                      break;\n                    default:\n                      console.warn(`Unknown short flag in combined flag: -${flag}`);\n                      break;\n                  }\n                }\n                break;\n              }\n              const isKnownFlag = flagsWithValues.includes(token);\n              if (!isKnownFlag) {\n                console.warn(`Unknown docker run flag: ${token}`);\n                if (i + 1 < tokens.length && !tokens[i + 1].startsWith(\"-\") && !result.image && tokens[i + 1].includes(\":\")) {\n                  i++;\n                }\n              }\n            } else {\n              if (!result.image) {\n                if (!token) {\n                  throw new Error(\"Image name cannot be empty\");\n                }\n                if (!/^[a-zA-Z0-9._/-]+(:[\\w.-]+)?$/.test(token)) {\n                  console.warn(`Image name \"${token}\" may not be valid`);\n                }\n                result.image = token;\n              } else {\n                const remainingTokens = tokens.slice(i);\n                result.command = remainingTokens.join(\" \");\n                return result;\n              }\n            }\n            break;\n          }\n        }\n      } catch (error) {\n        throw new Error(`Error processing token \"${token}\" at position ${i}: ${error instanceof Error ? error.message : \"Unknown error\"}`);\n      }\n    }\n    if (!result.image) {\n      throw new Error(\"No Docker image specified in command\");\n    }\n    return result;\n  } catch (error) {\n    const errorMessage = error instanceof Error ? error.message : \"Unknown parsing error\";\n    throw new Error(`Failed to parse Docker run command: ${errorMessage}. Original command: \"${command}\"`);\n  }\n}\nfunction parseCommandTokens(command) {\n  try {\n    const tokens = [];\n    let current = \"\";\n    let inQuotes = false;\n    let quoteChar = \"\";\n    for (let i = 0; i < command.length; i++) {\n      const char = command[i];\n      if ((char === '\"' || char === \"'\") && !inQuotes) {\n        inQuotes = true;\n        quoteChar = char;\n      } else if (char === quoteChar && inQuotes) {\n        inQuotes = false;\n        quoteChar = \"\";\n      } else if (char === \" \" && !inQuotes) {\n        if (current) {\n          tokens.push(current);\n          current = \"\";\n        }\n      } else {\n        current += char;\n      }\n    }\n    if (inQuotes) {\n      throw new Error(`Unclosed quote in command: missing closing ${quoteChar}`);\n    }\n    if (current) {\n      tokens.push(current);\n    }\n    return tokens;\n  } catch (error) {\n    throw new Error(`Token parsing failed: ${error instanceof Error ? error.message : \"Unknown error\"}`);\n  }\n}\nfunction convertToDockerCompose(parsed) {\n  try {\n    if (!parsed.image) {\n      throw new Error(\"Cannot convert to Docker Compose: no image specified\");\n    }\n    const serviceName = parsed.name || \"app\";\n    const service = {\n      image: parsed.image\n    };\n    if (parsed.name) {\n      service.container_name = parsed.name;\n    }\n    if (parsed.ports && parsed.ports.length > 0) {\n      service.ports = parsed.ports;\n    }\n    if (parsed.volumes && parsed.volumes.length > 0) {\n      service.volumes = parsed.volumes;\n    }\n    if (parsed.environment && parsed.environment.length > 0) {\n      service.environment = parsed.environment;\n    }\n    if (parsed.networks && parsed.networks.length > 0) {\n      service.networks = parsed.networks;\n    }\n    if (parsed.restart) {\n      service.restart = parsed.restart;\n    }\n    if (parsed.workdir) {\n      service.working_dir = parsed.workdir;\n    }\n    if (parsed.user) {\n      service.user = parsed.user;\n    }\n    if (parsed.entrypoint) {\n      service.entrypoint = parsed.entrypoint;\n    }\n    if (parsed.command) {\n      service.command = parsed.command;\n    }\n    if (parsed.interactive && parsed.tty) {\n      service.stdin_open = true;\n      service.tty = true;\n    }\n    if (parsed.privileged) {\n      service.privileged = true;\n    }\n    if (parsed.labels && parsed.labels.length > 0) {\n      service.labels = parsed.labels;\n    }\n    if (parsed.healthCheck) {\n      service.healthcheck = {\n        test: parsed.healthCheck\n      };\n    }\n    if (parsed.memoryLimit) {\n      if (!service.deploy) service.deploy = {};\n      if (!service.deploy.resources) service.deploy.resources = {};\n      if (!service.deploy.resources.limits) service.deploy.resources.limits = {};\n      service.deploy.resources.limits.memory = parsed.memoryLimit;\n    }\n    if (parsed.cpuLimit) {\n      if (!service.deploy) service.deploy = {};\n      if (!service.deploy.resources) service.deploy.resources = {};\n      if (!service.deploy.resources.limits) service.deploy.resources.limits = {};\n      service.deploy.resources.limits.cpus = parsed.cpuLimit;\n    }\n    const compose = {\n      services: {\n        [serviceName]: service\n      }\n    };\n    return generateYaml(compose);\n  } catch (error) {\n    throw new Error(`Failed to convert to Docker Compose: ${error instanceof Error ? error.message : \"Unknown error\"}`);\n  }\n}\nfunction generateYaml(obj, indent = 0) {\n  try {\n    const spaces = \"  \".repeat(indent);\n    let result = \"\";\n    for (const [key, value] of Object.entries(obj)) {\n      if (value === null || value === void 0) continue;\n      result += `${spaces}${key}:`;\n      if (Array.isArray(value)) {\n        result += \"\\n\";\n        for (const item of value) {\n          if (typeof item === \"object\" && item !== null && !Array.isArray(item)) {\n            result += `${spaces}  -\n`;\n            result += generateYaml(item, indent + 2);\n          } else {\n            result += `${spaces}  - ${item}\n`;\n          }\n        }\n      } else if (typeof value === \"object\" && value !== null) {\n        result += \"\\n\";\n        result += generateYaml(value, indent + 1);\n      } else {\n        result += ` ${value}\n`;\n      }\n    }\n    return result;\n  } catch (error) {\n    throw new Error(`YAML generation failed: ${error instanceof Error ? error.message : \"Unknown error\"}`);\n  }\n}\nconst POST = async ({ request }) => {\n  const bodyResult = await tryCatch(request.json());\n  if (bodyResult.error) {\n    const response = {\n      success: false,\n      error: \"Invalid JSON payload\",\n      code: ApiErrorCode.BAD_REQUEST\n    };\n    return json(response, { status: 400 });\n  }\n  const { dockerRunCommand } = bodyResult.data;\n  if (!dockerRunCommand || !dockerRunCommand.trim()) {\n    const response = {\n      success: false,\n      error: \"Docker run command is required\",\n      code: ApiErrorCode.BAD_REQUEST\n    };\n    return json(response, { status: 400 });\n  }\n  try {\n    const parsed = parseDockerRunCommand(dockerRunCommand);\n    const dockerCompose = convertToDockerCompose(parsed);\n    const envVars = parsed.environment?.map((env) => {\n      return env;\n    }).join(\"\\n\") || \"\";\n    return json({\n      success: true,\n      dockerCompose,\n      envVars,\n      serviceName: parsed.name || \"app\"\n    });\n  } catch (error) {\n    console.error(\"Error converting docker run command:\", error);\n    const response = {\n      success: false,\n      error: \"Failed to parse docker run command. Please check the syntax.\",\n      code: ApiErrorCode.INTERNAL_SERVER_ERROR\n    };\n    return json(response, { status: 500 });\n  }\n};\nexport {\n  POST\n};\n"],"names":[],"mappings":";;;;AAGA,SAAS,qBAAqB,CAAC,OAAO,EAAE;AACxC,EAAE,IAAI;AACN,IAAI,IAAI,CAAC,OAAO,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AACjD,MAAM,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC;AACtE;AACA,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC;AAC5D,IAAI,IAAI,CAAC,GAAG,EAAE;AACd,MAAM,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC;AAC9D;AACA,IAAI,MAAM,MAAM,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE;AAChC,IAAI,IAAI,MAAM;AACd,IAAI,IAAI;AACR,MAAM,MAAM,GAAG,kBAAkB,CAAC,GAAG,CAAC;AACtC,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,gCAAgC,EAAE,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC;AACpH;AACA,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7B,MAAM,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC;AACpE;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,MAAM,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC;AAC7B,MAAM,IAAI;AACV,QAAQ,QAAQ,KAAK;AACrB,UAAU,KAAK,IAAI;AACnB,UAAU,KAAK,UAAU;AACzB,YAAY,MAAM,CAAC,QAAQ,GAAG,IAAI;AAClC,YAAY;AACZ,UAAU,KAAK,IAAI;AACnB,UAAU,KAAK,eAAe;AAC9B,YAAY,MAAM,CAAC,WAAW,GAAG,IAAI;AACrC,YAAY;AACZ,UAAU,KAAK,IAAI;AACnB,UAAU,KAAK,OAAO;AACtB,YAAY,MAAM,CAAC,GAAG,GAAG,IAAI;AAC7B,YAAY;AACZ,UAAU,KAAK,MAAM;AACrB,YAAY,MAAM,CAAC,MAAM,GAAG,IAAI;AAChC,YAAY;AACZ,UAAU,KAAK,cAAc;AAC7B,YAAY,MAAM,CAAC,UAAU,GAAG,IAAI;AACpC,YAAY;AACZ,UAAU,KAAK,QAAQ,EAAE;AACzB,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;AAC9D;AACA,YAAY,MAAM,SAAS,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AACzC,YAAY,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACzD,cAAc,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC;AACjG;AACA,YAAY,MAAM,CAAC,IAAI,GAAG,SAAS;AACnC,YAAY;AACZ;AACA,UAAU,KAAK,IAAI;AACnB,UAAU,KAAK,QAAQ;AACvB,UAAU,KAAK,WAAW,EAAE;AAC5B,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC;AAC5D;AACA,YAAY,MAAM,SAAS,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AACzC,YAAY,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACzD,cAAc,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC;AAC/F;AACA,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,GAAG,EAAE;AAChD,YAAY,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;AACxC,YAAY;AACZ;AACA,UAAU,KAAK,IAAI;AACnB,UAAU,KAAK,UAAU,EAAE;AAC3B,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;AAC9D;AACA,YAAY,MAAM,WAAW,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAC3C,YAAY,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAC7D,cAAc,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC;AACjG;AACA,YAAY,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,GAAG,EAAE;AACpD,YAAY,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;AAC5C,YAAY;AACZ;AACA,UAAU,KAAK,IAAI;AACnB,UAAU,KAAK,OAAO,EAAE;AACxB,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC;AACnE;AACA,YAAY,MAAM,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AACxC,YAAY,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACvD,cAAc,MAAM,IAAI,KAAK,CAAC,uEAAuE,CAAC;AACtG;AACA,YAAY,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,WAAW,GAAG,EAAE;AAC5D,YAAY,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC7C,YAAY;AACZ;AACA,UAAU,KAAK,WAAW,EAAE;AAC5B,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC;AACjE;AACA,YAAY,MAAM,YAAY,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAC5C,YAAY,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAC/D,cAAc,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC;AACpG;AACA,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,GAAG,EAAE;AACtD,YAAY,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC;AAC9C,YAAY;AACZ;AACA,UAAU,KAAK,WAAW,EAAE;AAC5B,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC;AACjE;AACA,YAAY,MAAM,YAAY,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAC5C,YAAY,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAC/D,cAAc,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC;AACpG;AACA,YAAY,MAAM,CAAC,OAAO,GAAG,YAAY;AACzC,YAAY;AACZ;AACA,UAAU,KAAK,IAAI;AACnB,UAAU,KAAK,WAAW,EAAE;AAC5B,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;AAC/D;AACA,YAAY,MAAM,YAAY,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAC5C,YAAY,IAAI,CAAC,YAAY,IAAI,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAC/D,cAAc,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC;AAClG;AACA,YAAY,MAAM,CAAC,OAAO,GAAG,YAAY;AACzC,YAAY;AACZ;AACA,UAAU,KAAK,IAAI;AACnB,UAAU,KAAK,QAAQ,EAAE;AACzB,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC;AAC5D;AACA,YAAY,MAAM,SAAS,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AACzC,YAAY,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACzD,cAAc,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC;AAC/F;AACA,YAAY,MAAM,CAAC,IAAI,GAAG,SAAS;AACnC,YAAY;AACZ;AACA,UAAU,KAAK,cAAc,EAAE;AAC/B,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;AACpE;AACA,YAAY,MAAM,eAAe,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAC/C,YAAY,IAAI,CAAC,eAAe,IAAI,eAAe,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACrE,cAAc,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC;AACvG;AACA,YAAY,MAAM,CAAC,UAAU,GAAG,eAAe;AAC/C,YAAY;AACZ;AACA,UAAU,KAAK,cAAc,EAAE;AAC/B,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC;AACpE;AACA,YAAY,MAAM,WAAW,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAC3C,YAAY,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAC7D,cAAc,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC;AACvG;AACA,YAAY,MAAM,CAAC,WAAW,GAAG,WAAW;AAC5C,YAAY;AACZ;AACA,UAAU,KAAK,IAAI;AACnB,UAAU,KAAK,UAAU,EAAE;AAC3B,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;AAC9D;AACA,YAAY,MAAM,WAAW,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAC3C,YAAY,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAC7D,cAAc,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC;AACjG;AACA,YAAY,MAAM,CAAC,WAAW,GAAG,WAAW;AAC5C,YAAY;AACZ;AACA,UAAU,KAAK,QAAQ,EAAE;AACzB,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;AAC9D;AACA,YAAY,MAAM,SAAS,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AACzC,YAAY,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACzD,cAAc,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC;AACjG;AACA,YAAY,MAAM,CAAC,QAAQ,GAAG,SAAS;AACvC,YAAY;AACZ;AACA,UAAU,KAAK,SAAS,EAAE;AAC1B,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;AACxC,cAAc,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;AAC/D;AACA,YAAY,MAAM,UAAU,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AAC1C,YAAY,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AAC3D,cAAc,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC;AAClG;AACA,YAAY,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,EAAE;AAClD,YAAY,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;AAC1C,YAAY;AACZ;AACA,UAAU,SAAS;AACnB,YAAY,IAAI,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;AACvC,cAAc,MAAM,eAAe,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,cAAc,EAAE,cAAc,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;AAClP,cAAc,IAAI,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACxF,gBAAgB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC;AACtD,gBAAgB,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAC1C,kBAAkB,QAAQ,IAAI;AAC9B,oBAAoB,KAAK,GAAG;AAC5B,sBAAsB,MAAM,CAAC,QAAQ,GAAG,IAAI;AAC5C,sBAAsB;AACtB,oBAAoB,KAAK,GAAG;AAC5B,sBAAsB,MAAM,CAAC,WAAW,GAAG,IAAI;AAC/C,sBAAsB;AACtB,oBAAoB,KAAK,GAAG;AAC5B,sBAAsB,MAAM,CAAC,GAAG,GAAG,IAAI;AACvC,sBAAsB;AACtB,oBAAoB;AACpB,sBAAsB,OAAO,CAAC,IAAI,CAAC,CAAC,sCAAsC,EAAE,IAAI,CAAC,CAAC,CAAC;AACnF,sBAAsB;AACtB;AACA;AACA,gBAAgB;AAChB;AACA,cAAc,MAAM,WAAW,GAAG,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC;AACjE,cAAc,IAAI,CAAC,WAAW,EAAE;AAChC,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC,CAAC;AACjE,gBAAgB,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AAC7H,kBAAkB,CAAC,EAAE;AACrB;AACA;AACA,aAAa,MAAM;AACnB,cAAc,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;AACjC,gBAAgB,IAAI,CAAC,KAAK,EAAE;AAC5B,kBAAkB,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC;AAC/D;AACA,gBAAgB,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAClE,kBAAkB,OAAO,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,KAAK,CAAC,kBAAkB,CAAC,CAAC;AACxE;AACA,gBAAgB,MAAM,CAAC,KAAK,GAAG,KAAK;AACpC,eAAe,MAAM;AACrB,gBAAgB,MAAM,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACvD,gBAAgB,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC;AAC1D,gBAAgB,OAAO,MAAM;AAC7B;AACA;AACA,YAAY;AACZ;AACA;AACA,OAAO,CAAC,OAAO,KAAK,EAAE;AACtB,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,wBAAwB,EAAE,KAAK,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC;AAC1I;AACA;AACA,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;AACvB,MAAM,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC;AAC7D;AACA,IAAI,OAAO,MAAM;AACjB,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,MAAM,YAAY,GAAG,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,uBAAuB;AACzF,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,oCAAoC,EAAE,YAAY,CAAC,qBAAqB,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AAC1G;AACA;AACA,SAAS,kBAAkB,CAAC,OAAO,EAAE;AACrC,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,EAAE;AACrB,IAAI,IAAI,OAAO,GAAG,EAAE;AACpB,IAAI,IAAI,QAAQ,GAAG,KAAK;AACxB,IAAI,IAAI,SAAS,GAAG,EAAE;AACtB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,MAAM,MAAM,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC;AAC7B,MAAM,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE;AACvD,QAAQ,QAAQ,GAAG,IAAI;AACvB,QAAQ,SAAS,GAAG,IAAI;AACxB,OAAO,MAAM,IAAI,IAAI,KAAK,SAAS,IAAI,QAAQ,EAAE;AACjD,QAAQ,QAAQ,GAAG,KAAK;AACxB,QAAQ,SAAS,GAAG,EAAE;AACtB,OAAO,MAAM,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE;AAC5C,QAAQ,IAAI,OAAO,EAAE;AACrB,UAAU,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;AAC9B,UAAU,OAAO,GAAG,EAAE;AACtB;AACA,OAAO,MAAM;AACb,QAAQ,OAAO,IAAI,IAAI;AACvB;AACA;AACA,IAAI,IAAI,QAAQ,EAAE;AAClB,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,2CAA2C,EAAE,SAAS,CAAC,CAAC,CAAC;AAChF;AACA,IAAI,IAAI,OAAO,EAAE;AACjB,MAAM,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;AAC1B;AACA,IAAI,OAAO,MAAM;AACjB,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,sBAAsB,EAAE,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC;AACxG;AACA;AACA,SAAS,sBAAsB,CAAC,MAAM,EAAE;AACxC,EAAE,IAAI;AACN,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;AACvB,MAAM,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC;AAC7E;AACA,IAAI,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,IAAI,KAAK;AAC5C,IAAI,MAAM,OAAO,GAAG;AACpB,MAAM,KAAK,EAAE,MAAM,CAAC;AACpB,KAAK;AACL,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE;AACrB,MAAM,OAAO,CAAC,cAAc,GAAG,MAAM,CAAC,IAAI;AAC1C;AACA,IAAI,IAAI,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACjD,MAAM,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK;AAClC;AACA,IAAI,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACrD,MAAM,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;AACtC;AACA,IAAI,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7D,MAAM,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW;AAC9C;AACA,IAAI,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACvD,MAAM,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ;AACxC;AACA,IAAI,IAAI,MAAM,CAAC,OAAO,EAAE;AACxB,MAAM,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;AACtC;AACA,IAAI,IAAI,MAAM,CAAC,OAAO,EAAE;AACxB,MAAM,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,OAAO;AAC1C;AACA,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE;AACrB,MAAM,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI;AAChC;AACA,IAAI,IAAI,MAAM,CAAC,UAAU,EAAE;AAC3B,MAAM,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU;AAC5C;AACA,IAAI,IAAI,MAAM,CAAC,OAAO,EAAE;AACxB,MAAM,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;AACtC;AACA,IAAI,IAAI,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,GAAG,EAAE;AAC1C,MAAM,OAAO,CAAC,UAAU,GAAG,IAAI;AAC/B,MAAM,OAAO,CAAC,GAAG,GAAG,IAAI;AACxB;AACA,IAAI,IAAI,MAAM,CAAC,UAAU,EAAE;AAC3B,MAAM,OAAO,CAAC,UAAU,GAAG,IAAI;AAC/B;AACA,IAAI,IAAI,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AACnD,MAAM,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM;AACpC;AACA,IAAI,IAAI,MAAM,CAAC,WAAW,EAAE;AAC5B,MAAM,OAAO,CAAC,WAAW,GAAG;AAC5B,QAAQ,IAAI,EAAE,MAAM,CAAC;AACrB,OAAO;AACP;AACA,IAAI,IAAI,MAAM,CAAC,WAAW,EAAE;AAC5B,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,GAAG,EAAE;AAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,SAAS,GAAG,EAAE;AAClE,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE;AAChF,MAAM,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW;AACjE;AACA,IAAI,IAAI,MAAM,CAAC,QAAQ,EAAE;AACzB,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,GAAG,EAAE;AAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,SAAS,GAAG,EAAE;AAClE,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE;AAChF,MAAM,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ;AAC5D;AACA,IAAI,MAAM,OAAO,GAAG;AACpB,MAAM,QAAQ,EAAE;AAChB,QAAQ,CAAC,WAAW,GAAG;AACvB;AACA,KAAK;AACL,IAAI,OAAO,YAAY,CAAC,OAAO,CAAC;AAChC,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,qCAAqC,EAAE,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC;AACvH;AACA;AACA,SAAS,YAAY,CAAC,GAAG,EAAE,MAAM,GAAG,CAAC,EAAE;AACvC,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AACtC,IAAI,IAAI,MAAM,GAAG,EAAE;AACnB,IAAI,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;AACpD,MAAM,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,KAAK,KAAK,CAAC,EAAE;AAC9C,MAAM,MAAM,IAAI,CAAC,EAAE,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AAClC,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAChC,QAAQ,MAAM,IAAI,IAAI;AACtB,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;AAClC,UAAU,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACjF,YAAY,MAAM,IAAI,CAAC,EAAE,MAAM,CAAC;AAChC,CAAC;AACD,YAAY,MAAM,IAAI,YAAY,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC;AACpD,WAAW,MAAM;AACjB,YAAY,MAAM,IAAI,CAAC,EAAE,MAAM,CAAC,IAAI,EAAE,IAAI;AAC1C,CAAC;AACD;AACA;AACA,OAAO,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,EAAE;AAC9D,QAAQ,MAAM,IAAI,IAAI;AACtB,QAAQ,MAAM,IAAI,YAAY,CAAC,KAAK,EAAE,MAAM,GAAG,CAAC,CAAC;AACjD,OAAO,MAAM;AACb,QAAQ,MAAM,IAAI,CAAC,CAAC,EAAE,KAAK;AAC3B,CAAC;AACD;AACA;AACA,IAAI,OAAO,MAAM;AACjB,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,wBAAwB,EAAE,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC;AAC1G;AACA;AACK,MAAC,IAAI,GAAG,OAAO,EAAE,OAAO,EAAE,KAAK;AACpC,EAAE,MAAM,UAAU,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;AACnD,EAAE,IAAI,UAAU,CAAC,KAAK,EAAE;AACxB,IAAI,MAAM,QAAQ,GAAG;AACrB,MAAM,OAAO,EAAE,KAAK;AACpB,MAAM,KAAK,EAAE,sBAAsB;AACnC,MAAM,IAAI,EAAE,YAAY,CAAC;AACzB,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAC1C;AACA,EAAE,MAAM,EAAE,gBAAgB,EAAE,GAAG,UAAU,CAAC,IAAI;AAC9C,EAAE,IAAI,CAAC,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAE;AACrD,IAAI,MAAM,QAAQ,GAAG;AACrB,MAAM,OAAO,EAAE,KAAK;AACpB,MAAM,KAAK,EAAE,gCAAgC;AAC7C,MAAM,IAAI,EAAE,YAAY,CAAC;AACzB,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAC1C;AACA,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,qBAAqB,CAAC,gBAAgB,CAAC;AAC1D,IAAI,MAAM,aAAa,GAAG,sBAAsB,CAAC,MAAM,CAAC;AACxD,IAAI,MAAM,OAAO,GAAG,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK;AACrD,MAAM,OAAO,GAAG;AAChB,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACvB,IAAI,OAAO,IAAI,CAAC;AAChB,MAAM,OAAO,EAAE,IAAI;AACnB,MAAM,aAAa;AACnB,MAAM,OAAO;AACb,MAAM,WAAW,EAAE,MAAM,CAAC,IAAI,IAAI;AAClC,KAAK,CAAC;AACN,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC;AAChE,IAAI,MAAM,QAAQ,GAAG;AACrB,MAAM,OAAO,EAAE,KAAK;AACpB,MAAM,KAAK,EAAE,8DAA8D;AAC3E,MAAM,IAAI,EAAE,YAAY,CAAC;AACzB,KAAK;AACL,IAAI,OAAO,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAC1C;AACA;;;;"}