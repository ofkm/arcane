{"version":3,"file":"agent-stack-service-fp3gmye9.js","sources":["../../../.svelte-kit/adapter-node/chunks/agent-stack-service.js"],"sourcesContent":["import { s as sendTaskToAgent } from \"./agent-manager.js\";\nasync function getStacksFromAgent(agent, context) {\n  try {\n    const task = await sendTaskToAgent(agent.id, \"stack_list\", {});\n    const maxAttempts = 30;\n    const delay = 1e3;\n    console.log(`Polling for stack data from agent ${agent.hostname} (task ${task.id})`);\n    for (let i = 0; i < maxAttempts; i++) {\n      await new Promise((resolve) => setTimeout(resolve, delay));\n      const fetchFunc = context?.fetch || fetch;\n      const apiUrl = `/api/agents/${agent.id}/tasks/${task.id}`;\n      const updatedTask = await fetchFunc(apiUrl, {\n        credentials: \"include\"\n      }).then((res) => res.ok ? res.json() : null);\n      if (!updatedTask || !updatedTask.task) {\n        console.log(`Polling attempt ${i + 1}: No task data received`);\n        continue;\n      }\n      const taskStatus = updatedTask.task.status;\n      console.log(`Polling attempt ${i + 1}: Task status is ${taskStatus}`);\n      if (taskStatus === \"completed\" && updatedTask.task.result) {\n        console.log(`Task completed, processing stack data`);\n        let stacksData;\n        try {\n          if (typeof updatedTask.task.result === \"object\") {\n            stacksData = updatedTask.task.result;\n          } else if (typeof updatedTask.task.result === \"string\") {\n            stacksData = JSON.parse(updatedTask.task.result);\n          }\n          if (!stacksData && updatedTask.task.result && updatedTask.task.result.output) {\n            if (typeof updatedTask.task.result.output === \"object\") {\n              stacksData = updatedTask.task.result.output;\n            } else if (typeof updatedTask.task.result.output === \"string\") {\n              stacksData = JSON.parse(updatedTask.task.result.output);\n            }\n          }\n        } catch (parseError) {\n          console.error(`Failed to parse stack data: ${parseError}`);\n          return [];\n        }\n        if (!stacksData || !stacksData.stacks || !Array.isArray(stacksData.stacks)) {\n          console.log(`No valid stacks data found in task result`);\n          return [];\n        }\n        const stacks = stacksData.stacks.map((stack) => ({\n          ...stack,\n          agentId: agent.id,\n          agentHostname: agent.hostname,\n          isRemote: true,\n          // Ensure the important fields are always set\n          id: stack.id || `${agent.id}_${stack.name}`,\n          name: stack.name,\n          status: stack.status || \"unknown\",\n          serviceCount: stack.serviceCount || stack.services?.length || 0\n        }));\n        console.log(`Retrieved ${stacks.length} stacks from agent ${agent.hostname}`);\n        return stacks;\n      } else if (taskStatus === \"failed\") {\n        console.error(`Task failed: ${updatedTask.task.error || \"Unknown error\"}`);\n        return [];\n      }\n    }\n    console.error(`Polling timed out after ${maxAttempts} seconds`);\n    return [];\n  } catch (error) {\n    console.error(`Failed to get stacks from agent ${agent.hostname}:`, error);\n    return [];\n  }\n}\nasync function getAllAgentStacks(agents, context) {\n  const agentStacks = [];\n  for (const agent of agents) {\n    try {\n      const stacks = await getStacksFromAgent(agent, context);\n      agentStacks.push(...stacks);\n    } catch (error) {\n      console.error(`Failed to get stacks from agent ${agent.hostname}:`, error);\n    }\n  }\n  return agentStacks;\n}\nexport {\n  getAllAgentStacks as a,\n  getStacksFromAgent as g\n};\n"],"names":[],"mappings":"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"}