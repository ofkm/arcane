{"version":3,"file":"container-service-m5_StWPI.js","sources":["../../../.svelte-kit/adapter-node/chunks/container-service.js"],"sourcesContent":["import { g as getDockerClient, d as dockerHost } from \"./core.js\";\nimport { C as ConflictError, N as NotFoundError, D as DockerApiError } from \"./errors.js\";\nconst containerCache = /* @__PURE__ */ new Map();\nconst CONTAINER_CACHE_TTL = 15e3;\nfunction invalidateContainerCache(containerId) {\n  if (containerId) {\n    containerCache.delete(`container-${containerId}`);\n  }\n  containerCache.delete(\"list-containers-all\");\n  containerCache.delete(\"list-containers-running\");\n}\nasync function listContainers(all = true) {\n  const cacheKey = `list-containers-${all ? \"all\" : \"running\"}`;\n  const cachedData = containerCache.get(cacheKey);\n  if (cachedData && Date.now() - cachedData.timestamp < CONTAINER_CACHE_TTL) {\n    return cachedData.data;\n  }\n  try {\n    const docker = await getDockerClient();\n    const containersData = await docker.listContainers({ all });\n    containerCache.set(cacheKey, {\n      data: containersData,\n      timestamp: Date.now()\n    });\n    return containersData;\n  } catch (error) {\n    console.error(\"Docker Service: Error listing containers:\", error);\n    throw new Error(`Failed to list Docker containers using host \"${dockerHost}\".`);\n  }\n}\nasync function getContainer(containerId) {\n  const cacheKey = `container-${containerId}`;\n  const cachedData = containerCache.get(cacheKey);\n  if (cachedData && Date.now() - cachedData.timestamp < CONTAINER_CACHE_TTL) {\n    return cachedData.data;\n  }\n  try {\n    const docker = await getDockerClient();\n    const container = docker.getContainer(containerId);\n    const inspectData = await container.inspect();\n    containerCache.set(cacheKey, {\n      data: inspectData,\n      timestamp: Date.now()\n    });\n    return inspectData;\n  } catch (error) {\n    console.error(`Docker Service: Error getting container ${containerId}:`, error);\n    if (error instanceof Error && \"statusCode\" in error && error.statusCode === 404) {\n      return null;\n    }\n    throw new Error(`Failed to get container details for ${containerId} using host \"${dockerHost}\".`);\n  }\n}\nasync function startContainer(containerId) {\n  try {\n    const docker = await getDockerClient();\n    const container = docker.getContainer(containerId);\n    await container.start();\n    invalidateContainerCache(containerId);\n  } catch (error) {\n    console.error(`Docker Service: Error starting container ${containerId}:`, error);\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    throw new Error(`Failed to start container ${containerId} using host \"${dockerHost}\". ${errorMessage}`);\n  }\n}\nasync function stopContainer(containerId) {\n  try {\n    const docker = await getDockerClient();\n    const container = docker.getContainer(containerId);\n    await container.stop();\n    invalidateContainerCache(containerId);\n  } catch (error) {\n    console.error(`Docker Service: Error stopping container ${containerId}:`, error);\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    throw new Error(`Failed to stop container ${containerId} using host \"${dockerHost}\". ${errorMessage}`);\n  }\n}\nasync function restartContainer(containerId) {\n  try {\n    const docker = await getDockerClient();\n    const container = docker.getContainer(containerId);\n    await container.restart();\n    invalidateContainerCache(containerId);\n  } catch (error) {\n    console.error(`Docker Service: Error restarting container ${containerId}:`, error);\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    throw new Error(`Failed to restart container ${containerId} using host \"${dockerHost}\". ${errorMessage}`);\n  }\n}\nasync function removeContainer(containerId, force = false) {\n  try {\n    const docker = await getDockerClient();\n    const container = docker.getContainer(containerId);\n    await container.remove({ force });\n    invalidateContainerCache(containerId);\n    console.log(`Docker Service: Container ${containerId} removed successfully (force=${force}).`);\n  } catch (error) {\n    console.error(`Docker Service: Error removing container ${containerId} (force=${force}):`, error);\n    if (error instanceof Error && \"statusCode\" in error) {\n      const dockerError = error;\n      if (dockerError.statusCode === 404) {\n        throw new NotFoundError(`Container ${containerId} not found.`);\n      }\n      if (dockerError.statusCode === 409) {\n        throw new ConflictError(`Cannot remove running container ${containerId}. Stop it first or use the force option.`);\n      }\n      throw new DockerApiError(`Failed to remove container ${containerId}: ${dockerError.message || \"Unknown Docker error\"}`, dockerError.statusCode);\n    }\n    throw new DockerApiError(`Failed to remove container ${containerId}: ${error instanceof Error ? error.message : String(error)}`, 500);\n  }\n}\nasync function getContainerLogs(containerId, options = {}) {\n  try {\n    const docker = await getDockerClient();\n    const container = docker.getContainer(containerId);\n    const logOptions = {\n      tail: options.tail === \"all\" ? void 0 : options.tail || 100,\n      stdout: options.stdout !== false,\n      stderr: options.stderr !== false,\n      timestamps: true,\n      since: options.since || 0,\n      until: options.until || void 0\n    };\n    const logsBuffer = options.follow === true ? await container.logs({ ...logOptions, follow: true }) : await container.logs({ ...logOptions, follow: false });\n    let logString = logsBuffer.toString();\n    if (logOptions.stdout || logOptions.stderr) {\n      const lines = logString.split(\"\\n\");\n      const processedLines = lines.map((line) => {\n        if (!line) return \"\";\n        if (line.length > 8) {\n          return line.substring(8);\n        }\n        return line;\n      }).filter(Boolean);\n      logString = processedLines.join(\"\\n\");\n    }\n    return logString;\n  } catch (error) {\n    console.error(`Docker Service: Error getting logs for container ${containerId}:`, error);\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    throw new Error(`Failed to get logs for container ${containerId} using host \"${dockerHost}\". ${errorMessage}`);\n  }\n}\nasync function createContainer(config) {\n  try {\n    const docker = await getDockerClient();\n    const containerOptions = { ...config };\n    const container = await docker.createContainer(containerOptions);\n    await container.start();\n    const containerInfo = await container.inspect();\n    invalidateContainerCache();\n    return {\n      id: containerInfo.Id,\n      name: containerInfo.Name.substring(1),\n      // Docker names often start with /\n      state: containerInfo.State.Status,\n      status: containerInfo.State.Running ? \"running\" : \"stopped\",\n      created: containerInfo.Created\n    };\n  } catch (error) {\n    console.error(\"Error creating container:\", error);\n    const imageName = config.Image || \"unknown image\";\n    const containerName = config.name || \"unnamed container\";\n    if (error instanceof Error) {\n      const errorMessage = error.message || \"\";\n      if (errorMessage.includes(\"IPAMConfig\")) {\n        throw new Error(`Failed to create container: Invalid IP address configuration. ${errorMessage}`);\n      }\n      if (errorMessage.includes(\"NanoCpus\")) {\n        throw new Error(`Invalid CPU limit specified: ${errorMessage}`);\n      }\n      if (errorMessage.includes(\"Memory\")) {\n        throw new Error(`Invalid Memory limit specified: ${errorMessage}`);\n      }\n      if (errorMessage.toLowerCase().includes(\"name is already in use by container\") || error.statusCode === 409) {\n        throw new ConflictError(`Failed to create container: The name \"${containerName}\" is already in use.`);\n      }\n      throw new Error(`Failed to create container with image \"${imageName}\": ${errorMessage}`);\n    }\n    throw new Error(`Failed to create container with image \"${imageName}\": Unknown error`);\n  }\n}\nasync function getContainerStats(containerId) {\n  try {\n    const docker = await getDockerClient();\n    const container = docker.getContainer(containerId);\n    try {\n      await container.inspect();\n    } catch (inspectError) {\n      if (inspectError instanceof Error && \"statusCode\" in inspectError && inspectError.statusCode === 404) {\n        throw new NotFoundError(`Container ${containerId} not found when trying to get stats.`);\n      }\n      throw inspectError;\n    }\n    const stats = await container.stats({ stream: false });\n    if (!stats || !stats.memory_stats || !stats.cpu_stats) {\n      console.warn(`Docker Service: Received incomplete stats for container ${containerId}. It might not be running.`);\n      return null;\n    }\n    return stats;\n  } catch (error) {\n    if (error instanceof Error && \"statusCode\" in error) {\n      const dockerError = error;\n      if (dockerError.statusCode === 404) {\n        console.warn(`Docker Service: Container ${containerId} not found or not running when fetching stats.`);\n        return null;\n      }\n      if (dockerError.statusCode === 500 && dockerError.message?.includes(\"is not running\")) {\n        console.warn(`Docker Service: Container ${containerId} is not running when fetching stats.`);\n        return null;\n      }\n    }\n    if (error instanceof NotFoundError) {\n      throw error;\n    }\n    console.error(`Docker Service: Error getting stats for container ${containerId}:`, error);\n    const statusCode = error instanceof Error && \"statusCode\" in error ? error.statusCode : 500;\n    const message = error instanceof Error ? error.message : String(error);\n    throw new DockerApiError(`Failed to get stats for container ${containerId}: ${message || \"Unknown Docker error\"}`, statusCode);\n  }\n}\nasync function recreateContainer(containerId) {\n  const docker = await getDockerClient();\n  let originalContainer = null;\n  try {\n    console.log(`Recreating container ${containerId}: Fetching original config...`);\n    originalContainer = await getContainer(containerId);\n    if (!originalContainer) {\n      throw new DockerApiError(`Container ${containerId} not found for recreation.`, 404);\n    }\n    const createOptions = {\n      name: originalContainer.Name?.substring(1),\n      Image: originalContainer.Config?.Image,\n      Env: originalContainer.Config?.Env,\n      Labels: originalContainer.Config?.Labels,\n      ExposedPorts: originalContainer.Config?.ExposedPorts,\n      HostConfig: {\n        PortBindings: originalContainer.HostConfig?.PortBindings || {},\n        NetworkMode: originalContainer.HostConfig?.NetworkMode || (originalContainer.NetworkSettings?.Networks?.bridge ? \"bridge\" : Object.keys(originalContainer.NetworkSettings?.Networks || {})[0] || void 0),\n        Binds: originalContainer.HostConfig?.Binds || originalContainer.Mounts?.filter((mount) => mount.Type === \"bind\" || mount.Type === \"volume\").map((mount) => `${mount.Source}:${mount.Destination}${mount.RW ? \"\" : \":ro\"}`),\n        RestartPolicy: originalContainer.HostConfig?.RestartPolicy,\n        Memory: originalContainer.HostConfig?.Memory,\n        NanoCpus: originalContainer.HostConfig?.NanoCpus\n      },\n      Cmd: originalContainer.Config?.Cmd,\n      Entrypoint: originalContainer.Config?.Entrypoint,\n      WorkingDir: originalContainer.Config?.WorkingDir,\n      User: originalContainer.Config?.User,\n      Volumes: originalContainer.Config?.Volumes,\n      Tty: originalContainer.Config?.Tty,\n      OpenStdin: originalContainer.Config?.OpenStdin,\n      StdinOnce: originalContainer.Config?.StdinOnce\n    };\n    if (originalContainer.NetworkSettings?.Networks && createOptions.HostConfig) {\n      const networks = Object.entries(originalContainer.NetworkSettings.Networks);\n      if (networks.length > 0 && networks[0][0] !== \"bridge\" && createOptions.HostConfig.NetworkMode !== networks[0][0]) {\n        const [networkName, networkConfigValue] = networks[0];\n        const networkConfig = networkConfigValue;\n        if (createOptions.HostConfig.NetworkMode !== networkName) {\n          createOptions.HostConfig.NetworkMode = networkName;\n        }\n        if (networkConfig.IPAMConfig?.IPv4Address) {\n          createOptions.NetworkingConfig = {\n            EndpointsConfig: {\n              [networkName]: {\n                IPAMConfig: {\n                  IPv4Address: networkConfig.IPAMConfig.IPv4Address\n                }\n              }\n            }\n          };\n        }\n      }\n    }\n    try {\n      console.log(`Recreating container ${containerId}: Stopping...`);\n      await stopContainer(containerId);\n    } catch (stopError) {\n      if (stopError instanceof Error && \"statusCode\" in stopError && stopError.statusCode !== 304 && stopError.statusCode !== 404) {\n        console.warn(`Could not stop container ${containerId} before removal: ${stopError instanceof Error ? stopError.message : \"Unknown error\"}`);\n      }\n    }\n    console.log(`Recreating container ${containerId}: Removing...`);\n    await removeContainer(containerId, true);\n    console.log(`Recreating container ${containerId}: Creating new container with image ${createOptions.Image}...`);\n    const newContainer = await docker.createContainer(createOptions);\n    console.log(`Recreating container ${containerId}: Starting new container ${newContainer.id}...`);\n    await startContainer(newContainer.id);\n    invalidateContainerCache();\n    console.log(`Recreating container ${containerId}: Successfully recreated and started as ${newContainer.id}.`);\n    const allContainers = await listContainers(true);\n    const newServiceContainer = allContainers.find((c) => c.Id === newContainer.id);\n    if (!newServiceContainer) {\n      throw new Error(`Container ${newContainer.id} was created but not found in container list`);\n    }\n    return newServiceContainer;\n  } catch (error) {\n    console.error(`Failed to recreate container ${containerId}:`, error);\n    const statusCode = error instanceof Error && \"statusCode\" in error ? error.statusCode : 500;\n    const message = error instanceof Error ? error.message : String(error);\n    throw new DockerApiError(`Failed to recreate container ${originalContainer?.Name?.substring(1) || containerId}: ${message || \"Unknown error\"}`, statusCode);\n  }\n}\nexport {\n  stopContainer as a,\n  restartContainer as b,\n  createContainer as c,\n  recreateContainer as d,\n  getContainerLogs as e,\n  getContainerStats as f,\n  getContainer as g,\n  listContainers as l,\n  removeContainer as r,\n  startContainer as s\n};\n"],"names":[],"mappings":";;;AAEA,MAAM,cAAc,mBAAmB,IAAI,GAAG,EAAE;AAChD,MAAM,mBAAmB,GAAG,IAAI;AAChC,SAAS,wBAAwB,CAAC,WAAW,EAAE;AAC/C,EAAE,IAAI,WAAW,EAAE;AACnB,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC,CAAC;AACrD;AACA,EAAE,cAAc,CAAC,MAAM,CAAC,qBAAqB,CAAC;AAC9C,EAAE,cAAc,CAAC,MAAM,CAAC,yBAAyB,CAAC;AAClD;AACA,eAAe,cAAc,CAAC,GAAG,GAAG,IAAI,EAAE;AAC1C,EAAE,MAAM,QAAQ,GAAG,CAAC,gBAAgB,EAAE,GAAG,GAAG,KAAK,GAAG,SAAS,CAAC,CAAC;AAC/D,EAAE,MAAM,UAAU,GAAG,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC;AACjD,EAAE,IAAI,UAAU,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,UAAU,CAAC,SAAS,GAAG,mBAAmB,EAAE;AAC7E,IAAI,OAAO,UAAU,CAAC,IAAI;AAC1B;AACA,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,eAAe,EAAE;AAC1C,IAAI,MAAM,cAAc,GAAG,MAAM,MAAM,CAAC,cAAc,CAAC,EAAE,GAAG,EAAE,CAAC;AAC/D,IAAI,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE;AACjC,MAAM,IAAI,EAAE,cAAc;AAC1B,MAAM,SAAS,EAAE,IAAI,CAAC,GAAG;AACzB,KAAK,CAAC;AACN,IAAI,OAAO,cAAc;AACzB,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,2CAA2C,EAAE,KAAK,CAAC;AACrE,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,6CAA6C,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC;AACnF;AACA;AACA,eAAe,YAAY,CAAC,WAAW,EAAE;AACzC,EAAE,MAAM,QAAQ,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AAC7C,EAAE,MAAM,UAAU,GAAG,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC;AACjD,EAAE,IAAI,UAAU,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,UAAU,CAAC,SAAS,GAAG,mBAAmB,EAAE;AAC7E,IAAI,OAAO,UAAU,CAAC,IAAI;AAC1B;AACA,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,eAAe,EAAE;AAC1C,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC;AACtD,IAAI,MAAM,WAAW,GAAG,MAAM,SAAS,CAAC,OAAO,EAAE;AACjD,IAAI,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE;AACjC,MAAM,IAAI,EAAE,WAAW;AACvB,MAAM,SAAS,EAAE,IAAI,CAAC,GAAG;AACzB,KAAK,CAAC;AACN,IAAI,OAAO,WAAW;AACtB,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,wCAAwC,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;AACnF,IAAI,IAAI,KAAK,YAAY,KAAK,IAAI,YAAY,IAAI,KAAK,IAAI,KAAK,CAAC,UAAU,KAAK,GAAG,EAAE;AACrF,MAAM,OAAO,IAAI;AACjB;AACA,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,oCAAoC,EAAE,WAAW,CAAC,aAAa,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC;AACrG;AACA;AACA,eAAe,cAAc,CAAC,WAAW,EAAE;AAC3C,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,eAAe,EAAE;AAC1C,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC;AACtD,IAAI,MAAM,SAAS,CAAC,KAAK,EAAE;AAC3B,IAAI,wBAAwB,CAAC,WAAW,CAAC;AACzC,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,yCAAyC,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;AACpF,IAAI,MAAM,YAAY,GAAG,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;AAC/E,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,0BAA0B,EAAE,WAAW,CAAC,aAAa,EAAE,UAAU,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC;AAC3G;AACA;AACA,eAAe,aAAa,CAAC,WAAW,EAAE;AAC1C,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,eAAe,EAAE;AAC1C,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC;AACtD,IAAI,MAAM,SAAS,CAAC,IAAI,EAAE;AAC1B,IAAI,wBAAwB,CAAC,WAAW,CAAC;AACzC,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,yCAAyC,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;AACpF,IAAI,MAAM,YAAY,GAAG,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;AAC/E,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,yBAAyB,EAAE,WAAW,CAAC,aAAa,EAAE,UAAU,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC;AAC1G;AACA;AACA,eAAe,gBAAgB,CAAC,WAAW,EAAE;AAC7C,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,eAAe,EAAE;AAC1C,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC;AACtD,IAAI,MAAM,SAAS,CAAC,OAAO,EAAE;AAC7B,IAAI,wBAAwB,CAAC,WAAW,CAAC;AACzC,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,2CAA2C,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;AACtF,IAAI,MAAM,YAAY,GAAG,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;AAC/E,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,4BAA4B,EAAE,WAAW,CAAC,aAAa,EAAE,UAAU,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC;AAC7G;AACA;AACA,eAAe,eAAe,CAAC,WAAW,EAAE,KAAK,GAAG,KAAK,EAAE;AAC3D,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,eAAe,EAAE;AAC1C,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC;AACtD,IAAI,MAAM,SAAS,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC;AACrC,IAAI,wBAAwB,CAAC,WAAW,CAAC;AACzC,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,0BAA0B,EAAE,WAAW,CAAC,6BAA6B,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;AAClG,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,yCAAyC,EAAE,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;AACrG,IAAI,IAAI,KAAK,YAAY,KAAK,IAAI,YAAY,IAAI,KAAK,EAAE;AACzD,MAAM,MAAM,WAAW,GAAG,KAAK;AAC/B,MAAM,IAAI,WAAW,CAAC,UAAU,KAAK,GAAG,EAAE;AAC1C,QAAQ,MAAM,IAAI,aAAa,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;AACtE;AACA,MAAM,IAAI,WAAW,CAAC,UAAU,KAAK,GAAG,EAAE;AAC1C,QAAQ,MAAM,IAAI,aAAa,CAAC,CAAC,gCAAgC,EAAE,WAAW,CAAC,wCAAwC,CAAC,CAAC;AACzH;AACA,MAAM,MAAM,IAAI,cAAc,CAAC,CAAC,2BAA2B,EAAE,WAAW,CAAC,EAAE,EAAE,WAAW,CAAC,OAAO,IAAI,sBAAsB,CAAC,CAAC,EAAE,WAAW,CAAC,UAAU,CAAC;AACrJ;AACA,IAAI,MAAM,IAAI,cAAc,CAAC,CAAC,2BAA2B,EAAE,WAAW,CAAC,EAAE,EAAE,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;AACzI;AACA;AACA,eAAe,gBAAgB,CAAC,WAAW,EAAE,OAAO,GAAG,EAAE,EAAE;AAC3D,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,eAAe,EAAE;AAC1C,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC;AACtD,IAAI,MAAM,UAAU,GAAG;AACvB,MAAM,IAAI,EAAE,OAAO,CAAC,IAAI,KAAK,KAAK,GAAG,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,IAAI,GAAG;AACjE,MAAM,MAAM,EAAE,OAAO,CAAC,MAAM,KAAK,KAAK;AACtC,MAAM,MAAM,EAAE,OAAO,CAAC,MAAM,KAAK,KAAK;AACtC,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,CAAC;AAC/B,MAAM,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,KAAK;AACnC,KAAK;AACL,IAAI,MAAM,UAAU,GAAG,OAAO,CAAC,MAAM,KAAK,IAAI,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;AAC/J,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC,QAAQ,EAAE;AACzC,IAAI,IAAI,UAAU,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAChD,MAAM,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC;AACzC,MAAM,MAAM,cAAc,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK;AACjD,QAAQ,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE;AAC5B,QAAQ,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7B,UAAU,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;AAClC;AACA,QAAQ,OAAO,IAAI;AACnB,OAAO,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;AACxB,MAAM,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3C;AACA,IAAI,OAAO,SAAS;AACpB,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,iDAAiD,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;AAC5F,IAAI,MAAM,YAAY,GAAG,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;AAC/E,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,iCAAiC,EAAE,WAAW,CAAC,aAAa,EAAE,UAAU,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC;AAClH;AACA;AACA,eAAe,eAAe,CAAC,MAAM,EAAE;AACvC,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,eAAe,EAAE;AAC1C,IAAI,MAAM,gBAAgB,GAAG,EAAE,GAAG,MAAM,EAAE;AAC1C,IAAI,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,eAAe,CAAC,gBAAgB,CAAC;AACpE,IAAI,MAAM,SAAS,CAAC,KAAK,EAAE;AAC3B,IAAI,MAAM,aAAa,GAAG,MAAM,SAAS,CAAC,OAAO,EAAE;AACnD,IAAI,wBAAwB,EAAE;AAC9B,IAAI,OAAO;AACX,MAAM,EAAE,EAAE,aAAa,CAAC,EAAE;AAC1B,MAAM,IAAI,EAAE,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;AAC3C;AACA,MAAM,KAAK,EAAE,aAAa,CAAC,KAAK,CAAC,MAAM;AACvC,MAAM,MAAM,EAAE,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,SAAS,GAAG,SAAS;AACjE,MAAM,OAAO,EAAE,aAAa,CAAC;AAC7B,KAAK;AACL,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC;AACrD,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,IAAI,eAAe;AACrD,IAAI,MAAM,aAAa,GAAG,MAAM,CAAC,IAAI,IAAI,mBAAmB;AAC5D,IAAI,IAAI,KAAK,YAAY,KAAK,EAAE;AAChC,MAAM,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,IAAI,EAAE;AAC9C,MAAM,IAAI,YAAY,CAAC,QAAQ,CAAC,YAAY,CAAC,EAAE;AAC/C,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,8DAA8D,EAAE,YAAY,CAAC,CAAC,CAAC;AACxG;AACA,MAAM,IAAI,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;AAC7C,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,EAAE,YAAY,CAAC,CAAC,CAAC;AACvE;AACA,MAAM,IAAI,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AAC3C,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,gCAAgC,EAAE,YAAY,CAAC,CAAC,CAAC;AAC1E;AACA,MAAM,IAAI,YAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,qCAAqC,CAAC,IAAI,KAAK,CAAC,UAAU,KAAK,GAAG,EAAE;AAClH,QAAQ,MAAM,IAAI,aAAa,CAAC,CAAC,sCAAsC,EAAE,aAAa,CAAC,oBAAoB,CAAC,CAAC;AAC7G;AACA,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,uCAAuC,EAAE,SAAS,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC,CAAC;AAC9F;AACA,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,uCAAuC,EAAE,SAAS,CAAC,gBAAgB,CAAC,CAAC;AAC1F;AACA;AACA,eAAe,iBAAiB,CAAC,WAAW,EAAE;AAC9C,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,eAAe,EAAE;AAC1C,IAAI,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC;AACtD,IAAI,IAAI;AACR,MAAM,MAAM,SAAS,CAAC,OAAO,EAAE;AAC/B,KAAK,CAAC,OAAO,YAAY,EAAE;AAC3B,MAAM,IAAI,YAAY,YAAY,KAAK,IAAI,YAAY,IAAI,YAAY,IAAI,YAAY,CAAC,UAAU,KAAK,GAAG,EAAE;AAC5G,QAAQ,MAAM,IAAI,aAAa,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,oCAAoC,CAAC,CAAC;AAC/F;AACA,MAAM,MAAM,YAAY;AACxB;AACA,IAAI,MAAM,KAAK,GAAG,MAAM,SAAS,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;AAC1D,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;AAC3D,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,wDAAwD,EAAE,WAAW,CAAC,0BAA0B,CAAC,CAAC;AACtH,MAAM,OAAO,IAAI;AACjB;AACA,IAAI,OAAO,KAAK;AAChB,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,IAAI,KAAK,YAAY,KAAK,IAAI,YAAY,IAAI,KAAK,EAAE;AACzD,MAAM,MAAM,WAAW,GAAG,KAAK;AAC/B,MAAM,IAAI,WAAW,CAAC,UAAU,KAAK,GAAG,EAAE;AAC1C,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,0BAA0B,EAAE,WAAW,CAAC,8CAA8C,CAAC,CAAC;AAC9G,QAAQ,OAAO,IAAI;AACnB;AACA,MAAM,IAAI,WAAW,CAAC,UAAU,KAAK,GAAG,IAAI,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,gBAAgB,CAAC,EAAE;AAC7F,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,0BAA0B,EAAE,WAAW,CAAC,oCAAoC,CAAC,CAAC;AACpG,QAAQ,OAAO,IAAI;AACnB;AACA;AACA,IAAI,IAAI,KAAK,YAAY,aAAa,EAAE;AACxC,MAAM,MAAM,KAAK;AACjB;AACA,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,kDAAkD,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;AAC7F,IAAI,MAAM,UAAU,GAAG,KAAK,YAAY,KAAK,IAAI,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC,UAAU,GAAG,GAAG;AAC/F,IAAI,MAAM,OAAO,GAAG,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;AAC1E,IAAI,MAAM,IAAI,cAAc,CAAC,CAAC,kCAAkC,EAAE,WAAW,CAAC,EAAE,EAAE,OAAO,IAAI,sBAAsB,CAAC,CAAC,EAAE,UAAU,CAAC;AAClI;AACA;AACA,eAAe,iBAAiB,CAAC,WAAW,EAAE;AAC9C,EAAE,MAAM,MAAM,GAAG,MAAM,eAAe,EAAE;AACxC,EAAE,IAAI,iBAAiB,GAAG,IAAI;AAC9B,EAAE,IAAI;AACN,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAqB,EAAE,WAAW,CAAC,6BAA6B,CAAC,CAAC;AACnF,IAAI,iBAAiB,GAAG,MAAM,YAAY,CAAC,WAAW,CAAC;AACvD,IAAI,IAAI,CAAC,iBAAiB,EAAE;AAC5B,MAAM,MAAM,IAAI,cAAc,CAAC,CAAC,UAAU,EAAE,WAAW,CAAC,0BAA0B,CAAC,EAAE,GAAG,CAAC;AACzF;AACA,IAAI,MAAM,aAAa,GAAG;AAC1B,MAAM,IAAI,EAAE,iBAAiB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;AAChD,MAAM,KAAK,EAAE,iBAAiB,CAAC,MAAM,EAAE,KAAK;AAC5C,MAAM,GAAG,EAAE,iBAAiB,CAAC,MAAM,EAAE,GAAG;AACxC,MAAM,MAAM,EAAE,iBAAiB,CAAC,MAAM,EAAE,MAAM;AAC9C,MAAM,YAAY,EAAE,iBAAiB,CAAC,MAAM,EAAE,YAAY;AAC1D,MAAM,UAAU,EAAE;AAClB,QAAQ,YAAY,EAAE,iBAAiB,CAAC,UAAU,EAAE,YAAY,IAAI,EAAE;AACtE,QAAQ,WAAW,EAAE,iBAAiB,CAAC,UAAU,EAAE,WAAW,KAAK,iBAAiB,CAAC,eAAe,EAAE,QAAQ,EAAE,MAAM,GAAG,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC;AAChN,QAAQ,KAAK,EAAE,iBAAiB,CAAC,UAAU,EAAE,KAAK,IAAI,iBAAiB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC;AAClO,QAAQ,aAAa,EAAE,iBAAiB,CAAC,UAAU,EAAE,aAAa;AAClE,QAAQ,MAAM,EAAE,iBAAiB,CAAC,UAAU,EAAE,MAAM;AACpD,QAAQ,QAAQ,EAAE,iBAAiB,CAAC,UAAU,EAAE;AAChD,OAAO;AACP,MAAM,GAAG,EAAE,iBAAiB,CAAC,MAAM,EAAE,GAAG;AACxC,MAAM,UAAU,EAAE,iBAAiB,CAAC,MAAM,EAAE,UAAU;AACtD,MAAM,UAAU,EAAE,iBAAiB,CAAC,MAAM,EAAE,UAAU;AACtD,MAAM,IAAI,EAAE,iBAAiB,CAAC,MAAM,EAAE,IAAI;AAC1C,MAAM,OAAO,EAAE,iBAAiB,CAAC,MAAM,EAAE,OAAO;AAChD,MAAM,GAAG,EAAE,iBAAiB,CAAC,MAAM,EAAE,GAAG;AACxC,MAAM,SAAS,EAAE,iBAAiB,CAAC,MAAM,EAAE,SAAS;AACpD,MAAM,SAAS,EAAE,iBAAiB,CAAC,MAAM,EAAE;AAC3C,KAAK;AACL,IAAI,IAAI,iBAAiB,CAAC,eAAe,EAAE,QAAQ,IAAI,aAAa,CAAC,UAAU,EAAE;AACjF,MAAM,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,eAAe,CAAC,QAAQ,CAAC;AACjF,MAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,aAAa,CAAC,UAAU,CAAC,WAAW,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACzH,QAAQ,MAAM,CAAC,WAAW,EAAE,kBAAkB,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;AAC7D,QAAQ,MAAM,aAAa,GAAG,kBAAkB;AAChD,QAAQ,IAAI,aAAa,CAAC,UAAU,CAAC,WAAW,KAAK,WAAW,EAAE;AAClE,UAAU,aAAa,CAAC,UAAU,CAAC,WAAW,GAAG,WAAW;AAC5D;AACA,QAAQ,IAAI,aAAa,CAAC,UAAU,EAAE,WAAW,EAAE;AACnD,UAAU,aAAa,CAAC,gBAAgB,GAAG;AAC3C,YAAY,eAAe,EAAE;AAC7B,cAAc,CAAC,WAAW,GAAG;AAC7B,gBAAgB,UAAU,EAAE;AAC5B,kBAAkB,WAAW,EAAE,aAAa,CAAC,UAAU,CAAC;AACxD;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,IAAI,IAAI;AACR,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAqB,EAAE,WAAW,CAAC,aAAa,CAAC,CAAC;AACrE,MAAM,MAAM,aAAa,CAAC,WAAW,CAAC;AACtC,KAAK,CAAC,OAAO,SAAS,EAAE;AACxB,MAAM,IAAI,SAAS,YAAY,KAAK,IAAI,YAAY,IAAI,SAAS,IAAI,SAAS,CAAC,UAAU,KAAK,GAAG,IAAI,SAAS,CAAC,UAAU,KAAK,GAAG,EAAE;AACnI,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,yBAAyB,EAAE,WAAW,CAAC,iBAAiB,EAAE,SAAS,YAAY,KAAK,GAAG,SAAS,CAAC,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC;AACnJ;AACA;AACA,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAqB,EAAE,WAAW,CAAC,aAAa,CAAC,CAAC;AACnE,IAAI,MAAM,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC;AAC5C,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAqB,EAAE,WAAW,CAAC,oCAAoC,EAAE,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACnH,IAAI,MAAM,YAAY,GAAG,MAAM,MAAM,CAAC,eAAe,CAAC,aAAa,CAAC;AACpE,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAqB,EAAE,WAAW,CAAC,yBAAyB,EAAE,YAAY,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;AACpG,IAAI,MAAM,cAAc,CAAC,YAAY,CAAC,EAAE,CAAC;AACzC,IAAI,wBAAwB,EAAE;AAC9B,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAqB,EAAE,WAAW,CAAC,wCAAwC,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjH,IAAI,MAAM,aAAa,GAAG,MAAM,cAAc,CAAC,IAAI,CAAC;AACpD,IAAI,MAAM,mBAAmB,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,YAAY,CAAC,EAAE,CAAC;AACnF,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAC9B,MAAM,MAAM,IAAI,KAAK,CAAC,CAAC,UAAU,EAAE,YAAY,CAAC,EAAE,CAAC,4CAA4C,CAAC,CAAC;AACjG;AACA,IAAI,OAAO,mBAAmB;AAC9B,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,6BAA6B,EAAE,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;AACxE,IAAI,MAAM,UAAU,GAAG,KAAK,YAAY,KAAK,IAAI,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC,UAAU,GAAG,GAAG;AAC/F,IAAI,MAAM,OAAO,GAAG,KAAK,YAAY,KAAK,GAAG,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;AAC1E,IAAI,MAAM,IAAI,cAAc,CAAC,CAAC,6BAA6B,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,EAAE,EAAE,OAAO,IAAI,eAAe,CAAC,CAAC,EAAE,UAAU,CAAC;AAC/J;AACA;;;;"}