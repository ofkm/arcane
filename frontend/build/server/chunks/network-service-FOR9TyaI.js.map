{"version":3,"file":"network-service-FOR9TyaI.js","sources":["../../../.svelte-kit/adapter-node/chunks/network-service.js"],"sourcesContent":["import { g as getDockerClient, d as dockerHost } from \"./core.js\";\nimport { C as ConflictError, D as DockerApiError, N as NotFoundError } from \"./errors.js\";\nimport { D as DEFAULT_NETWORK_NAMES } from \"./constants.js\";\nasync function listNetworks() {\n  try {\n    const docker = await getDockerClient();\n    const networks = await docker.listNetworks();\n    return networks;\n  } catch (error) {\n    console.error(\"Docker Service: Error listing networks:\", error);\n    const errorMessage = error instanceof Error ? error.message : String(error);\n    throw new Error(`Failed to list Docker networks using host \"${dockerHost}\". ${errorMessage}`);\n  }\n}\nasync function getNetwork(networkId) {\n  try {\n    const docker = await getDockerClient();\n    const network = docker.getNetwork(networkId);\n    const inspectInfo = await network.inspect();\n    console.log(`Docker Service: Inspected network \"${networkId}\" successfully.`);\n    return inspectInfo;\n  } catch (error) {\n    console.error(`Docker Service: Error inspecting network \"${networkId}\":`, error);\n    const err = error;\n    if (err.statusCode === 404) {\n      throw new NotFoundError(`Network \"${networkId}\" not found.`);\n    }\n    if (err.statusCode === 500 && (networkId === \"bridge\" || networkId === \"host\" || networkId === \"none\")) {\n      throw new NotFoundError(`Cannot inspect built-in network \"${networkId}\" by name, use ID if available.`);\n    }\n    throw new DockerApiError(`Failed to inspect network \"${networkId}\": ${err.message || err.reason || \"Unknown Docker error\"}`, err.statusCode);\n  }\n}\nasync function removeNetwork(networkId) {\n  try {\n    if (DEFAULT_NETWORK_NAMES.has(networkId)) {\n      throw new ConflictError(`Network \"${networkId}\" is managed by Docker and cannot be removed.`);\n    }\n    const docker = await getDockerClient();\n    const network = docker.getNetwork(networkId);\n    await network.remove();\n    console.log(`Docker Service: Network \"${networkId}\" removed successfully.`);\n  } catch (error) {\n    console.error(`Docker Service: Error removing network \"${networkId}\":`, error);\n    const err = error;\n    if (err.statusCode === 404) {\n      throw new NotFoundError(`Network \"${networkId}\" not found.`);\n    }\n    if (err.statusCode === 409 || err.reason && err.reason.includes(\"active endpoints\")) {\n      throw new ConflictError(`Network \"${networkId}\" has active endpoints (containers connected). Disconnect containers before removal.`);\n    }\n    if (err.statusCode === 403 || err.reason && err.reason.includes(\"predefined network\")) {\n      throw new ConflictError(`Cannot remove predefined network \"${networkId}\".`);\n    }\n    throw new DockerApiError(`Failed to remove network \"${networkId}\": ${err.message || err.reason || \"Unknown Docker error\"}`, err.statusCode);\n  }\n}\nasync function createNetwork(options) {\n  try {\n    const docker = await getDockerClient();\n    console.log(`Docker Service: Creating network \"${options.Name}\"...`, options);\n    const network = await docker.createNetwork(options);\n    const inspectInfo = await network.inspect();\n    console.log(`Docker Service: Network \"${options.Name}\" (ID: ${inspectInfo.Id}) created successfully.`);\n    return inspectInfo;\n  } catch (error) {\n    console.error(`Docker Service: Error creating network \"${options.Name}\":`, error);\n    const err = error;\n    if (err.statusCode === 409) {\n      throw new ConflictError(`Network \"${options.Name}\" may already exist or conflict with an existing configuration.`);\n    }\n    const errorMessage = err.message || err.reason || \"Unknown error during network creation.\";\n    throw new DockerApiError(`Failed to create network \"${options.Name}\" using host \"${dockerHost}\". ${errorMessage}`, err.statusCode);\n  }\n}\nexport {\n  createNetwork as c,\n  getNetwork as g,\n  listNetworks as l,\n  removeNetwork as r\n};\n"],"names":[],"mappings":"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"}