{"version":3,"file":"oidc-service-HuELLBQe.js","sources":["../../../.svelte-kit/adapter-node/chunks/oidc-service.js"],"sourcesContent":["import { OAuth2Client } from \"arctic\";\nimport { d as private_env } from \"./shared-server.js\";\nimport { b as building } from \"./environment.js\";\nimport { g as getSettings } from \"./settings-service.js\";\nlet oidcConfig = null;\nlet oidcClient = null;\nasync function getOIDCConfig() {\n  if (building) {\n    return {\n      enabled: false,\n      clientId: \"\",\n      clientSecret: \"\",\n      redirectUri: \"\",\n      authorizationEndpoint: \"\",\n      tokenEndpoint: \"\",\n      userinfoEndpoint: \"\",\n      scopes: [\"openid\", \"email\", \"profile\"]\n    };\n  }\n  if (oidcConfig) {\n    return { enabled: true, ...oidcConfig };\n  }\n  try {\n    const settings = await getSettings();\n    let resolvedClientId = private_env.OIDC_CLIENT_ID;\n    let resolvedClientSecret = private_env.OIDC_CLIENT_SECRET;\n    let resolvedRedirectUri = private_env.OIDC_REDIRECT_URI;\n    let resolvedAuthEndpoint = private_env.OIDC_AUTHORIZATION_ENDPOINT;\n    let resolvedTokenEndpoint = private_env.OIDC_TOKEN_ENDPOINT;\n    let resolvedUserInfoEndpoint = private_env.OIDC_USERINFO_ENDPOINT;\n    let resolvedScopesString = private_env.OIDC_SCOPES;\n    if (settings.auth.oidcEnabled && settings.auth.oidc) {\n      if (resolvedClientId === void 0) resolvedClientId = settings.auth.oidc.clientId;\n      if (resolvedClientSecret === void 0) resolvedClientSecret = settings.auth.oidc.clientSecret;\n      if (resolvedRedirectUri === void 0) resolvedRedirectUri = settings.auth.oidc.redirectUri;\n      if (resolvedAuthEndpoint === void 0) resolvedAuthEndpoint = settings.auth.oidc.authorizationEndpoint;\n      if (resolvedTokenEndpoint === void 0) resolvedTokenEndpoint = settings.auth.oidc.tokenEndpoint;\n      if (resolvedUserInfoEndpoint === void 0) resolvedUserInfoEndpoint = settings.auth.oidc.userinfoEndpoint;\n      if (resolvedScopesString === void 0) resolvedScopesString = settings.auth.oidc.scopes;\n    }\n    if (resolvedScopesString === void 0) {\n      resolvedScopesString = \"openid email profile\";\n    }\n    const scopes = resolvedScopesString.split(\" \").filter((s) => s.trim() !== \"\");\n    if (!resolvedClientId || !resolvedClientSecret || !resolvedRedirectUri) {\n      console.log(\"OIDC not configured or incomplete configuration, OIDC will be disabled\");\n      return {\n        enabled: false,\n        clientId: \"\",\n        clientSecret: \"\",\n        redirectUri: \"\",\n        authorizationEndpoint: \"\",\n        tokenEndpoint: \"\",\n        userinfoEndpoint: \"\",\n        scopes\n      };\n    }\n    oidcConfig = {\n      clientId: resolvedClientId,\n      clientSecret: resolvedClientSecret,\n      redirectUri: resolvedRedirectUri,\n      authorizationEndpoint: resolvedAuthEndpoint,\n      tokenEndpoint: resolvedTokenEndpoint,\n      userinfoEndpoint: resolvedUserInfoEndpoint,\n      scopes\n    };\n    if (!resolvedAuthEndpoint || !resolvedTokenEndpoint) {\n      console.warn(\"OIDC Authorization or Token Endpoint is not set (from environment or application settings). OIDC flow will likely fail.\");\n    }\n    return { enabled: true, ...oidcConfig };\n  } catch (error) {\n    console.warn(\"Failed to load OIDC configuration:\", error);\n    return {\n      enabled: false,\n      clientId: \"\",\n      clientSecret: \"\",\n      redirectUri: \"\",\n      authorizationEndpoint: \"\",\n      tokenEndpoint: \"\",\n      userinfoEndpoint: \"\",\n      scopes: [\"openid\", \"email\", \"profile\"]\n    };\n  }\n}\nasync function getOIDCClient() {\n  if (building) {\n    return null;\n  }\n  if (oidcClient) {\n    return oidcClient;\n  }\n  const config = await getOIDCConfig();\n  if (!config.enabled) {\n    return null;\n  }\n  oidcClient = new OAuth2Client(config.clientId, config.clientSecret, config.redirectUri);\n  return oidcClient;\n}\nasync function getOIDCScopes() {\n  const config = await getOIDCConfig();\n  return config.scopes;\n}\nasync function getOIDCAuthorizationEndpoint() {\n  const config = await getOIDCConfig();\n  return config.authorizationEndpoint || \"\";\n}\nasync function getOIDCTokenEndpoint() {\n  const config = await getOIDCConfig();\n  return config.tokenEndpoint || \"\";\n}\nasync function getOIDCUserinfoEndpoint() {\n  const config = await getOIDCConfig();\n  return config.userinfoEndpoint || \"\";\n}\nexport {\n  getOIDCTokenEndpoint as a,\n  getOIDCUserinfoEndpoint as b,\n  getOIDCAuthorizationEndpoint as c,\n  getOIDCScopes as d,\n  getOIDCClient as g\n};\n"],"names":[],"mappings":"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"}