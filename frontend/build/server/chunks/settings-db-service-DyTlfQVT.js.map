{"version":3,"file":"settings-db-service-DyTlfQVT.js","sources":["../../../.svelte-kit/adapter-node/chunks/settings-db-service.js"],"sourcesContent":["import { eq } from \"drizzle-orm\";\nimport { s as settingsTable, c as SETTINGS_DIR } from \"./schema.js\";\nimport fs from \"node:fs/promises\";\nimport path__default from \"node:path\";\nimport { d as decrypt } from \"./encryption-service.js\";\nimport { d as db } from \"./index4.js\";\nasync function getSettingsFromFile() {\n  try {\n    const settingsFilePath = path__default.join(SETTINGS_DIR, \"settings.dat\");\n    console.log(`Attempting to read settings from: ${settingsFilePath}`);\n    const fileExists = await fs.access(settingsFilePath).then(() => true).catch(() => false);\n    console.log(`Settings file exists: ${fileExists}`);\n    if (!fileExists) {\n      console.log(\"No settings file found for migration\");\n      return null;\n    }\n    const fileContent = await fs.readFile(settingsFilePath, \"utf8\");\n    console.log(`Read settings file, length: ${fileContent.length}`);\n    const settingsData = JSON.parse(fileContent);\n    console.log(`Parsed settings data, keys: ${Object.keys(settingsData).join(\", \")}`);\n    let decryptedData = {};\n    if (settingsData._encrypted) {\n      console.log(\"Decrypting sensitive settings data...\");\n      decryptedData = await decrypt(settingsData._encrypted);\n      console.log(`Decrypted data keys: ${Object.keys(decryptedData).join(\", \")}`);\n    }\n    const { _encrypted, ...nonSensitiveData } = settingsData;\n    const completeSettings = {\n      ...nonSensitiveData,\n      ...decryptedData\n    };\n    console.log(`Complete settings keys: ${Object.keys(completeSettings).join(\", \")}`);\n    console.log(`OIDC settings found: ${completeSettings.auth?.oidc ? \"yes\" : \"no\"}`);\n    return completeSettings;\n  } catch (error) {\n    console.error(\"Error reading settings from file:\", error);\n    return null;\n  }\n}\nasync function migrateSettingsToDatabase(backupOldFile = true) {\n  try {\n    console.log(\"Starting settings migration from file to database...\");\n    const fileSettings = await getSettingsFromFile();\n    if (!fileSettings) {\n      console.log(\"No settings found in file system. Migration completed.\");\n      return true;\n    }\n    console.log(\"Retrieved settings from file system\");\n    console.log(`OIDC enabled: ${fileSettings.auth?.oidcEnabled}`);\n    console.log(`OIDC client ID: ${fileSettings.auth?.oidc?.clientId ? \"present\" : \"missing\"}`);\n    const existingSettings = await db.select().from(settingsTable).limit(1);\n    if (existingSettings.length > 0) {\n      console.log(\"Settings already exist in database. Migration aborted.\");\n      return false;\n    }\n    await db.insert(settingsTable).values({\n      dockerHost: fileSettings.dockerHost,\n      stacksDirectory: fileSettings.stacksDirectory,\n      autoUpdate: fileSettings.autoUpdate,\n      autoUpdateInterval: fileSettings.autoUpdateInterval,\n      pollingEnabled: fileSettings.pollingEnabled,\n      pollingInterval: fileSettings.pollingInterval,\n      pruneMode: fileSettings.pruneMode,\n      registryCredentials: JSON.stringify(fileSettings.registryCredentials || []),\n      templateRegistries: JSON.stringify(fileSettings.templateRegistries || []),\n      auth: JSON.stringify(fileSettings.auth),\n      onboarding: fileSettings.onboarding ? JSON.stringify(fileSettings.onboarding) : null,\n      baseServerUrl: fileSettings.baseServerUrl,\n      maturityThresholdDays: fileSettings.maturityThresholdDays\n    });\n    console.log(\"Settings successfully migrated to database\");\n    console.log(`OIDC settings migrated: ${fileSettings.auth?.oidcEnabled ? \"enabled\" : \"disabled\"}`);\n    if (backupOldFile) {\n      const settingsFilePath = path__default.join(SETTINGS_DIR, \"settings.dat\");\n      const backupPath = path__default.join(SETTINGS_DIR, `settings.dat.backup.${Date.now()}`);\n      try {\n        await fs.access(settingsFilePath);\n        await fs.copyFile(settingsFilePath, backupPath);\n        console.log(`Settings file backed up to: ${backupPath}`);\n      } catch (error) {\n        console.warn(\"Could not backup settings file:\", error);\n      }\n    }\n    return true;\n  } catch (error) {\n    console.error(\"Failed to migrate settings to database:\", error);\n    throw error;\n  }\n}\nasync function getSettingsFromDb() {\n  try {\n    const result = await db.select().from(settingsTable).limit(1);\n    if (result.length === 0) {\n      return null;\n    }\n    const dbSettings = result[0];\n    return {\n      dockerHost: dbSettings.dockerHost,\n      stacksDirectory: dbSettings.stacksDirectory,\n      autoUpdate: dbSettings.autoUpdate,\n      autoUpdateInterval: dbSettings.autoUpdateInterval,\n      pollingEnabled: dbSettings.pollingEnabled,\n      pollingInterval: dbSettings.pollingInterval,\n      pruneMode: dbSettings.pruneMode,\n      registryCredentials: JSON.parse(dbSettings.registryCredentials),\n      templateRegistries: JSON.parse(dbSettings.templateRegistries),\n      auth: JSON.parse(dbSettings.auth),\n      onboarding: dbSettings.onboarding ? JSON.parse(dbSettings.onboarding) : void 0,\n      baseServerUrl: dbSettings.baseServerUrl || void 0,\n      maturityThresholdDays: dbSettings.maturityThresholdDays\n    };\n  } catch (error) {\n    console.error(\"Failed to get settings from database:\", error);\n    throw error;\n  }\n}\nasync function saveSettingsToDb(settings) {\n  try {\n    const existing = await db.select().from(settingsTable).limit(1);\n    const settingsData = {\n      dockerHost: settings.dockerHost,\n      stacksDirectory: settings.stacksDirectory,\n      autoUpdate: settings.autoUpdate,\n      autoUpdateInterval: settings.autoUpdateInterval,\n      pollingEnabled: settings.pollingEnabled,\n      pollingInterval: settings.pollingInterval,\n      pruneMode: settings.pruneMode,\n      registryCredentials: JSON.stringify(settings.registryCredentials || []),\n      templateRegistries: JSON.stringify(settings.templateRegistries || []),\n      auth: JSON.stringify(settings.auth),\n      onboarding: settings.onboarding ? JSON.stringify(settings.onboarding) : null,\n      baseServerUrl: settings.baseServerUrl,\n      maturityThresholdDays: settings.maturityThresholdDays,\n      updatedAt: /* @__PURE__ */ new Date()\n    };\n    if (existing.length > 0) {\n      await db.update(settingsTable).set(settingsData).where(eq(settingsTable.id, existing[0].id));\n    } else {\n      await db.insert(settingsTable).values(settingsData);\n    }\n  } catch (error) {\n    console.error(\"Failed to save settings to database:\", error);\n    throw error;\n  }\n}\nexport {\n  getSettingsFromDb,\n  migrateSettingsToDatabase,\n  saveSettingsToDb\n};\n"],"names":[],"mappings":";;;;;;;;;;AAMA,eAAe,mBAAmB,GAAG;AACrC,EAAE,IAAI;AACN,IAAI,MAAM,gBAAgB,GAAG,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,cAAc,CAAC;AAC7E,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,kCAAkC,EAAE,gBAAgB,CAAC,CAAC,CAAC;AACxE,IAAI,MAAM,UAAU,GAAG,MAAM,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC;AAC5F,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,sBAAsB,EAAE,UAAU,CAAC,CAAC,CAAC;AACtD,IAAI,IAAI,CAAC,UAAU,EAAE;AACrB,MAAM,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC;AACzD,MAAM,OAAO,IAAI;AACjB;AACA,IAAI,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,gBAAgB,EAAE,MAAM,CAAC;AACnE,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,4BAA4B,EAAE,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;AACpE,IAAI,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;AAChD,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,4BAA4B,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACtF,IAAI,IAAI,aAAa,GAAG,EAAE;AAC1B,IAAI,IAAI,YAAY,CAAC,UAAU,EAAE;AACjC,MAAM,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC;AAC1D,MAAM,aAAa,GAAG,MAAM,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC;AAC5D,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAqB,EAAE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAClF;AACA,IAAI,MAAM,EAAE,UAAU,EAAE,GAAG,gBAAgB,EAAE,GAAG,YAAY;AAC5D,IAAI,MAAM,gBAAgB,GAAG;AAC7B,MAAM,GAAG,gBAAgB;AACzB,MAAM,GAAG;AACT,KAAK;AACL,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,wBAAwB,EAAE,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACtF,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,qBAAqB,EAAE,gBAAgB,CAAC,IAAI,EAAE,IAAI,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;AACrF,IAAI,OAAO,gBAAgB;AAC3B,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,KAAK,CAAC;AAC7D,IAAI,OAAO,IAAI;AACf;AACA;AACA,eAAe,yBAAyB,CAAC,aAAa,GAAG,IAAI,EAAE;AAC/D,EAAE,IAAI;AACN,IAAI,OAAO,CAAC,GAAG,CAAC,sDAAsD,CAAC;AACvE,IAAI,MAAM,YAAY,GAAG,MAAM,mBAAmB,EAAE;AACpD,IAAI,IAAI,CAAC,YAAY,EAAE;AACvB,MAAM,OAAO,CAAC,GAAG,CAAC,wDAAwD,CAAC;AAC3E,MAAM,OAAO,IAAI;AACjB;AACA,IAAI,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC;AACtD,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,cAAc,EAAE,YAAY,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;AAClE,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,GAAG,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC;AAC/F,IAAI,MAAM,gBAAgB,GAAG,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3E,IAAI,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;AACrC,MAAM,OAAO,CAAC,GAAG,CAAC,wDAAwD,CAAC;AAC3E,MAAM,OAAO,KAAK;AAClB;AACA,IAAI,MAAM,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC;AAC1C,MAAM,UAAU,EAAE,YAAY,CAAC,UAAU;AACzC,MAAM,eAAe,EAAE,YAAY,CAAC,eAAe;AACnD,MAAM,UAAU,EAAE,YAAY,CAAC,UAAU;AACzC,MAAM,kBAAkB,EAAE,YAAY,CAAC,kBAAkB;AACzD,MAAM,cAAc,EAAE,YAAY,CAAC,cAAc;AACjD,MAAM,eAAe,EAAE,YAAY,CAAC,eAAe;AACnD,MAAM,SAAS,EAAE,YAAY,CAAC,SAAS;AACvC,MAAM,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,mBAAmB,IAAI,EAAE,CAAC;AACjF,MAAM,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,kBAAkB,IAAI,EAAE,CAAC;AAC/E,MAAM,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC;AAC7C,MAAM,UAAU,EAAE,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,IAAI;AAC1F,MAAM,aAAa,EAAE,YAAY,CAAC,aAAa;AAC/C,MAAM,qBAAqB,EAAE,YAAY,CAAC;AAC1C,KAAK,CAAC;AACN,IAAI,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC;AAC7D,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,wBAAwB,EAAE,YAAY,CAAC,IAAI,EAAE,WAAW,GAAG,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC;AACrG,IAAI,IAAI,aAAa,EAAE;AACvB,MAAM,MAAM,gBAAgB,GAAG,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,cAAc,CAAC;AAC/E,MAAM,MAAM,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,oBAAoB,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC9F,MAAM,IAAI;AACV,QAAQ,MAAM,EAAE,CAAC,MAAM,CAAC,gBAAgB,CAAC;AACzC,QAAQ,MAAM,EAAE,CAAC,QAAQ,CAAC,gBAAgB,EAAE,UAAU,CAAC;AACvD,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAC,4BAA4B,EAAE,UAAU,CAAC,CAAC,CAAC;AAChE,OAAO,CAAC,OAAO,KAAK,EAAE;AACtB,QAAQ,OAAO,CAAC,IAAI,CAAC,iCAAiC,EAAE,KAAK,CAAC;AAC9D;AACA;AACA,IAAI,OAAO,IAAI;AACf,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,KAAK,CAAC;AACnE,IAAI,MAAM,KAAK;AACf;AACA;AACA,eAAe,iBAAiB,GAAG;AACnC,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACjE,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AAC7B,MAAM,OAAO,IAAI;AACjB;AACA,IAAI,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC;AAChC,IAAI,OAAO;AACX,MAAM,UAAU,EAAE,UAAU,CAAC,UAAU;AACvC,MAAM,eAAe,EAAE,UAAU,CAAC,eAAe;AACjD,MAAM,UAAU,EAAE,UAAU,CAAC,UAAU;AACvC,MAAM,kBAAkB,EAAE,UAAU,CAAC,kBAAkB;AACvD,MAAM,cAAc,EAAE,UAAU,CAAC,cAAc;AAC/C,MAAM,eAAe,EAAE,UAAU,CAAC,eAAe;AACjD,MAAM,SAAS,EAAE,UAAU,CAAC,SAAS;AACrC,MAAM,mBAAmB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,mBAAmB,CAAC;AACrE,MAAM,kBAAkB,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,kBAAkB,CAAC;AACnE,MAAM,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC;AACvC,MAAM,UAAU,EAAE,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC;AACpF,MAAM,aAAa,EAAE,UAAU,CAAC,aAAa,IAAI,KAAK,CAAC;AACvD,MAAM,qBAAqB,EAAE,UAAU,CAAC;AACxC,KAAK;AACL,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,uCAAuC,EAAE,KAAK,CAAC;AACjE,IAAI,MAAM,KAAK;AACf;AACA;AACA,eAAe,gBAAgB,CAAC,QAAQ,EAAE;AAC1C,EAAE,IAAI;AACN,IAAI,MAAM,QAAQ,GAAG,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AACnE,IAAI,MAAM,YAAY,GAAG;AACzB,MAAM,UAAU,EAAE,QAAQ,CAAC,UAAU;AACrC,MAAM,eAAe,EAAE,QAAQ,CAAC,eAAe;AAC/C,MAAM,UAAU,EAAE,QAAQ,CAAC,UAAU;AACrC,MAAM,kBAAkB,EAAE,QAAQ,CAAC,kBAAkB;AACrD,MAAM,cAAc,EAAE,QAAQ,CAAC,cAAc;AAC7C,MAAM,eAAe,EAAE,QAAQ,CAAC,eAAe;AAC/C,MAAM,SAAS,EAAE,QAAQ,CAAC,SAAS;AACnC,MAAM,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,IAAI,EAAE,CAAC;AAC7E,MAAM,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,IAAI,EAAE,CAAC;AAC3E,MAAM,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC;AACzC,MAAM,UAAU,EAAE,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI;AAClF,MAAM,aAAa,EAAE,QAAQ,CAAC,aAAa;AAC3C,MAAM,qBAAqB,EAAE,QAAQ,CAAC,qBAAqB;AAC3D,MAAM,SAAS,kBAAkB,IAAI,IAAI;AACzC,KAAK;AACL,IAAI,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AAC7B,MAAM,MAAM,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAClG,KAAK,MAAM;AACX,MAAM,MAAM,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;AACzD;AACA,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC;AAChE,IAAI,MAAM,KAAK;AACf;AACA;;;;"}