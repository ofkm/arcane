{"version":3,"file":"stack-custom-service-5Y1e9SF0.js","sources":["../../../.svelte-kit/adapter-node/chunks/stack-custom-service.js"],"sourcesContent":["import { promises } from \"node:fs\";\nimport * as path from \"node:path\";\nimport \"dockerode\";\nimport { dump } from \"js-yaml\";\nimport slugify from \"slugify\";\nimport { g as getDockerClient } from \"./core.js\";\nimport { g as getSettings, e as ensureStacksDirectory } from \"./settings-service.js\";\nimport { listStacksFromDb, saveStackToDb, updateStackContentInDb, updateStackRuntimeInfoInDb, deleteStackFromDb, getStackByIdFromDb } from \"./compose-db-service.js\";\nimport { normalizeHealthcheckTest, parseYamlContent, parseEnvContent, generateConfigHash, parseActiveProfiles, createProfileDeploymentPlan, validateAllDependencies, applyProfileFiltering, getAllDefinedProfiles, getProfileUsageStats, generateProfileHelp, substituteVariablesInObject, resolveDependencyOrderWithConditions, resolveDependencyOrder, createVolumeDefinitions, createDependencyWaitConfig, prepareLogConfig, prepareUlimits, prepareExtraHosts, parseMemory, preparePorts, prepareVolumes, prepareRestartPolicy, prepareEnvironmentVariables, prepareHealthcheck, DEFAULT_COMPOSE_VERSION, validateComposeContent, validateComposeStructure } from \"./compose.utils.js\";\nimport { v as validateComposeConfiguration, a as validateExternalResource, b as validateContainerName, e as enhanceContainerConfig } from \"./compose-validate.utils.js\";\nasync function directoryExists(dir) {\n  try {\n    const stats = await promises.stat(dir);\n    return stats.isDirectory();\n  } catch {\n    return false;\n  }\n}\nlet STACKS_DIR = \"\";\nconst stackCache = /* @__PURE__ */ new Map();\nasync function initComposeService() {\n  try {\n    const settings = await getSettings();\n    STACKS_DIR = settings.stacksDirectory;\n    console.log(`Stacks directory initialized: ${STACKS_DIR}`);\n    await ensureStacksDir();\n    try {\n      const dbStacks = await listStacksFromDb();\n      if (dbStacks.length === 0) {\n        console.log(\"No stacks found in database, checking for file-based stacks to migrate...\");\n      }\n    } catch (error) {\n      console.warn(\"Database not yet ready for stack operations:\", error);\n    }\n  } catch (err) {\n    console.error(\"Error initializing compose service:\", err);\n    throw new Error(\"Failed to initialize compose service\");\n  }\n}\nasync function ensureStacksDir() {\n  try {\n    if (!STACKS_DIR || !path.isAbsolute(STACKS_DIR)) {\n      let dirPath = STACKS_DIR || await ensureStacksDirectory();\n      if (!path.isAbsolute(dirPath)) {\n        dirPath = path.resolve(dirPath);\n      }\n      STACKS_DIR = dirPath;\n    }\n    await promises.mkdir(STACKS_DIR, { recursive: true });\n    try {\n      await promises.access(STACKS_DIR, promises.constants.W_OK);\n    } catch {\n      throw new Error(`Stacks directory ${STACKS_DIR} is not writable`);\n    }\n    return STACKS_DIR;\n  } catch (err) {\n    console.error(\"Error creating stacks directory:\", err);\n    throw new Error(\"Failed to create stacks storage directory\");\n  }\n}\nasync function getStackDir(stackId) {\n  if (!stackId || typeof stackId !== \"string\") {\n    throw new Error(\"Stack ID must be a non-empty string\");\n  }\n  const stacksDirAbs = await ensureStacksDir();\n  const safeId = path.basename(stackId);\n  if (safeId !== stackId) {\n    console.warn(`Stack ID \"${stackId}\" was sanitized to \"${safeId}\" for security`);\n  }\n  if (!/^[a-z0-9][a-z0-9_-]*$/.test(safeId)) {\n    throw new Error(`Invalid stack ID: \"${safeId}\". Stack ID must start with a lowercase letter or digit and contain only lowercase letters, digits, hyphens, and underscores.`);\n  }\n  return path.join(stacksDirAbs, safeId);\n}\nasync function getComposeFilePath(stackId) {\n  const stackDirAbs = await getStackDir(stackId);\n  const composePaths = [\n    path.join(stackDirAbs, \"compose.yaml\"),\n    // Preferred format\n    path.join(stackDirAbs, \"compose.yml\"),\n    // Alternative YAML\n    path.join(stackDirAbs, \"docker-compose.yaml\"),\n    // Legacy format\n    path.join(stackDirAbs, \"docker-compose.yml\")\n    // Legacy format\n  ];\n  for (const composePath of composePaths) {\n    try {\n      await promises.access(composePath, promises.constants.R_OK);\n      return composePath;\n    } catch {\n    }\n  }\n  return null;\n}\nasync function getEnvFilePath(stackId) {\n  const stackDir = await getStackDir(stackId);\n  return path.join(stackDir, \".env\");\n}\nasync function saveEnvFile(stackId, content) {\n  const envPath = await getEnvFilePath(stackId);\n  const fileContent = content === void 0 || content === null ? \"\" : content;\n  if (fileContent.trim()) {\n    try {\n      parseEnvContent(fileContent);\n    } catch (error) {\n      throw new Error(`Invalid .env file format: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n  await promises.writeFile(envPath, fileContent, \"utf8\");\n  console.log(`Saved .env file for stack ${stackId}`);\n}\nasync function loadEnvFile(stackId) {\n  const envPath = await getEnvFilePath(stackId);\n  try {\n    const content = await promises.readFile(envPath, \"utf8\");\n    try {\n      parseEnvContent(content);\n    } catch (parseError) {\n      console.warn(`Warning: .env file for stack ${stackId} has parsing issues:`, parseError);\n    }\n    return content;\n  } catch (err) {\n    const nodeErr = err;\n    if (nodeErr.code === \"ENOENT\") {\n      console.log(`No .env file found for stack ${stackId}`);\n      return \"\";\n    }\n    console.error(`Error reading .env file for stack ${stackId}:`, err);\n    throw new Error(`Failed to read .env file: ${nodeErr.message}`, { cause: err });\n  }\n}\nasync function loadComposeStacks() {\n  const cacheKey = \"compose-stacks\";\n  const cachedData = stackCache.get(cacheKey);\n  const EXTENDED_CACHE_TTL = 5 * 60 * 1e3;\n  if (cachedData && Date.now() - cachedData.timestamp < EXTENDED_CACHE_TTL) {\n    console.log(`Returning ${cachedData.data.length} stacks from cache`);\n    return cachedData.data;\n  }\n  try {\n    const dbStacks = await listStacksFromDb();\n    console.log(`Loaded ${dbStacks.length} stacks from database (fast mode)`);\n    const fastStacks = dbStacks.map((stack) => {\n      if (!stack.id || typeof stack.id !== \"string\") {\n        console.warn(\"Stack missing valid ID, skipping\");\n        return null;\n      }\n      return {\n        ...stack,\n        services: [],\n        // Empty services array for fast loading\n        status: stack.status || \"unknown\"\n      };\n    }).filter(Boolean);\n    stackCache.set(cacheKey, {\n      data: fastStacks,\n      timestamp: Date.now()\n    });\n    console.log(`Fast load completed: ${fastStacks.length} stacks`);\n    return fastStacks;\n  } catch (error) {\n    console.error(\"Error loading stacks from database, falling back to file-based approach:\", error);\n    return loadComposeStacksFromFiles();\n  }\n}\nasync function loadComposeStacksFromFiles() {\n  const stacksDir = await ensureStacksDir();\n  try {\n    const stackDirEntries = await promises.readdir(stacksDir, { withFileTypes: true });\n    const stacks = [];\n    for (const entry of stackDirEntries) {\n      if (!entry.isDirectory()) {\n        continue;\n      }\n      const dirName = entry.name;\n      const stackDir = path.join(stacksDir, dirName);\n      let composeFilePath = null;\n      let composeContent = null;\n      const potentialComposePaths = [path.join(stackDir, \"compose.yaml\"), path.join(stackDir, \"docker-compose.yml\")];\n      for (const p of potentialComposePaths) {\n        try {\n          await promises.access(p);\n          composeContent = await promises.readFile(p, \"utf8\");\n          composeFilePath = p;\n          break;\n        } catch {\n        }\n      }\n      if (!composeContent || !composeFilePath) {\n        console.warn(`No compose file found in directory ${dirName}, skipping.`);\n        continue;\n      }\n      const services = await getStackServices(dirName, composeContent);\n      let dirStat;\n      try {\n        dirStat = await promises.stat(stackDir);\n      } catch (statErr) {\n        console.error(`Could not stat directory ${stackDir}:`, statErr);\n        const now = (/* @__PURE__ */ new Date()).toISOString();\n        dirStat = { birthtime: new Date(now), mtime: new Date(now) };\n      }\n      const serviceCount = services.length;\n      const runningCount = services.filter((s) => s.state?.Running).length;\n      let status = \"stopped\";\n      if (serviceCount === 0) {\n        status = \"unknown\";\n      } else if (runningCount === serviceCount) {\n        status = \"running\";\n      } else if (runningCount > 0) {\n        status = \"partially running\";\n      }\n      stacks.push({\n        id: dirName,\n        name: dirName,\n        services,\n        serviceCount,\n        runningCount,\n        status,\n        createdAt: dirStat.birthtime.toISOString(),\n        updatedAt: dirStat.mtime.toISOString(),\n        isExternal: false\n      });\n    }\n    return stacks;\n  } catch (err) {\n    console.error(\"Error loading stacks from STACKS_DIR:\", err);\n    throw new Error(\"Failed to load compose stacks\");\n  }\n}\nasync function getStackServices(stackId, composeContent) {\n  const docker = await getDockerClient();\n  const composeProjectLabel = \"com.docker.compose.project\";\n  const composeServiceLabel = \"com.docker.compose.service\";\n  console.log(`Getting services for stack ${stackId} (compose content length: ${composeContent.length})`);\n  try {\n    let envContent = \"\";\n    let envVars = {};\n    try {\n      envContent = await loadEnvFile(stackId);\n      envVars = parseEnvContent(envContent);\n    } catch (envError) {\n      console.log(`No .env file found for stack ${stackId}, continuing without env vars`);\n    }\n    const getEnvVar = (key) => {\n      return envVars[key] || process.env[key];\n    };\n    let composeData = null;\n    let serviceNames = [];\n    if (composeContent.trim()) {\n      const validation = validateComposeContent(composeContent);\n      if (!validation.valid) {\n        console.warn(`Compose validation errors for stack ${stackId}:`, validation.errors);\n      }\n      composeData = parseYamlContent(composeContent, getEnvVar);\n      if (composeData) {\n        const structureValidation = validateComposeStructure(composeData);\n        if (!structureValidation.valid) {\n          console.warn(`Compose structure validation errors for stack ${stackId}:`, structureValidation.errors);\n        }\n        if (composeData.services) {\n          serviceNames = Object.keys(composeData.services);\n          console.log(`Found ${serviceNames.length} services defined in compose: [${serviceNames.join(\", \")}]`);\n        } else {\n          console.warn(`No services found in compose content for stack ${stackId}`);\n        }\n      }\n    } else {\n      console.warn(`Empty compose content for stack ${stackId}`);\n    }\n    const containers = await docker.listContainers({ all: true });\n    console.log(`Total containers found: ${containers.length}`);\n    const stackContainers = containers.filter((container) => {\n      const labels = container.Labels || {};\n      const names = container.Names || [];\n      const hasCorrectLabel = labels[composeProjectLabel] === stackId;\n      const nameStartsWithPrefix = names.some((name) => name.startsWith(`/${stackId}_`));\n      const belongs = hasCorrectLabel || nameStartsWithPrefix;\n      if (belongs) {\n        console.log(`Container ${container.Id} (${names[0]}) belongs to stack ${stackId}`);\n        console.log(`  - Labels: ${JSON.stringify(labels)}`);\n        console.log(`  - State: ${container.State}`);\n      }\n      return belongs;\n    });\n    console.log(`Found ${stackContainers.length} containers for stack ${stackId}`);\n    const services = [];\n    for (const containerData of stackContainers) {\n      const containerName = containerData.Names?.[0]?.substring(1) || \"\";\n      const labels = containerData.Labels || {};\n      let serviceName = labels[composeServiceLabel];\n      console.log(`Processing container ${containerData.Id} (${containerName})`);\n      if (!serviceName && serviceNames.length > 0) {\n        console.log(`Container ${containerData.Id} missing service label, trying to parse from name`);\n        for (const name of serviceNames) {\n          const servicePrefixWithUnderscore = `${stackId}_${name}_`;\n          const servicePrefixExact = `${stackId}_${name}`;\n          if (containerName.startsWith(servicePrefixWithUnderscore) || containerName === servicePrefixExact) {\n            serviceName = name;\n            console.log(`Matched service name: ${serviceName}`);\n            break;\n          }\n        }\n      }\n      if (!serviceName) {\n        const namePattern = new RegExp(`^${stackId}_([^_]+)(?:_\\\\d+)?$`);\n        const match = containerName.match(namePattern);\n        if (match) {\n          serviceName = match[1];\n          console.log(`Extracted service name from container name: ${serviceName}`);\n        } else {\n          serviceName = containerName.replace(`${stackId}_`, \"\").replace(/_\\d+$/, \"\") || containerName;\n          console.log(`Using fallback service name: ${serviceName}`);\n        }\n      }\n      const service = {\n        id: containerData.Id,\n        name: serviceName,\n        state: {\n          Running: containerData.State === \"running\",\n          Status: containerData.State,\n          ExitCode: containerData.State === \"exited\" ? -1 : 0\n        }\n      };\n      console.log(`Created service: ${JSON.stringify(service)}`);\n      const existingServiceIndex = services.findIndex((s) => s.name === serviceName);\n      if (existingServiceIndex !== -1) {\n        if (!services[existingServiceIndex].id) {\n          services[existingServiceIndex] = service;\n          console.log(`Updated existing service ${serviceName} with container data`);\n        } else {\n          console.log(`Multiple containers found for service ${serviceName} in stack ${stackId}. Keeping first found.`);\n        }\n      } else {\n        services.push(service);\n        console.log(`Added new service ${serviceName}`);\n      }\n    }\n    if (serviceNames.length > 0) {\n      for (const name of serviceNames) {\n        if (!services.some((s) => s.name === name)) {\n          const placeholderService = {\n            id: \"\",\n            name,\n            state: {\n              Running: false,\n              Status: \"not created\",\n              ExitCode: 0\n            }\n          };\n          services.push(placeholderService);\n          console.log(`Added placeholder service for ${name}`);\n        }\n      }\n    }\n    let sortedServices = services;\n    if (composeData && composeData.services) {\n      try {\n        const dependencyOrder = resolveDependencyOrder(composeData.services);\n        sortedServices = services.sort((a, b) => {\n          const aIndex = dependencyOrder.indexOf(a.name);\n          const bIndex = dependencyOrder.indexOf(b.name);\n          if (aIndex !== -1 && bIndex !== -1) {\n            return aIndex - bIndex;\n          }\n          return a.name.localeCompare(b.name);\n        });\n      } catch (depError) {\n        console.warn(`Could not resolve dependency order for stack ${stackId}, using alphabetical sort:`, depError);\n        sortedServices = services.sort((a, b) => a.name.localeCompare(b.name));\n      }\n    } else {\n      sortedServices = services.sort((a, b) => a.name.localeCompare(b.name));\n    }\n    console.log(`Final services for stack ${stackId}: ${sortedServices.length} services`);\n    sortedServices.forEach((s) => console.log(`  - ${s.name}: ${s.state?.Status} (id: ${s.id || \"none\"})`));\n    return sortedServices;\n  } catch (err) {\n    console.error(`Error getting services for stack ${stackId}:`, err);\n    return [];\n  }\n}\nasync function getStack(stackId) {\n  try {\n    const dbStack = await getStackByIdFromDb(stackId);\n    if (dbStack) {\n      console.log(`Found stack ${stackId} in database`);\n      let composeContent = dbStack.composeContent;\n      if (!composeContent) {\n        const composePath = await getComposeFilePath(stackId);\n        if (composePath) {\n          composeContent = await promises.readFile(composePath, \"utf8\");\n          updateStackContentInDb(stackId, { composeContent }).catch(console.error);\n        }\n      }\n      const services = await getStackServices(stackId, composeContent || \"\");\n      const serviceCount = services.length;\n      const runningCount = services.filter((s) => s.state?.Running).length;\n      let status = \"stopped\";\n      if (serviceCount === 0) {\n        status = \"unknown\";\n      } else if (runningCount === serviceCount) {\n        status = \"running\";\n      } else if (runningCount > 0) {\n        status = \"partially running\";\n      }\n      updateStackRuntimeInfoInDb(stackId, {\n        status,\n        serviceCount,\n        runningCount,\n        lastPolled: /* @__PURE__ */ new Date()\n      }).catch(console.error);\n      return {\n        ...dbStack,\n        composeContent,\n        services,\n        serviceCount,\n        runningCount,\n        status\n      };\n    }\n  } catch (error) {\n    console.error(`Error loading stack ${stackId} from database:`, error);\n  }\n  return getStackFromFiles(stackId);\n}\nasync function getStackFromFiles(stackId) {\n  const stackDir = await getStackDir(stackId);\n  try {\n    await promises.access(stackDir);\n  } catch {\n    throw new Error(`Stack with ID \"${stackId}\" not found.`);\n  }\n  const composePath = await getComposeFilePath(stackId);\n  if (!composePath) {\n    throw new Error(`Compose file not found for stack ${stackId}`);\n  }\n  const composeContent = await promises.readFile(composePath, \"utf8\");\n  const envContent = await loadEnvFile(stackId);\n  const services = await getStackServices(stackId, composeContent);\n  const dirStat = await promises.stat(stackDir);\n  const serviceCount = services.length;\n  const runningCount = services.filter((s) => s.state?.Running).length;\n  let status = \"stopped\";\n  if (serviceCount === 0) {\n    status = \"unknown\";\n  } else if (runningCount === serviceCount) {\n    status = \"running\";\n  } else if (runningCount > 0) {\n    status = \"partially running\";\n  }\n  return {\n    id: stackId,\n    name: stackId,\n    services,\n    serviceCount,\n    runningCount,\n    status,\n    createdAt: dirStat.birthtime.toISOString(),\n    updatedAt: dirStat.mtime.toISOString(),\n    composeContent,\n    envContent: envContent || \"\",\n    isExternal: false\n  };\n}\nasync function createStack(name, composeContent, envContent) {\n  console.log(`Validating compose content for new stack: ${name}`);\n  const validation = await validateComposeConfiguration(composeContent, envContent || \"\");\n  if (!validation.valid) {\n    throw new Error(`Invalid compose configuration: ${validation.errors.join(\", \")}`);\n  }\n  if (validation.warnings.length > 0) {\n    console.warn(`Compose warnings for new stack ${name}:`, validation.warnings);\n  }\n  const dirName = slugify(name, {\n    lower: true,\n    strict: true,\n    replacement: \"-\",\n    trim: true\n  });\n  const stacksDir = await ensureStacksDirectory();\n  let counter = 1;\n  let uniqueDirName = dirName;\n  while (await directoryExists(path.join(stacksDir, uniqueDirName))) {\n    uniqueDirName = `${dirName}-${counter}`;\n    counter++;\n  }\n  const stackDir = path.join(stacksDir, uniqueDirName);\n  await promises.mkdir(stackDir, { recursive: true });\n  const normalizedComposeContent = normalizeHealthcheckTest(composeContent);\n  await promises.writeFile(path.join(stackDir, \"compose.yaml\"), normalizedComposeContent);\n  if (envContent) {\n    await promises.writeFile(path.join(stackDir, \".env\"), envContent);\n  }\n  let serviceCount = 0;\n  try {\n    const composeData = parseYamlContent(composeContent);\n    if (composeData?.services) {\n      serviceCount = Object.keys(composeData.services).length;\n    }\n  } catch (parseErr) {\n    console.warn(`Could not parse compose file during creation for stack ${uniqueDirName}:`, parseErr);\n  }\n  const dirStat = await promises.stat(stackDir);\n  const newStack = {\n    id: uniqueDirName,\n    name: uniqueDirName,\n    serviceCount,\n    runningCount: 0,\n    status: \"stopped\",\n    createdAt: dirStat.birthtime.toISOString(),\n    updatedAt: dirStat.mtime.toISOString(),\n    composeContent,\n    envContent: envContent || \"\",\n    isExternal: false,\n    path: stackDir,\n    dirName: uniqueDirName\n  };\n  try {\n    await saveStackToDb(newStack);\n    console.log(`Stack ${uniqueDirName} saved to database`);\n  } catch (error) {\n    console.error(`Error saving stack ${uniqueDirName} to database:`, error);\n  }\n  stackCache.delete(\"compose-stacks\");\n  return newStack;\n}\nasync function updateStack(currentStackId, updates) {\n  if (updates.composeContent !== void 0) {\n    console.log(`Validating updated compose content for stack: ${currentStackId}`);\n    const validation = await validateComposeConfiguration(updates.composeContent, updates.envContent || \"\");\n    if (!validation.valid) {\n      throw new Error(`Invalid compose configuration: ${validation.errors.join(\", \")}`);\n    }\n    if (validation.warnings.length > 0) {\n      console.warn(`Compose warnings for updated stack ${currentStackId}:`, validation.warnings);\n    }\n  }\n  let effectiveStackId = currentStackId;\n  let stackAfterRename = null;\n  if (updates.name) {\n    const newSlugifiedName = slugify(updates.name, {\n      lower: true,\n      strict: true,\n      replacement: \"-\",\n      trim: true\n    });\n    if (newSlugifiedName !== currentStackId) {\n      console.log(`Rename requested for stack '${currentStackId}' to '${updates.name}' (slug: '${newSlugifiedName}').`);\n      stackAfterRename = await renameStack(currentStackId, updates.name);\n      effectiveStackId = stackAfterRename.id;\n      console.log(`Stack '${currentStackId}' successfully renamed to '${effectiveStackId}'.`);\n    }\n  }\n  let contentUpdated = false;\n  const stackDirForContent = await getStackDir(effectiveStackId);\n  const promises$1 = [];\n  if (updates.composeContent !== void 0) {\n    const normalizedComposeContent = normalizeHealthcheckTest(updates.composeContent);\n    const currentComposePath = await getComposeFilePath(effectiveStackId);\n    const targetComposePath = currentComposePath || path.join(stackDirForContent, \"compose.yaml\");\n    promises$1.push(promises.writeFile(targetComposePath, normalizedComposeContent, \"utf8\"));\n    contentUpdated = true;\n    console.log(`Updating composeContent for stack '${effectiveStackId}'.`);\n  }\n  if (updates.envContent !== void 0) {\n    promises$1.push(saveEnvFile(effectiveStackId, updates.envContent));\n    contentUpdated = true;\n    console.log(`Updating envContent for stack '${effectiveStackId}'.`);\n  }\n  if (promises$1.length > 0) {\n    await Promise.all(promises$1);\n  }\n  if (contentUpdated) {\n    try {\n      await updateStackContentInDb(effectiveStackId, {\n        composeContent: updates.composeContent,\n        envContent: updates.envContent\n      });\n      console.log(`Stack ${effectiveStackId} content updated in database`);\n    } catch (error) {\n      console.error(`Error updating stack ${effectiveStackId} in database:`, error);\n    }\n  }\n  stackCache.delete(\"compose-stacks\");\n  if (stackAfterRename && !contentUpdated) {\n    return stackAfterRename;\n  } else {\n    return getStack(effectiveStackId);\n  }\n}\nasync function deployStack(stackId, options = {}) {\n  const stackDir = await getStackDir(stackId);\n  const originalCwd = process.cwd();\n  let deploymentStarted = false;\n  try {\n    const composePath = await getComposeFilePath(stackId);\n    if (!composePath) {\n      throw new Error(`Compose file not found for stack ${stackId}`);\n    }\n    const composeContent = await promises.readFile(composePath, \"utf8\");\n    const envContent = await loadEnvFile(stackId);\n    console.log(`Validating stack configuration before deployment: ${stackId}`);\n    const validation = await validateComposeConfiguration(composeContent, envContent, options.validationMode || \"default\");\n    if (!validation.valid) {\n      throw new Error(`Deployment aborted - validation failed: ${validation.errors.join(\", \")}`);\n    }\n    if (validation.warnings.length > 0) {\n      console.warn(`Deployment warnings for stack ${stackId}:`, validation.warnings);\n    }\n    const envVars = { ...parseEnvContent(envContent), ...options.envOverrides };\n    const getEnvVar = (key) => envVars[key] || process.env[key];\n    const normalizedContent = normalizeHealthcheckTest(composeContent, getEnvVar);\n    if (composeContent !== normalizedContent) {\n      console.log(`Normalized compose content for stack ${stackId}. Writing to disk.`);\n      await promises.writeFile(composePath, normalizedContent, \"utf8\");\n    }\n    process.chdir(stackDir);\n    console.log(`Changed CWD to: ${stackDir} for stack ${stackId} operations.`);\n    const composeData = parseYamlContent(normalizedContent, getEnvVar);\n    if (!composeData) {\n      throw new Error(`Failed to parse compose file for stack ${stackId}`);\n    }\n    if (composeData.services) {\n      console.log(`Validating dependencies for stack ${stackId}...`);\n      const dependencyValidation = validateAllDependencies(composeData.services);\n      if (!dependencyValidation.valid) {\n        console.error(`Dependency validation failed for stack ${stackId}:`, dependencyValidation.errors);\n        throw new Error(`Invalid dependencies: ${dependencyValidation.errors.join(\", \")}`);\n      }\n      if (dependencyValidation.warnings.length > 0) {\n        console.warn(`Dependency warnings for stack ${stackId}:`, dependencyValidation.warnings);\n      }\n    }\n    const activeProfiles = options.profiles?.length ? options.profiles : parseActiveProfiles([], envVars);\n    console.log(`Active profiles for stack ${stackId}: [${activeProfiles.join(\", \")}]`);\n    const { filteredComposeData, deploymentPlan } = applyProfileFiltering(composeData, activeProfiles);\n    console.log(`Deployment plan for stack ${stackId}:`);\n    console.log(`  Services to deploy (${deploymentPlan.plan.servicesToDeploy.length}): [${deploymentPlan.plan.servicesToDeploy.join(\", \")}]`);\n    if (deploymentPlan.plan.servicesToSkip.length > 0) {\n      console.log(`  Services to skip (${deploymentPlan.plan.servicesToSkip.length}):`);\n      for (const skipped of deploymentPlan.plan.servicesToSkip) {\n        console.log(`    - ${skipped.name}: ${skipped.reason}`);\n      }\n    }\n    if (deploymentPlan.warnings.length > 0) {\n      console.warn(`Profile warnings for stack ${stackId}:`, deploymentPlan.warnings);\n    }\n    if (deploymentPlan.errors.length > 0) {\n      throw new Error(`Profile errors for stack ${stackId}: ${deploymentPlan.errors.join(\", \")}`);\n    }\n    console.log(`Checking for existing containers for stack ${stackId}...`);\n    const docker = await getDockerClient();\n    try {\n      const existingContainers = await docker.listContainers({\n        all: true,\n        filters: JSON.stringify({\n          label: [`com.docker.compose.project=${stackId}`]\n        })\n      });\n      if (existingContainers.length > 0) {\n        console.log(`Found ${existingContainers.length} existing containers for stack ${stackId}. Stopping and removing...`);\n        for (const containerInfo of existingContainers) {\n          const container = docker.getContainer(containerInfo.Id);\n          try {\n            if (containerInfo.State === \"running\") {\n              await container.stop({ t: 10 });\n            }\n            await container.remove({ force: true });\n            console.log(`Removed container ${containerInfo.Names?.[0]} (${containerInfo.Id})`);\n          } catch (containerErr) {\n            console.warn(`Error removing container ${containerInfo.Id}:`, containerErr);\n          }\n        }\n      }\n    } catch (cleanupErr) {\n      console.warn(`Error during container cleanup for stack ${stackId}:`, cleanupErr);\n    }\n    const hasExternalNetworks = filteredComposeData.networks && Object.values(filteredComposeData.networks).some((net) => net.external);\n    try {\n      deploymentStarted = true;\n      if (hasExternalNetworks) {\n        console.log(`Stack ${stackId} contains external networks. Using custom deployment approach.`);\n        await deployStackWithExternalNetworks(stackId, filteredComposeData, stackDir);\n      } else {\n        const docker2 = await getDockerClient();\n        const imagePullPromises = Object.entries(filteredComposeData.services || {}).filter(([_, serviceConfig]) => serviceConfig.image).map(async ([serviceName, serviceConfig]) => {\n          const serviceImage = serviceConfig.image;\n          console.log(`Pulling image for service ${serviceName}: ${serviceImage}`);\n          try {\n            await pullImage(docker2, serviceImage);\n          } catch (pullErr) {\n            console.warn(`Warning: Failed to pull image ${serviceImage} for service ${serviceName}:`, pullErr);\n          }\n        });\n        await Promise.all(imagePullPromises);\n        await createStackNetworks(docker2, stackId, filteredComposeData.networks || {});\n        await createAndStartServices(docker2, stackId, filteredComposeData, stackDir);\n      }\n      try {\n        await updateStackRuntimeInfoInDb(stackId, {\n          status: \"running\",\n          lastPolled: Math.floor(Date.now() / 1e3)\n        });\n      } catch (dbError) {\n        console.error(`Error updating stack ${stackId} status in database:`, dbError);\n      }\n      stackCache.delete(\"compose-stacks\");\n      return true;\n    } catch (deployErr) {\n      if (deploymentStarted) {\n        console.log(`Deployment of stack ${stackId} failed. Cleaning up any created containers...`);\n        try {\n          await cleanupFailedDeployment(stackId);\n        } catch (cleanupErr) {\n          console.error(`Error cleaning up failed deployment for stack ${stackId}:`, cleanupErr);\n        }\n      }\n      throw deployErr;\n    }\n  } catch (err) {\n    console.error(`Error deploying stack ${stackId}:`, err);\n    const errorMessage = err instanceof Error ? err.message : String(err);\n    throw new Error(`Failed to deploy stack: ${errorMessage}`);\n  } finally {\n    process.chdir(originalCwd);\n    console.log(`Restored CWD to: ${originalCwd}.`);\n  }\n}\nasync function startStack(stackId) {\n  return deployStack(stackId);\n}\nasync function stopStack(stackId) {\n  console.log(`Attempting to stop stack ${stackId} by manually stopping containers...`);\n  const docker = await getDockerClient();\n  const composeProjectLabel = \"com.docker.compose.project\";\n  let stoppedCount = 0;\n  let removedCount = 0;\n  try {\n    const containers = await docker.listContainers({\n      all: true,\n      filters: JSON.stringify({\n        label: [`${composeProjectLabel}=${stackId}`]\n      })\n    });\n    const allContainers = await docker.listContainers({ all: true });\n    const nameFilteredContainers = allContainers.filter((c) => !containers.some((fc) => fc.Id === c.Id) && (c.Labels?.[composeProjectLabel] === stackId || c.Names?.some((name) => name.startsWith(`/${stackId}_`))));\n    const seen = /* @__PURE__ */ new Set();\n    const stackContainers = [...containers, ...nameFilteredContainers].filter((c) => {\n      if (seen.has(c.Id)) return false;\n      seen.add(c.Id);\n      return true;\n    });\n    if (stackContainers.length === 0) {\n      return true;\n    }\n    console.log(`Found ${stackContainers.length} containers for stack ${stackId}. Attempting to stop and remove...`);\n    for (const containerInfo of stackContainers) {\n      console.log(`Processing container ${containerInfo.Names?.[0]} (ID: ${containerInfo.Id})...`);\n      const container = docker.getContainer(containerInfo.Id);\n      try {\n        if (containerInfo.State === \"running\") {\n          console.log(`Stopping container ${containerInfo.Id}...`);\n          await container.stop();\n          console.log(`Container ${containerInfo.Id} stopped.`);\n          stoppedCount++;\n        } else {\n          console.log(`Container ${containerInfo.Id} is already stopped (State: ${containerInfo.State}).`);\n        }\n        console.log(`Removing container ${containerInfo.Id}...`);\n        await container.remove({ force: true });\n        console.log(`Container ${containerInfo.Id} removed.`);\n        removedCount++;\n      } catch (containerErr) {\n        console.error(`Error processing container ${containerInfo.Id} for stack ${stackId}:`, containerErr);\n      }\n    }\n    try {\n      const networks = await docker.listNetworks({\n        filters: JSON.stringify({\n          label: [`${composeProjectLabel}=${stackId}`]\n        })\n      });\n      if (networks.length > 0) {\n        console.log(`Found ${networks.length} networks for stack ${stackId}. Attempting to remove...`);\n        for (const networkInfo of networks) {\n          console.log(`Removing network ${networkInfo.Name} (ID: ${networkInfo.Id})...`);\n          const network = docker.getNetwork(networkInfo.Id);\n          try {\n            await network.remove();\n            console.log(`Network ${networkInfo.Name} removed.`);\n          } catch (networkErr) {\n            console.error(`Error removing network ${networkInfo.Name} (ID: ${networkInfo.Id}):`, networkErr);\n          }\n        }\n      } else {\n        console.log(`No networks found specifically for stack ${stackId}.`);\n      }\n    } catch (networkListErr) {\n      console.error(`Error listing networks for stack ${stackId}:`, networkListErr);\n    }\n    console.log(`Stack ${stackId} processing complete. Stopped: ${stoppedCount}, Removed: ${removedCount}.`);\n    try {\n      await updateStackRuntimeInfoInDb(stackId, {\n        status: \"stopped\",\n        runningCount: 0,\n        lastPolled: Math.floor(Date.now() / 1e3)\n        // ← Solution: Unix timestamp\n      });\n    } catch (dbError) {\n      console.error(`Error updating stack ${stackId} status in database:`, dbError);\n    }\n    stackCache.delete(\"compose-stacks\");\n    return true;\n  } catch (err) {\n    console.error(`Error during manual stop/remove for stack ${stackId}:`, err);\n    const errorMessage = err instanceof Error ? err.message : String(err);\n    throw new Error(`Failed to stop stack ${stackId}: ${errorMessage}`);\n  }\n}\nasync function restartStack(stackId) {\n  await stopStack(stackId);\n  return deployStack(stackId);\n}\nasync function redeployStack(stackId) {\n  return deployStack(stackId);\n}\nasync function renameStack(currentStackId, newName) {\n  if (!currentStackId || !newName) {\n    throw new Error(\"Current stack ID and new name must be provided.\");\n  }\n  const currentStackDir = await getStackDir(currentStackId);\n  try {\n    await promises.access(currentStackDir);\n  } catch (e) {\n    throw new Error(`Stack with ID '${currentStackId}' not found at ${currentStackDir}.`);\n  }\n  const newDirBaseName = slugify(newName, {\n    lower: true,\n    strict: true,\n    replacement: \"-\",\n    trim: true\n  });\n  if (newDirBaseName === currentStackId) {\n    throw new Error(`The new name '${newName}' (resolves to '${newDirBaseName}') is effectively the same as the current stack ID '${currentStackId}'. No changes made.`);\n  }\n  const running = await isStackRunning(currentStackId);\n  if (running) {\n    throw new Error(`Stack '${currentStackId}' is currently running. Please stop it before renaming.`);\n  }\n  const stacksDir = await ensureStacksDir();\n  let newUniqueDirName = newDirBaseName;\n  let counter = 1;\n  const MAX_ATTEMPTS = 100;\n  while (counter <= MAX_ATTEMPTS) {\n    const pathToCheck = path.join(stacksDir, newUniqueDirName);\n    const exists = await directoryExists(pathToCheck);\n    if (!exists && newUniqueDirName !== currentStackId) {\n      break;\n    }\n    newUniqueDirName = `${newDirBaseName}-${counter}`;\n    counter++;\n  }\n  if (counter > MAX_ATTEMPTS || newUniqueDirName === currentStackId || await directoryExists(path.join(stacksDir, newUniqueDirName))) {\n    throw new Error(`Could not generate a unique directory name for '${newName}' that is different from '${currentStackId}' and does not already exist. Please try a different name.`);\n  }\n  const newStackDir = path.join(stacksDir, newUniqueDirName);\n  try {\n    console.log(`Renaming stack directory from '${currentStackDir}' to '${newStackDir}'...`);\n    await promises.rename(currentStackDir, newStackDir);\n    console.log(`Stack directory for '${currentStackId}' successfully renamed to '${newUniqueDirName}'.`);\n    try {\n      await deleteStackFromDb(currentStackId);\n      const updatedStack = await getStack(newUniqueDirName);\n      await saveStackToDb(updatedStack);\n    } catch (dbError) {\n      console.error(`Error updating database after renaming stack:`, dbError);\n    }\n    stackCache.delete(\"compose-stacks\");\n    return await getStack(newUniqueDirName);\n  } catch (err) {\n    console.error(`Error renaming stack directory for '${currentStackId}' to '${newUniqueDirName}':`, err);\n    const errorMessage = err instanceof Error ? err.message : String(err);\n    throw new Error(`Failed to rename stack: ${errorMessage}`);\n  }\n}\nasync function discoverExternalStacks() {\n  try {\n    const docker = await getDockerClient();\n    const containers = await docker.listContainers({ all: true });\n    const composeProjectLabel = \"com.docker.compose.project\";\n    const composeServiceLabel = \"com.docker.compose.service\";\n    const projectMap = {};\n    containers.forEach((container) => {\n      const labels = container.Labels || {};\n      const projectName = labels[composeProjectLabel];\n      if (projectName) {\n        if (!projectMap[projectName]) {\n          projectMap[projectName] = [];\n        }\n        projectMap[projectName].push({\n          id: container.Id,\n          name: labels[composeServiceLabel] || container.Names[0]?.substring(1),\n          state: {\n            Running: container.State === \"running\",\n            Status: container.State,\n            ExitCode: 0\n          }\n        });\n      }\n    });\n    const externalStacks = [];\n    for (const [projectName, services] of Object.entries(projectMap)) {\n      const stackDir = await getStackDir(projectName);\n      try {\n        await promises.access(stackDir);\n        continue;\n      } catch {\n      }\n      const serviceCount = services.length;\n      const runningCount = services.filter((s) => s.state.Running).length;\n      let status = \"stopped\";\n      if (runningCount === serviceCount && serviceCount > 0) {\n        status = \"running\";\n      } else if (runningCount > 0) {\n        status = \"partially running\";\n      }\n      externalStacks.push({\n        id: projectName,\n        name: projectName,\n        services,\n        serviceCount,\n        runningCount,\n        status,\n        isExternal: true,\n        createdAt: (/* @__PURE__ */ new Date()).toISOString(),\n        updatedAt: (/* @__PURE__ */ new Date()).toISOString()\n      });\n    }\n    return externalStacks;\n  } catch (err) {\n    console.error(\"Error discovering external stacks:\", err);\n    return [];\n  }\n}\nasync function importExternalStack(stackId) {\n  const docker = await getDockerClient();\n  const containers = await docker.listContainers({ all: true });\n  const stackContainers = containers.filter((container2) => {\n    const labels2 = container2.Labels || {};\n    return labels2[\"com.docker.compose.project\"] === stackId;\n  });\n  if (stackContainers.length === 0) {\n    throw new Error(`No containers found for stack '${stackId}'`);\n  }\n  const container = stackContainers[0];\n  const labels = container.Labels || {};\n  let composeContent = \"\";\n  let envContent = void 0;\n  let actualComposeFilePathUsed = \"\";\n  const configFilesLabel = labels[\"com.docker.compose.project.config_files\"];\n  if (configFilesLabel) {\n    const potentialComposePaths = configFilesLabel.split(\",\").map((p) => p.trim()).filter((p) => p);\n    let pathToTry = \"\";\n    if (potentialComposePaths.length > 0) {\n      const primaryNames = [\"compose.yaml\", \"docker-compose.yml\", \"compose.yml\", \"docker-compose.yaml\"];\n      for (const name of primaryNames) {\n        const foundPath = potentialComposePaths.find((p) => path.basename(p) === name);\n        if (foundPath) {\n          pathToTry = foundPath;\n          break;\n        }\n      }\n      if (!pathToTry) {\n        pathToTry = potentialComposePaths[0];\n      }\n    }\n    if (pathToTry) {\n      actualComposeFilePathUsed = pathToTry;\n      try {\n        console.log(`Attempting to read compose file for import from: ${actualComposeFilePathUsed}`);\n        composeContent = await promises.readFile(actualComposeFilePathUsed, \"utf8\");\n        console.log(`Successfully read compose file: ${actualComposeFilePathUsed}. Content length: ${composeContent.length}`);\n        const composeFileDir = path.dirname(actualComposeFilePathUsed);\n        const envFilePath = path.join(composeFileDir, \".env\");\n        try {\n          envContent = await promises.readFile(envFilePath, \"utf8\");\n          console.log(`Successfully read .env file from: ${envFilePath}`);\n        } catch (envErr) {\n          const nodeEnvErr = envErr;\n          if (nodeEnvErr.code === \"ENOENT\") {\n            console.log(`.env file not found at ${envFilePath}, proceeding without it.`);\n          } else {\n            console.warn(`Could not read .env file at ${envFilePath} during import:`, envErr);\n          }\n        }\n      } catch (err) {\n        console.warn(`Could not read compose file at ${actualComposeFilePathUsed} during import:`, err);\n      }\n    } else {\n      console.warn(`No suitable compose file path found in 'com.docker.compose.project.config_files' label: \"${configFilesLabel}\"`);\n    }\n  } else {\n    console.warn(`Label 'com.docker.compose.project.config_files' not found for stack '${stackId}'. Will attempt to generate compose file.`);\n  }\n  if (!composeContent) {\n    console.log(`Generating compose file for stack '${stackId}' as no existing file could be read or found.`);\n    const services = {};\n    for (const cont of stackContainers) {\n      const containerLabels = cont.Labels || {};\n      const serviceName = containerLabels[\"com.docker.compose.service\"] || cont.Names[0]?.replace(`/${stackId}_`, \"\").replace(/_\\d+$/, \"\") || `service_${cont.Id.substring(0, 8)}`;\n      services[serviceName] = {\n        image: cont.Image\n      };\n    }\n    composeContent = `# Generated compose file for imported stack: ${stackId}\n# This was automatically generated by Arcane from an external stack.\n# The original compose file could not be read from: ${actualComposeFilePathUsed || \"path not specified in labels\"}.\n# You may need to adjust this manually for correct operation.\n\nservices:\n${dump({ services }, { indent: 2 }).substring(\"services:\".length).trimStart()}`;\n  }\n  stackCache.delete(\"compose-stacks\");\n  return await createStack(stackId, normalizeHealthcheckTest(composeContent), envContent);\n}\nasync function listStacks(includeExternal = false) {\n  const managedStacks = await loadComposeStacks();\n  let allStacks = [...managedStacks];\n  if (includeExternal) {\n    const externalStacksList = await discoverExternalStacks();\n    const processedExternalStacks = externalStacksList.map((stack) => ({\n      ...stack,\n      hasArcaneMeta: false\n    }));\n    allStacks = [...allStacks, ...processedExternalStacks];\n  }\n  return allStacks;\n}\nasync function isStackRunning(stackId) {\n  const docker = await getDockerClient();\n  const composeProjectLabel = \"com.docker.compose.project\";\n  try {\n    const containers = await docker.listContainers({\n      all: true,\n      filters: JSON.stringify({\n        label: [`${composeProjectLabel}=${stackId}`]\n      })\n    });\n    const allContainers = await docker.listContainers({ all: true });\n    const nameFilteredContainers = allContainers.filter((c) => !containers.some((fc) => fc.Id === c.Id) && (c.Labels?.[composeProjectLabel] === stackId || c.Names?.some((name) => name.startsWith(`/${stackId}_`))));\n    const stackContainers = [...containers, ...nameFilteredContainers];\n    return stackContainers.some((c) => c.State === \"running\");\n  } catch (err) {\n    console.error(`Error checking if stack ${stackId} is running:`, err);\n    return false;\n  }\n}\nasync function createStackNetworks(docker, stackId, networks) {\n  if (!networks || Object.keys(networks).length === 0) {\n    const defaultNetworkName = `${stackId}_default`;\n    try {\n      await docker.createNetwork({\n        Name: defaultNetworkName,\n        Driver: \"bridge\",\n        Labels: {\n          \"com.docker.compose.project\": stackId,\n          \"com.docker.compose.network\": \"default\"\n        }\n      });\n    } catch (err) {\n      if (err.statusCode === 409) {\n        console.log(`Default network ${defaultNetworkName} already exists, reusing it.`);\n      } else {\n        throw err;\n      }\n    }\n    return;\n  }\n  for (const [networkName, networkConfig] of Object.entries(networks)) {\n    if (!networkConfig) {\n      continue;\n    }\n    try {\n      validateExternalResource(networkName, networkConfig, \"network\");\n    } catch (error) {\n      throw new Error(`Network validation failed: ${error instanceof Error ? error.message : String(error)}`);\n    }\n    if (networkConfig.external) {\n      const externalName = typeof networkConfig.external === \"object\" && networkConfig.external.name ? networkConfig.external.name : typeof networkConfig.external === \"string\" ? networkConfig.external : networkConfig.name || networkName;\n      console.log(`Using external network: ${externalName}`);\n      continue;\n    }\n    const networkToCreate = {\n      Name: networkConfig.name || `${stackId}_${networkName}`,\n      Driver: networkConfig.driver || \"bridge\",\n      Labels: {\n        \"com.docker.compose.project\": stackId,\n        \"com.docker.compose.network\": networkName,\n        // Handle labels that can be object or array\n        ...Array.isArray(networkConfig.labels) ? Object.fromEntries(\n          networkConfig.labels.map((label) => {\n            const [key, value] = label.split(\"=\", 2);\n            return [key, value || \"\"];\n          })\n        ) : networkConfig.labels || {}\n      },\n      Options: networkConfig.driver_opts || {}\n    };\n    if (networkConfig.ipam) {\n      networkToCreate.IPAM = {\n        Driver: networkConfig.ipam.driver || \"default\",\n        Config: networkConfig.ipam.config || [],\n        Options: networkConfig.ipam.options || {}\n      };\n    }\n    try {\n      console.log(`Creating network: ${networkToCreate.Name}`);\n      await docker.createNetwork(networkToCreate);\n      console.log(`Successfully created network: ${networkToCreate.Name}`);\n    } catch (err) {\n      if (err.statusCode === 409) {\n        console.log(`Network ${networkToCreate.Name} already exists, reusing it.`);\n      } else {\n        console.error(`Error creating network ${networkToCreate.Name}:`, err);\n        throw err;\n      }\n    }\n  }\n}\nasync function pullImage(docker, imageTag) {\n  return new Promise((resolve, reject) => {\n    docker.pull(imageTag, {}, (pullError, stream) => {\n      if (pullError) {\n        reject(pullError);\n        return;\n      }\n      if (!stream) {\n        reject(new Error(`Docker pull for ${imageTag} did not return a stream.`));\n        return;\n      }\n      docker.modem.followProgress(\n        stream,\n        (progressError, output) => {\n          if (progressError) {\n            reject(progressError);\n          } else {\n            console.log(`Successfully pulled image: ${imageTag}`);\n            resolve();\n          }\n        },\n        (event) => {\n          if (event.progress) {\n            console.log(`${imageTag}: ${event.status} ${event.progress}`);\n          } else if (event.status) {\n            console.log(`${imageTag}: ${event.status}`);\n          }\n        }\n      );\n    });\n  });\n}\nasync function createAndStartServices(docker, stackId, composeData, stackDir) {\n  if (!composeData || !composeData.services) {\n    throw new Error(`No services defined in compose file for stack ${stackId}`);\n  }\n  console.log(`Creating and starting ${Object.keys(composeData.services).length} services for stack ${stackId}`);\n  let envVars = {};\n  try {\n    const envContent = await loadEnvFile(stackId);\n    envVars = parseEnvContent(envContent);\n  } catch (envError) {\n    console.log(`No .env file found for stack ${stackId}, proceeding without env vars`);\n  }\n  const getEnvVar = (key) => {\n    return envVars[key] || process.env[key];\n  };\n  const processedComposeData = substituteVariablesInObject(composeData, getEnvVar);\n  let serviceOrder;\n  try {\n    const dependencyResolution = resolveDependencyOrderWithConditions(processedComposeData.services);\n    serviceOrder = dependencyResolution.order;\n    console.log(`Enhanced service startup order for stack ${stackId}: [${serviceOrder.join(\", \")}]`);\n    console.log(`Service deployment batches:`, dependencyResolution.batches);\n    if (dependencyResolution.warnings.length > 0) {\n      console.warn(`Dependency order warnings for stack ${stackId}:`, dependencyResolution.warnings);\n    }\n  } catch (depError) {\n    console.warn(`Could not resolve enhanced dependencies for stack ${stackId}, falling back to basic resolution:`, depError);\n    try {\n      serviceOrder = resolveDependencyOrder(processedComposeData.services);\n    } catch (basicDepError) {\n      console.warn(`Basic dependency resolution also failed, using alphabetical order:`, basicDepError);\n      serviceOrder = Object.keys(processedComposeData.services).sort();\n    }\n  }\n  const volumeDefinitions = createVolumeDefinitions(processedComposeData, stackId);\n  for (const volumeDef of volumeDefinitions) {\n    try {\n      console.log(`Creating volume: ${volumeDef.name}`);\n      await docker.createVolume({\n        Name: volumeDef.name,\n        ...volumeDef.config\n      });\n      console.log(`Successfully created volume: ${volumeDef.name}`);\n    } catch (createErr) {\n      if (createErr.statusCode === 409) {\n        console.log(`Volume ${volumeDef.name} already exists, reusing it.`);\n      } else {\n        console.error(`Error creating volume ${volumeDef.name}:`, createErr);\n        throw createErr;\n      }\n    }\n  }\n  for (const serviceName of serviceOrder) {\n    const serviceConfig = composeData.services[serviceName];\n    if (!serviceConfig) {\n      console.warn(`Service ${serviceName} not found in processed compose data, skipping`);\n      continue;\n    }\n    console.log(`Creating service: ${serviceName}`);\n    if (!serviceConfig.image && !serviceConfig.build) {\n      throw new Error(`Service ${serviceName} must specify either 'image' or 'build'`);\n    }\n    if (serviceConfig.depends_on) {\n      const dependencyConfig = createDependencyWaitConfig(serviceName, serviceConfig);\n      if (dependencyConfig.warnings.length > 0) {\n        console.warn(`Dependency warnings for service ${serviceName}:`, dependencyConfig.warnings);\n      }\n      for (const dep of dependencyConfig.dependencies) {\n        console.log(`Waiting for dependency: ${dep.service} (condition: ${dep.condition}, timeout: ${dep.timeout}ms)`);\n        try {\n          await waitForDependency(stackId, dep.service, dep.condition, dep.timeout, dep.restart);\n        } catch (depError) {\n          const errorMsg = `Failed to satisfy dependency '${dep.service}' for service '${serviceName}': ${depError instanceof Error ? depError.message : String(depError)}`;\n          console.error(errorMsg);\n          if (dep.condition === \"service_healthy\" || dep.condition === \"service_completed_successfully\") {\n            throw new Error(errorMsg);\n          } else {\n            console.warn(`Continuing deployment despite dependency failure: ${errorMsg}`);\n          }\n        }\n      }\n    }\n    let containerName = validateContainerName(serviceName, serviceConfig, stackId);\n    if (containerName.includes(\"${\")) {\n      console.warn(`CRITICAL: Unresolved variable in container_name for service '${serviceName}': ${containerName}. Using default name: ${stackId}_${serviceName}_1`);\n      containerName = `${stackId}_${serviceName}_1`;\n    }\n    let containerConfig = {\n      name: containerName,\n      Image: serviceConfig.image,\n      Labels: {\n        \"com.docker.compose.project\": stackId,\n        \"com.docker.compose.service\": serviceName,\n        \"com.docker.compose.config-hash\": generateConfigHash(serviceConfig),\n        \"com.docker.compose.version\": DEFAULT_COMPOSE_VERSION,\n        ...serviceConfig.labels || {}\n      },\n      Env: await prepareEnvironmentVariables(serviceConfig.environment, stackDir),\n      HostConfig: {\n        RestartPolicy: prepareRestartPolicy(serviceConfig.restart),\n        Binds: prepareVolumes(serviceConfig.volumes ?? [], processedComposeData, stackId),\n        PortBindings: preparePorts(serviceConfig.ports ?? []),\n        Memory: serviceConfig.mem_limit ? parseMemory(serviceConfig.mem_limit) : void 0,\n        NanoCpus: serviceConfig.cpus ? Math.floor(parseFloat(String(serviceConfig.cpus)) * 1e9) : void 0,\n        ExtraHosts: prepareExtraHosts(Array.isArray(serviceConfig.extra_hosts) ? serviceConfig.extra_hosts : []),\n        Ulimits: prepareUlimits(serviceConfig.ulimits),\n        LogConfig: prepareLogConfig(serviceConfig.logging || {}),\n        Dns: serviceConfig.dns || [],\n        DnsOptions: serviceConfig.dns_opt || [],\n        DnsSearch: serviceConfig.dns_search || [],\n        CapAdd: serviceConfig.cap_add || [],\n        CapDrop: serviceConfig.cap_drop || [],\n        Privileged: serviceConfig.privileged || false,\n        ReadonlyRootfs: serviceConfig.read_only || false\n      }\n    };\n    containerConfig = enhanceContainerConfig(containerConfig, serviceConfig);\n    if (serviceConfig.command) {\n      containerConfig.Cmd = Array.isArray(serviceConfig.command) ? serviceConfig.command : [serviceConfig.command];\n    }\n    if (serviceConfig.entrypoint) {\n      containerConfig.Entrypoint = Array.isArray(serviceConfig.entrypoint) ? serviceConfig.entrypoint : [serviceConfig.entrypoint];\n    }\n    if (serviceConfig.working_dir) containerConfig.WorkingDir = serviceConfig.working_dir;\n    if (serviceConfig.user) containerConfig.User = serviceConfig.user;\n    if (serviceConfig.network_mode) {\n      containerConfig.HostConfig.NetworkMode = serviceConfig.network_mode;\n    } else if (serviceConfig.networks) {\n      const networks = Array.isArray(serviceConfig.networks) ? serviceConfig.networks : Object.keys(serviceConfig.networks);\n      if (networks.length > 0) {\n        const primaryNetwork = networks[0];\n        const networkDefinition = processedComposeData.networks?.[primaryNetwork];\n        let fullNetworkName;\n        if (networkDefinition?.external) {\n          if (typeof networkDefinition.external === \"object\" && networkDefinition.external.name) {\n            fullNetworkName = networkDefinition.external.name;\n          } else if (typeof networkDefinition.external === \"string\") {\n            fullNetworkName = networkDefinition.external;\n          } else if (networkDefinition.name) {\n            fullNetworkName = networkDefinition.name;\n          } else {\n            fullNetworkName = primaryNetwork;\n          }\n        } else {\n          fullNetworkName = networkDefinition?.name || `${stackId}_${primaryNetwork}`;\n        }\n        containerConfig.HostConfig.NetworkMode = fullNetworkName;\n        if (!Array.isArray(serviceConfig.networks)) {\n          const networkConfig = serviceConfig.networks[primaryNetwork];\n          if (networkConfig && typeof networkConfig === \"object\") {\n            if (!containerConfig.NetworkingConfig) {\n              containerConfig.NetworkingConfig = { EndpointsConfig: {} };\n            }\n            const endpointConfig = {};\n            if (networkConfig.ipv4_address) {\n              endpointConfig.IPAMConfig = {\n                IPv4Address: networkConfig.ipv4_address\n              };\n              console.log(`SETTING STATIC IP: ${networkConfig.ipv4_address} for service ${serviceName} on network ${fullNetworkName}`);\n            }\n            if (networkConfig.aliases && Array.isArray(networkConfig.aliases)) {\n              endpointConfig.Aliases = networkConfig.aliases;\n            }\n            containerConfig.NetworkingConfig.EndpointsConfig[fullNetworkName] = endpointConfig;\n          }\n        }\n      }\n    }\n    if (serviceConfig.healthcheck) {\n      containerConfig.Healthcheck = prepareHealthcheck(serviceConfig.healthcheck);\n    }\n    try {\n      console.log(`Creating container: ${containerName}`);\n      const container = await docker.createContainer(containerConfig);\n      console.log(`Successfully created container: ${containerName} (ID: ${container.id})`);\n      if (serviceConfig.networks && !serviceConfig.network_mode) {\n        const networks = Array.isArray(serviceConfig.networks) ? serviceConfig.networks : Object.keys(serviceConfig.networks);\n        const additionalNetworks = networks.slice(1);\n        for (const netName of additionalNetworks) {\n          try {\n            const networkDefinition = processedComposeData.networks?.[netName];\n            let fullNetworkName;\n            if (networkDefinition?.external) {\n              if (typeof networkDefinition.external === \"object\" && networkDefinition.external.name) {\n                fullNetworkName = networkDefinition.external.name;\n              } else if (typeof networkDefinition.external === \"string\") {\n                fullNetworkName = networkDefinition.external;\n              } else if (networkDefinition.name) {\n                fullNetworkName = networkDefinition.name;\n              } else {\n                fullNetworkName = netName;\n              }\n            } else {\n              fullNetworkName = networkDefinition?.name || `${stackId}_${netName}`;\n            }\n            const endpointConfig = {};\n            if (!Array.isArray(serviceConfig.networks)) {\n              const serviceNetConfig = serviceConfig.networks[netName];\n              if (serviceNetConfig && typeof serviceNetConfig === \"object\") {\n                const ipamConfig = {};\n                if (serviceNetConfig.ipv4_address) {\n                  ipamConfig.IPv4Address = serviceNetConfig.ipv4_address;\n                  console.log(`Connecting container ${container.id} to network: ${fullNetworkName} with static IP: ${serviceNetConfig.ipv4_address}`);\n                }\n                if (serviceNetConfig.ipv6_address) {\n                  ipamConfig.IPv6Address = serviceNetConfig.ipv6_address;\n                }\n                if (Object.keys(ipamConfig).length > 0) {\n                  endpointConfig.IPAMConfig = ipamConfig;\n                }\n                if (serviceNetConfig.aliases && Array.isArray(serviceNetConfig.aliases)) {\n                  endpointConfig.Aliases = serviceNetConfig.aliases;\n                }\n              }\n            }\n            const network = docker.getNetwork(fullNetworkName);\n            await network.connect({\n              Container: container.id,\n              EndpointConfig: endpointConfig\n            });\n            console.log(`Connected container ${container.id} to network: ${fullNetworkName} with config:`, endpointConfig);\n          } catch (netErr) {\n            console.error(`Error connecting container to network ${netName}:`, netErr);\n          }\n        }\n      }\n      console.log(`Starting container: ${containerName} (ID: ${container.id})`);\n      await container.start();\n      console.log(`Successfully started container: ${containerName}`);\n    } catch (createErr) {\n      console.error(`Error creating/starting container for service ${serviceName}:`, createErr);\n      throw createErr;\n    }\n  }\n  console.log(`Successfully created and started all services for stack ${stackId}`);\n}\nasync function deployStackWithExternalNetworks(stackId, composeData, stackDir) {\n  const docker = await getDockerClient();\n  console.log(`Pulling images for stack ${stackId} with external networks...`);\n  for (const [serviceName, serviceConfig] of Object.entries(composeData.services || {})) {\n    const serviceImage = serviceConfig.image;\n    if (serviceImage) {\n      console.log(`Pulling image for service ${serviceName}: ${serviceImage}`);\n      try {\n        await pullImage(docker, serviceImage);\n      } catch (pullErr) {\n        console.warn(`Warning: Failed to pull image ${serviceImage} for service ${serviceName}:`, pullErr);\n      }\n    }\n  }\n  await createStackNetworks(docker, stackId, composeData.networks || {});\n  await createAndStartServices(docker, stackId, composeData, stackDir);\n  console.log(`Successfully deployed stack ${stackId} with external networks`);\n}\nasync function cleanupFailedDeployment(stackId) {\n  console.log(`Cleaning up containers for failed deployment of stack ${stackId}...`);\n  const docker = await getDockerClient();\n  try {\n    const containers = await docker.listContainers({\n      all: true,\n      filters: JSON.stringify({\n        label: [`com.docker.compose.project=${stackId}`]\n      })\n    });\n    const allContainers = await docker.listContainers({ all: true });\n    const nameFilteredContainers = allContainers.filter((c) => !containers.some((fc) => fc.Id === c.Id) && c.Names?.some((name) => name.startsWith(`/${stackId}_`)));\n    const stackContainers = [...containers, ...nameFilteredContainers];\n    if (stackContainers.length === 0) {\n      console.log(`No containers found for stack ${stackId}.`);\n      return;\n    }\n    for (const containerInfo of stackContainers) {\n      const container = docker.getContainer(containerInfo.Id);\n      try {\n        const containerDetails = await container.inspect();\n        if (containerDetails.State.Running) {\n          console.log(`Stopping container ${containerInfo.Id}...`);\n          await container.stop();\n        }\n        console.log(`Removing container ${containerInfo.Id}...`);\n        await container.remove();\n      } catch (err) {\n        console.error(`Error cleaning up container ${containerInfo.Id}:`, err);\n      }\n    }\n  } catch (err) {\n    console.error(`Error cleaning up failed deployment for stack ${stackId}:`, err);\n  }\n}\nasync function destroyStack(stackId, removeVolumes = false, removeFiles = false) {\n  try {\n    console.log(`Destroying stack ${stackId} (removeVolumes: ${removeVolumes}, removeFiles: ${removeFiles})`);\n    await stopStack(stackId);\n    if (removeVolumes) {\n      try {\n        const docker = await getDockerClient();\n        const volumes = await docker.listVolumes({\n          filters: JSON.stringify({\n            label: [`com.docker.compose.project=${stackId}`]\n          })\n        });\n        if (volumes.Volumes && volumes.Volumes.length > 0) {\n          console.log(`Found ${volumes.Volumes.length} volumes for stack ${stackId}. Removing...`);\n          for (const volumeInfo of volumes.Volumes) {\n            try {\n              const volume = docker.getVolume(volumeInfo.Name);\n              await volume.remove();\n              console.log(`Removed volume: ${volumeInfo.Name}`);\n            } catch (volumeError) {\n              console.error(`Error removing volume ${volumeInfo.Name}:`, volumeError);\n            }\n          }\n        } else {\n          console.log(`No volumes found for stack ${stackId}`);\n        }\n      } catch (volumeListError) {\n        console.error(`Error listing volumes for stack ${stackId}:`, volumeListError);\n      }\n    }\n    try {\n      await deleteStackFromDb(stackId);\n      console.log(`Stack ${stackId} removed from database`);\n    } catch (dbError) {\n      console.error(`Error removing stack ${stackId} from database:`, dbError);\n    }\n    if (removeFiles) {\n      const stackDir = await getStackDir(stackId);\n      try {\n        await promises.rm(stackDir, { recursive: true, force: true });\n        console.log(`Stack ${stackId} files removed from ${stackDir}`);\n      } catch (fileError) {\n        console.error(`Error removing stack ${stackId} files:`, fileError);\n        throw new Error(`Failed to remove stack files: ${fileError}`);\n      }\n    }\n    stackCache.delete(\"compose-stacks\");\n    console.log(`Successfully destroyed stack ${stackId}`);\n    return true;\n  } catch (error) {\n    console.error(`Error destroying stack ${stackId}:`, error);\n    throw error;\n  }\n}\nclass StackRuntimeUpdater {\n  updateInterval = null;\n  isUpdating = false;\n  start(intervalMinutes = 2) {\n    if (this.updateInterval) return;\n    this.updateInterval = setInterval(\n      async () => {\n        if (this.isUpdating) return;\n        this.isUpdating = true;\n        try {\n          await this.updateAllStacksRuntimeInfo();\n        } catch (error) {\n          console.error(\"Background stack runtime update failed:\", error);\n        } finally {\n          this.isUpdating = false;\n        }\n      },\n      intervalMinutes * 60 * 1e3\n    );\n    console.log(`Stack runtime updater started (${intervalMinutes}m interval)`);\n  }\n  stop() {\n    if (this.updateInterval) {\n      clearInterval(this.updateInterval);\n      this.updateInterval = null;\n    }\n  }\n  async updateAllStacksRuntimeInfo() {\n    try {\n      const stacks = await listStacksFromDb();\n      console.log(`Background updating runtime info for ${stacks.length} stacks`);\n      for (const stack of stacks) {\n        try {\n          await this.updateSingleStackRuntimeInfo(stack.id);\n        } catch (error) {\n          console.warn(`Failed to update runtime info for stack ${stack.id}:`, error);\n        }\n      }\n      stackCache.delete(\"compose-stacks\");\n    } catch (error) {\n      console.error(\"Background runtime update failed:\", error);\n    }\n  }\n  async updateSingleStackRuntimeInfo(stackId) {\n    const stack = await getStackByIdFromDb(stackId);\n    if (!stack) return;\n    let composeContent = stack.composeContent;\n    if (!composeContent) {\n      const composePath = await getComposeFilePath(stackId);\n      if (composePath) {\n        composeContent = await promises.readFile(composePath, \"utf8\");\n        await updateStackContentInDb(stackId, { composeContent });\n      }\n    }\n    const services = await getStackServices(stackId, composeContent || \"\");\n    const serviceCount = services.length;\n    const runningCount = services.filter((s) => s.state?.Running).length;\n    let status = \"stopped\";\n    if (serviceCount === 0) {\n      status = \"unknown\";\n    } else if (runningCount === serviceCount) {\n      status = \"running\";\n    } else if (runningCount > 0) {\n      status = \"partially running\";\n    }\n    await updateStackRuntimeInfoInDb(stackId, {\n      status,\n      serviceCount,\n      runningCount,\n      lastPolled: /* @__PURE__ */ new Date()\n    });\n  }\n}\nasync function waitForDependency(stackId, depServiceName, condition = \"service_started\", timeout = 3e4, restart = false) {\n  const docker = await getDockerClient();\n  const pollInterval = 1e3;\n  const startTime = Date.now();\n  console.log(`Waiting for dependency '${depServiceName}' with condition '${condition}' for stack ${stackId} (timeout: ${timeout}ms)`);\n  while (Date.now() - startTime < timeout) {\n    try {\n      const containers = await docker.listContainers({\n        all: true,\n        filters: JSON.stringify({\n          label: [`com.docker.compose.project=${stackId}`, `com.docker.compose.service=${depServiceName}`]\n        })\n      });\n      if (containers.length === 0) {\n        await new Promise((resolve) => setTimeout(resolve, pollInterval));\n        continue;\n      }\n      const depContainer = containers[0];\n      const conditionMet = await checkDependencyCondition(docker, depContainer, condition);\n      if (conditionMet.satisfied) {\n        console.log(`Dependency '${depServiceName}' satisfied condition '${condition}': ${conditionMet.reason}`);\n        return;\n      }\n      if (restart && conditionMet.shouldRestart) {\n        console.log(`Restarting dependency '${depServiceName}' due to: ${conditionMet.reason}`);\n        try {\n          const container = docker.getContainer(depContainer.Id);\n          await container.restart();\n          console.log(`Restarted dependency container '${depServiceName}'`);\n        } catch (restartError) {\n          console.warn(`Failed to restart dependency '${depServiceName}':`, restartError);\n        }\n      }\n      await new Promise((resolve) => setTimeout(resolve, pollInterval));\n    } catch (error) {\n      console.warn(`Error checking dependency ${depServiceName}:`, error);\n      await new Promise((resolve) => setTimeout(resolve, pollInterval));\n    }\n  }\n  const message = `Timeout waiting for dependency '${depServiceName}' with condition '${condition}' for stack ${stackId} (${timeout}ms)`;\n  console.warn(message);\n  if (condition === \"service_healthy\" || condition === \"service_completed_successfully\") {\n    throw new Error(message);\n  }\n}\nasync function checkDependencyCondition(docker, containerInfo, condition) {\n  switch (condition) {\n    case \"service_started\":\n      return {\n        satisfied: containerInfo.State === \"running\",\n        reason: containerInfo.State === \"running\" ? \"Container is running\" : `Container state: ${containerInfo.State}`,\n        shouldRestart: false\n      };\n    case \"service_healthy\":\n      if (containerInfo.State !== \"running\") {\n        return {\n          satisfied: false,\n          reason: `Container not running (state: ${containerInfo.State})`,\n          shouldRestart: containerInfo.State === \"exited\"\n        };\n      }\n      try {\n        const container = docker.getContainer(containerInfo.Id);\n        const details = await container.inspect();\n        if (!details.State.Health) {\n          return {\n            satisfied: true,\n            reason: \"No healthcheck defined, considering running container as healthy\",\n            shouldRestart: false\n          };\n        }\n        const healthStatus = details.State.Health.Status;\n        const isHealthy = healthStatus === \"healthy\";\n        return {\n          satisfied: isHealthy,\n          reason: `Health status: ${healthStatus}${details.State.Health.Log ? ` (last check: ${details.State.Health.Log[details.State.Health.Log.length - 1]?.Output?.trim() || \"no output\"})` : \"\"}`,\n          shouldRestart: healthStatus === \"unhealthy\"\n        };\n      } catch (inspectError) {\n        return {\n          satisfied: false,\n          reason: `Failed to inspect container: ${inspectError instanceof Error ? inspectError.message : String(inspectError)}`,\n          shouldRestart: false\n        };\n      }\n    case \"service_completed_successfully\":\n      if (containerInfo.State === \"exited\") {\n        try {\n          const container = docker.getContainer(containerInfo.Id);\n          const details = await container.inspect();\n          const exitCode = details.State.ExitCode;\n          return {\n            satisfied: exitCode === 0,\n            reason: `Container exited with code ${exitCode}`,\n            shouldRestart: exitCode !== 0\n          };\n        } catch (inspectError) {\n          return {\n            satisfied: false,\n            reason: `Failed to inspect exited container: ${inspectError instanceof Error ? inspectError.message : String(inspectError)}`,\n            shouldRestart: false\n          };\n        }\n      } else if (containerInfo.State === \"running\") {\n        return {\n          satisfied: false,\n          reason: \"Container is still running, waiting for completion\",\n          shouldRestart: false\n        };\n      } else {\n        return {\n          satisfied: false,\n          reason: `Container in unexpected state for completion check: ${containerInfo.State}`,\n          shouldRestart: true\n        };\n      }\n    default:\n      return {\n        satisfied: false,\n        reason: `Unknown dependency condition: ${condition}`,\n        shouldRestart: false\n      };\n  }\n}\nconst stackRuntimeUpdater = new StackRuntimeUpdater();\nasync function getStackProfiles(stackId) {\n  try {\n    const composePath = await getComposeFilePath(stackId);\n    if (!composePath) {\n      throw new Error(`Compose file not found for stack ${stackId}`);\n    }\n    const composeContent = await promises.readFile(composePath, \"utf8\");\n    const envContent = await loadEnvFile(stackId);\n    const envVars = parseEnvContent(envContent);\n    const getEnvVar = (key) => envVars[key] || process.env[key];\n    const composeData = parseYamlContent(composeContent, getEnvVar);\n    if (!composeData) {\n      throw new Error(`Failed to parse compose file for stack ${stackId}`);\n    }\n    const allProfiles = getAllDefinedProfiles(composeData);\n    const stats = getProfileUsageStats(composeData);\n    const help = generateProfileHelp(composeData);\n    return {\n      allProfiles,\n      stats,\n      help\n    };\n  } catch (error) {\n    console.error(`Error getting profiles for stack ${stackId}:`, error);\n    throw error;\n  }\n}\nasync function previewStackDeployment(stackId, profiles = []) {\n  try {\n    const composePath = await getComposeFilePath(stackId);\n    if (!composePath) {\n      throw new Error(`Compose file not found for stack ${stackId}`);\n    }\n    const composeContent = await promises.readFile(composePath, \"utf8\");\n    const envContent = await loadEnvFile(stackId);\n    const envVars = parseEnvContent(envContent);\n    const getEnvVar = (key) => envVars[key] || process.env[key];\n    const composeData = parseYamlContent(composeContent, getEnvVar);\n    if (!composeData) {\n      throw new Error(`Failed to parse compose file for stack ${stackId}`);\n    }\n    const activeProfiles = profiles.length ? profiles : parseActiveProfiles([], envVars);\n    const deploymentPlan = createProfileDeploymentPlan(composeData, activeProfiles);\n    const profileInfo = await getStackProfiles(stackId);\n    return {\n      deploymentPlan,\n      profileInfo\n    };\n  } catch (error) {\n    console.error(`Error previewing deployment for stack ${stackId}:`, error);\n    throw error;\n  }\n}\nasync function detectStackChanges(stackId) {\n  try {\n    const composePath = await getComposeFilePath(stackId);\n    if (!composePath) {\n      throw new Error(`Compose file not found for stack ${stackId}`);\n    }\n    const composeContent = await promises.readFile(composePath, \"utf8\");\n    const envContent = await loadEnvFile(stackId);\n    const envVars = parseEnvContent(envContent);\n    const getEnvVar = (key) => envVars[key] || process.env[key];\n    const composeData = parseYamlContent(composeContent, getEnvVar);\n    if (!composeData || !composeData.services) {\n      return { hasChanges: false, changedServices: [], newServices: [], removedServices: [] };\n    }\n    const docker = await getDockerClient();\n    const containers = await docker.listContainers({\n      all: true,\n      filters: JSON.stringify({\n        label: [`com.docker.compose.project=${stackId}`]\n      })\n    });\n    const runningServices = /* @__PURE__ */ new Map();\n    for (const container of containers) {\n      const serviceName = container.Labels?.[\"com.docker.compose.service\"];\n      const configHash = container.Labels?.[\"com.docker.compose.config-hash\"];\n      if (serviceName && configHash) {\n        runningServices.set(serviceName, configHash);\n      }\n    }\n    const changedServices = [];\n    const newServices = [];\n    const currentServices = /* @__PURE__ */ new Set();\n    for (const [serviceName, serviceConfig] of Object.entries(composeData.services)) {\n      currentServices.add(serviceName);\n      const currentHash = generateConfigHash(serviceConfig);\n      if (runningServices.has(serviceName)) {\n        const runningHash = runningServices.get(serviceName);\n        if (runningHash !== currentHash) {\n          changedServices.push(serviceName);\n        }\n      } else {\n        newServices.push(serviceName);\n      }\n    }\n    const removedServices = Array.from(runningServices.keys()).filter((service) => !currentServices.has(service));\n    const hasChanges = changedServices.length > 0 || newServices.length > 0 || removedServices.length > 0;\n    return {\n      hasChanges,\n      changedServices,\n      newServices,\n      removedServices\n    };\n  } catch (error) {\n    console.error(`Error detecting changes for stack ${stackId}:`, error);\n    throw error;\n  }\n}\nasync function validateStackConfiguration(stackId, mode = \"default\") {\n  try {\n    const composePath = await getComposeFilePath(stackId);\n    if (!composePath) {\n      return {\n        valid: false,\n        errors: [\"Compose file not found\"],\n        warnings: []\n      };\n    }\n    const composeContent = await promises.readFile(composePath, \"utf8\");\n    const envContent = await loadEnvFile(stackId);\n    const validation = await validateComposeConfiguration(composeContent, envContent, mode);\n    return validation;\n  } catch (error) {\n    return {\n      valid: false,\n      errors: [`Validation failed: ${error instanceof Error ? error.message : String(error)}`],\n      warnings: []\n    };\n  }\n}\nexport {\n  StackRuntimeUpdater,\n  createStack,\n  deployStack,\n  destroyStack,\n  detectStackChanges,\n  discoverExternalStacks,\n  ensureStacksDir,\n  getComposeFilePath,\n  getStack,\n  getStackDir,\n  getStackProfiles,\n  importExternalStack,\n  initComposeService,\n  isStackRunning,\n  listStacks,\n  loadComposeStacks,\n  loadEnvFile,\n  previewStackDeployment,\n  redeployStack,\n  renameStack,\n  restartStack,\n  stackRuntimeUpdater,\n  startStack,\n  stopStack,\n  updateStack,\n  validateStackConfiguration\n};\n"],"names":[],"mappings":"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"}