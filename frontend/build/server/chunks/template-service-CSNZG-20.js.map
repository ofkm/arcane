{"version":3,"file":"template-service-CSNZG-20.js","sources":["../../../.svelte-kit/adapter-node/chunks/template-service.js"],"sourcesContent":["import { promises } from \"node:fs\";\nimport * as path from \"node:path\";\nimport { t as templateRegistryService } from \"./template-registry-service.js\";\nimport { g as getSettings, s as saveSettings } from \"./settings-service.js\";\nclass TemplateService {\n  static templatesDir = path.join(process.cwd(), \"data/templates\");\n  static composeTemplatesDir = path.join(this.templatesDir, \"compose\");\n  static envTemplateFile = path.join(this.templatesDir, \".env.template\");\n  /**\n   * Get all available compose templates from the file system\n   */\n  static async getComposeTemplates() {\n    try {\n      await this.ensureDirectoriesExist();\n      const files = await promises.readdir(this.composeTemplatesDir);\n      const yamlFiles = files.filter((file) => (file.endsWith(\".yaml\") || file.endsWith(\".yml\")) && !file.startsWith(\".\"));\n      const templates = [];\n      for (const file of yamlFiles) {\n        const filePath = path.join(this.composeTemplatesDir, file);\n        const content = await promises.readFile(filePath, \"utf8\");\n        const id = path.basename(file, path.extname(file));\n        const description = this.extractDescriptionFromFile(content);\n        const envContent = await this.loadTemplateEnvFile(id);\n        templates.push({\n          id,\n          name: this.formatTemplateName(id),\n          description: description || \"Custom Docker Compose template\",\n          content,\n          envContent,\n          isCustom: true,\n          isRemote: false\n        });\n      }\n      return templates.sort((a, b) => a.name.localeCompare(b.name));\n    } catch (error) {\n      console.error(\"Error loading compose templates:\", error);\n      return [];\n    }\n  }\n  /**\n   * Load environment file for a specific template\n   */\n  static async loadTemplateEnvFile(templateId) {\n    const envPath = path.join(this.composeTemplatesDir, `${templateId}.env`);\n    try {\n      return await promises.readFile(envPath, \"utf8\");\n    } catch (error) {\n      return void 0;\n    }\n  }\n  /**\n   * Get the .env template content if it exists\n   */\n  static async getEnvTemplate() {\n    try {\n      await this.ensureDirectoriesExist();\n      return await promises.readFile(this.envTemplateFile, \"utf8\");\n    } catch (error) {\n      console.log(\"No .env template found, using default\");\n      return this.getDefaultEnvTemplate();\n    }\n  }\n  /**\n   * Create a new template from content\n   */\n  static async createTemplate(name, content, description, envContent) {\n    if (!name || name.trim() === \"\") {\n      throw new Error(\"Template name cannot be empty\");\n    }\n    if (!content || content.trim() === \"\") {\n      throw new Error(\"Template content cannot be empty\");\n    }\n    const trimmedContent = content.trim();\n    if (!trimmedContent.startsWith(\"version:\") && !trimmedContent.startsWith(\"services:\")) {\n      console.warn(\"Template content may not be valid Docker Compose YAML - missing version or services section\");\n    }\n    await this.ensureDirectoriesExist();\n    const sanitizedName = name.toLowerCase().replace(/[^a-z0-9\\s-_]/g, \"\").replace(/\\s+/g, \"-\").replace(/[-_]+/g, \"-\").replace(/^-+|-+$/g, \"\");\n    if (!sanitizedName) {\n      throw new Error(\"Template name contains no valid characters\");\n    }\n    const baseFilename = sanitizedName;\n    let filename = `${baseFilename}.yaml`;\n    let envFilename = `${baseFilename}.env`;\n    let counter = 1;\n    while (await this.fileExists(path.join(this.composeTemplatesDir, filename))) {\n      filename = `${baseFilename}-${counter}.yaml`;\n      envFilename = `${baseFilename}-${counter}.env`;\n      counter++;\n    }\n    const filePath = path.join(this.composeTemplatesDir, filename);\n    let fileContent = content;\n    if (description && description.trim()) {\n      const descriptionLines = description.trim().split(\"\\n\");\n      const commentBlock = descriptionLines.map((line) => `# ${line}`).join(\"\\n\");\n      fileContent = `${commentBlock}\n#\n${content}`;\n    }\n    await promises.writeFile(filePath, fileContent, \"utf8\");\n    if (envContent && envContent.trim()) {\n      const envFilePath = path.join(this.composeTemplatesDir, envFilename);\n      if (!await this.fileExists(envFilePath)) {\n        await promises.writeFile(envFilePath, envContent, \"utf8\");\n      }\n    }\n  }\n  /**\n   * Helper method to check if a file exists\n   */\n  static async fileExists(filePath) {\n    try {\n      await promises.access(filePath);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  /**\n   * Delete a template\n   */\n  static async deleteTemplate(id) {\n    const possibleExtensions = [\".yaml\", \".yml\"];\n    let deleted = false;\n    for (const ext of possibleExtensions) {\n      const filePath = path.join(this.composeTemplatesDir, `${id}${ext}`);\n      try {\n        await promises.unlink(filePath);\n        deleted = true;\n        break;\n      } catch (error) {\n      }\n    }\n    try {\n      const envFilePath = path.join(this.composeTemplatesDir, `${id}.env`);\n      await promises.unlink(envFilePath);\n    } catch (error) {\n    }\n    if (!deleted) {\n      throw new Error(`Template with id \"${id}\" not found`);\n    }\n  }\n  /**\n   * Get template directory path for users to add their own templates\n   */\n  static getTemplateDirectoryPath() {\n    return this.composeTemplatesDir;\n  }\n  /**\n   * Get env template file path\n   */\n  static getEnvTemplateFilePath() {\n    return this.envTemplateFile;\n  }\n  /**\n   * Ensure template directories exist\n   */\n  static async ensureDirectoriesExist() {\n    try {\n      await promises.mkdir(this.templatesDir, { recursive: true });\n      await promises.mkdir(this.composeTemplatesDir, { recursive: true });\n      const readmePath = path.join(this.templatesDir, \"README.md\");\n      try {\n        await promises.access(readmePath);\n      } catch {\n        await this.createReadmeFile();\n      }\n    } catch (error) {\n      console.error(\"Error ensuring template directories exist:\", error);\n    }\n  }\n  /**\n   * Create a helpful README file for users\n   */\n  static async createReadmeFile() {\n    const readmeContent = `# Arcane Templates\n\nThis directory contains templates for creating Docker Compose stacks.\n\n## Directory Structure\n\n- \\`compose/\\` - Docker Compose template files (.yaml or .yml)\n- \\`.env.template\\` - Default environment variables template\n\n## Adding Templates\n\n1. **Local Templates**: Place your Docker Compose files in the \\`compose/\\` directory\n   - Use \\`.yaml\\` or \\`.yml\\` extension\n   - Optionally add a matching \\`.env\\` file with the same name (e.g., \\`my-app.yaml\\` and \\`my-app.env\\`)\n   - Add a comment at the top to describe the template:\n     \\`\\`\\`yaml\n     # My Custom Application Stack\n     services:\n       app:\n         image: nginx:alpine\n         # ... rest of your compose file\n     \\`\\`\\`\n\n2. **Template Environment Files**: Create \\`.env\\` files alongside your templates\n   - File name should match your template: \\`wordpress.yaml\\` → \\`wordpress.env\\`\n   - These will be loaded automatically when the template is selected\n   - Example structure:\n     \\`\\`\\`\n     compose/\n     ├── wordpress.yaml\n     ├── wordpress.env\n     ├── nextjs.yaml\n     └── nextjs.env\n     \\`\\`\\`\n\n3. **Remote Templates**: Configure remote registries in the Template Settings page\n   - Access community-maintained templates\n   - Automatically synced from registry sources\n   - Can include both compose and environment files\n\n4. **Environment Template**: Create or edit \\`.env.template\\` to set default environment variables\n   - This will be used as fallback when templates don't provide their own environment\n   - Use KEY=value format\n\n## Template Naming\n\n- File names will be converted to display names\n- \\`my-web-app.yaml\\` becomes \"My Web App\"\n- Use hyphens or underscores to separate words\n\n## Example Templates\n\nYou can find example templates in community registries or create your own:\n- wordpress.yaml + wordpress.env - WordPress with MySQL\n- nextjs.yaml + nextjs.env - Next.js application\n- postgres.yaml + postgres.env - PostgreSQL database\n\nAll templates added here will automatically appear in the Arcane UI when creating new stacks.\n`;\n    await promises.writeFile(path.join(this.templatesDir, \"README.md\"), readmeContent, \"utf8\");\n  }\n  /**\n   * Extract description from file comment\n   */\n  static extractDescriptionFromFile(content) {\n    const lines = content.split(\"\\n\");\n    const firstLine = lines[0]?.trim();\n    if (firstLine?.startsWith(\"#\")) {\n      return firstLine.substring(1).trim();\n    }\n    return null;\n  }\n  /**\n   * Format template name for display\n   */\n  static formatTemplateName(id) {\n    return id.split(/[-_]/).map((word) => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \");\n  }\n  /**\n   * Get default .env template content\n   */\n  static getDefaultEnvTemplate() {\n    return `# Environment Variables\n# These variables will be available to your stack services\n# Format: VARIABLE_NAME=value\n\n# Web Server Configuration\nNGINX_HOST=localhost\nNGINX_PORT=80\n\n# Database Configuration\nPOSTGRES_DB=myapp\nPOSTGRES_USER=myuser\nPOSTGRES_PASSWORD=mypassword\nPOSTGRES_PORT=5432\n\n# Example Additional Variables\n# API_KEY=your_api_key_here\n# SECRET_KEY=your_secret_key_here\n# DEBUG=false\n`;\n  }\n  /**\n   * Load all templates (local and remote)\n   */\n  async loadAllTemplates() {\n    const templates = [];\n    templates.push(...await this.loadLocalTemplates());\n    templates.push(...await this.loadRemoteTemplates());\n    return templates;\n  }\n  /**\n   * Load local templates from the file system\n   */\n  async loadLocalTemplates() {\n    try {\n      await TemplateService.ensureDirectoriesExist();\n      const files = await promises.readdir(TemplateService.composeTemplatesDir);\n      const yamlFiles = files.filter((file) => (file.endsWith(\".yaml\") || file.endsWith(\".yml\")) && !file.startsWith(\".\"));\n      const templates = [];\n      for (const file of yamlFiles) {\n        const filePath = path.join(TemplateService.composeTemplatesDir, file);\n        const content = await promises.readFile(filePath, \"utf8\");\n        const id = path.basename(file, path.extname(file));\n        const description = TemplateService.extractDescriptionFromFile(content);\n        const envContent = await TemplateService.loadTemplateEnvFile(id);\n        templates.push({\n          id,\n          name: TemplateService.formatTemplateName(id),\n          description: description || \"Custom Docker Compose template\",\n          content,\n          envContent,\n          isCustom: true,\n          isRemote: false\n        });\n      }\n      return templates.sort((a, b) => a.name.localeCompare(b.name));\n    } catch (error) {\n      console.error(\"Error loading local templates:\", error);\n      return [];\n    }\n  }\n  /**\n   * Load remote templates\n   */\n  async loadRemoteTemplates() {\n    const templates = [];\n    const settings = await getSettings();\n    const registryConfigs = settings.templateRegistries || [];\n    for (const config of registryConfigs) {\n      if (!config.enabled) continue;\n      const registry = await templateRegistryService.fetchRegistry(config);\n      if (!registry) continue;\n      for (const remoteTemplate of registry.templates) {\n        const template = templateRegistryService.convertToComposeTemplate(remoteTemplate, config.name);\n        templates.push(template);\n      }\n    }\n    return templates;\n  }\n  /**\n   * Load template content and environment\n   */\n  async loadTemplateContent(template) {\n    if (template.isRemote && template.metadata?.remoteUrl) {\n      const content = await templateRegistryService.fetchTemplateContent({\n        id: template.id,\n        name: template.name,\n        description: template.description,\n        version: template.metadata.version || \"1.0.0\",\n        compose_url: template.metadata.remoteUrl,\n        env_url: template.metadata.envUrl,\n        updated_at: template.metadata.updatedAt || (/* @__PURE__ */ new Date()).toISOString()\n      });\n      let envContent;\n      if (template.metadata.envUrl) {\n        try {\n          envContent = await templateRegistryService.fetchEnvContent(template.metadata.envUrl) || void 0;\n        } catch (error) {\n          if (error instanceof Error && !error.message.includes(\"404\") && !error.message.includes(\"Not Found\")) {\n            console.error(\"Error fetching env content:\", error);\n          }\n          envContent = void 0;\n        }\n      }\n      return {\n        content: content || template.content,\n        envContent: envContent || template.envContent\n      };\n    }\n    return {\n      content: template.content,\n      envContent: template.envContent\n    };\n  }\n  /**\n   * Load just the compose content for a template (without env file)\n   */\n  async loadComposeContent(template) {\n    if (!template.isRemote) {\n      return template.content;\n    }\n    if (!template.metadata?.remoteUrl) {\n      throw new Error(\"Remote template missing compose URL\");\n    }\n    const remoteTemplate = {\n      id: template.id,\n      name: template.name,\n      description: template.description,\n      version: template.metadata.version || \"1.0.0\",\n      compose_url: template.metadata.remoteUrl,\n      env_url: template.metadata.envUrl,\n      updated_at: template.metadata.updatedAt || (/* @__PURE__ */ new Date()).toISOString()\n    };\n    const content = await templateRegistryService.fetchTemplateContent(remoteTemplate);\n    if (!content) {\n      throw new Error(\"Failed to fetch template content\");\n    }\n    return content;\n  }\n  /**\n   * Add a registry configuration\n   */\n  async addRegistry(config) {\n    const settings = await getSettings();\n    settings.templateRegistries = settings.templateRegistries || [];\n    const isDuplicate = settings.templateRegistries.some((existingRegistry) => existingRegistry.url === config.url);\n    if (!isDuplicate) {\n      settings.templateRegistries.push(config);\n    }\n    await saveSettings(settings);\n  }\n  /**\n   * Remove a registry configuration\n   */\n  async removeRegistry(url) {\n    const settings = await getSettings();\n    settings.templateRegistries = (settings.templateRegistries || []).filter((c) => c.url !== url);\n    await saveSettings(settings);\n  }\n  /**\n   * Update a registry configuration\n   */\n  async updateRegistry(url, updates) {\n    const settings = await getSettings();\n    const registryIndex = (settings.templateRegistries || []).findIndex((c) => c.url === url);\n    if (registryIndex !== -1) {\n      settings.templateRegistries[registryIndex] = {\n        ...settings.templateRegistries[registryIndex],\n        ...updates\n      };\n      await saveSettings(settings);\n    }\n  }\n  /**\n   * Get all registry configurations\n   */\n  async getRegistries() {\n    const settings = await getSettings();\n    return settings.templateRegistries || [];\n  }\n}\nexport {\n  TemplateService as T\n};\n"],"names":[],"mappings":"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"}